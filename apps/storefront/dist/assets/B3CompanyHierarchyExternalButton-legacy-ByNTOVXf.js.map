{"version":3,"file":"B3CompanyHierarchyExternalButton-legacy-ByNTOVXf.js","sources":["../../src/components/outSideComponents/B3CompanyHierarchyExternalButton.tsx","../../../../node_modules/@mui/icons-material/Business.js"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport { Box, SnackbarOrigin, SxProps } from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\n\nimport { PAGES_SUBSIDIARIES_PERMISSION_KEYS, PATH_ROUTES, Z_INDEX } from '@/constants';\nimport useMobile from '@/hooks/useMobile';\nimport { type SetOpenPage } from '@/pages/SetOpenPage';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { setOpenCompanyHierarchyDropDown, useAppDispatch, useAppSelector } from '@/store';\nimport { PagesSubsidiariesPermissionProps } from '@/types';\n\nimport {\n  getContrastColor,\n  getLocation,\n  getPosition,\n  getStyles,\n  setMUIMediaStyle,\n  splitCustomCssValue,\n} from './utils/b3CustomStyles';\n\nconst bottomHeightPage = ['shoppingList/', 'purchased-products'];\n\ninterface B3CompanyHierarchyExternalButtonProps {\n  isOpen: boolean;\n  setOpenPage: SetOpenPage;\n}\nfunction B3CompanyHierarchyExternalButton({\n  setOpenPage,\n  isOpen,\n}: B3CompanyHierarchyExternalButtonProps) {\n  const b3Lang = useB3Lang();\n\n  const { hash } = window.location;\n\n  const [isMobile] = useMobile();\n\n  const dispatch = useAppDispatch();\n\n  const { selectCompanyHierarchyId, companyHierarchyList } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const { pagesSubsidiariesPermission } = useAppSelector(({ company }) => company);\n\n  const isAddBottom = bottomHeightPage.some((item: string) => hash.includes(item));\n\n  const {\n    state: { switchAccountButton },\n  } = useContext(CustomStyleContext);\n\n  const defaultLocation: SnackbarOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left',\n  };\n\n  const {\n    color = '',\n    customCss = '',\n    location = 'bottomLeft',\n    horizontalPadding = '',\n    verticalPadding = '',\n  } = switchAccountButton;\n\n  const cssInfo = splitCustomCssValue(customCss);\n  const {\n    cssValue,\n    mediaBlocks,\n  }: {\n    cssValue: string;\n    mediaBlocks: string[];\n  } = cssInfo;\n  const MUIMediaStyle = setMUIMediaStyle(mediaBlocks);\n\n  const baseStyles: SxProps = {\n    backgroundColor: color || '#ED6C02',\n    color: getContrastColor(color || '#FFFFFF'),\n    bottom: 0,\n    ...getStyles(cssValue),\n  };\n\n  const desktopStyles: SxProps = isAddBottom ? { bottom: '90px !important' } : {};\n  const buyerPortalStyles: SxProps = {\n    bottom: '24px',\n    left: '24px',\n    right: 'auto',\n    top: 'unset',\n  };\n  const mobileOpenStyles: SxProps = {\n    width: '100%',\n    bottom: 0,\n    left: 0,\n  };\n\n  let sx: SxProps = { ...baseStyles };\n\n  if (isMobile) {\n    if (isOpen) {\n      sx = { ...sx, ...mobileOpenStyles };\n    } else {\n      sx = { ...sx, ...getPosition(horizontalPadding, verticalPadding, location) };\n    }\n  } else if (isOpen) {\n    sx = { ...sx, ...buyerPortalStyles, ...desktopStyles };\n  } else {\n    sx = { ...sx, ...getPosition(horizontalPadding, verticalPadding, location), ...desktopStyles };\n  }\n\n  const companyName: string = useMemo(() => {\n    if (!selectCompanyHierarchyId) {\n      return '';\n    }\n\n    return (\n      companyHierarchyList.find((company) => company.companyId === Number(selectCompanyHierarchyId))\n        ?.companyName || ''\n    );\n  }, [selectCompanyHierarchyId, companyHierarchyList]);\n\n  const handleHierarchyExternalBtnClick = () => {\n    const { companyHierarchy } = pagesSubsidiariesPermission;\n\n    if (companyHierarchy) {\n      const { COMPANY_HIERARCHY } = PATH_ROUTES;\n\n      setOpenPage({\n        isOpen: true,\n        openUrl: COMPANY_HIERARCHY,\n      });\n\n      return;\n    }\n\n    const key = Object.keys(pagesSubsidiariesPermission).find((key) => {\n      return !!pagesSubsidiariesPermission[key as keyof PagesSubsidiariesPermissionProps];\n    });\n\n    const route = PAGES_SUBSIDIARIES_PERMISSION_KEYS.find((item) => item.key === key);\n\n    if (route && !isOpen) {\n      setOpenPage({\n        isOpen: true,\n        openUrl: route.path,\n      });\n    }\n    dispatch(setOpenCompanyHierarchyDropDown(true));\n  };\n\n  return (\n    <>\n      {!!companyName && (\n        <Snackbar\n          sx={{\n            zIndex: Z_INDEX.NOTIFICATION,\n            height: '52px',\n            borderRadius: '4px',\n            fontSize: '16px',\n            fontFamily: '\"Roboto\",\"Helvetica\",\"Arial\",sans-serif',\n            mb: isMobile ? '4rem' : '0px',\n            ...sx,\n            ...MUIMediaStyle,\n          }}\n          anchorOrigin={getLocation(location) || defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              padding: '1rem 2rem',\n              borderRadius: '4px',\n              fontSize: '16px',\n              cursor: 'pointer',\n            }}\n            onClick={() => handleHierarchyExternalBtnClick()}\n          >\n            <BusinessIcon sx={{ fontSize: '20px' }} />\n            <Box\n              sx={{\n                margin: '0 0.5rem',\n              }}\n            >\n              {b3Lang('global.companyHierarchy.externalBtn')}\n            </Box>\n            <Box\n              sx={{\n                fontWeight: 'bold',\n              }}\n            >\n              {companyName}\n            </Box>\n          </Box>\n        </Snackbar>\n      )}\n    </>\n  );\n}\n\nexport default B3CompanyHierarchyExternalButton;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7V3H2v18h20V7zM6 19H4v-2h2zm0-4H4v-2h2zm0-4H4V9h2zm0-4H4V5h2zm4 12H8v-2h2zm0-4H8v-2h2zm0-4H8V9h2zm0-4H8V5h2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8zm-2-8h-2v2h2zm0 4h-2v2h2z\"\n}), 'Business');"],"names":["setOpenPage","isOpen","b3Lang","useB3Lang","hash","window","location","isMobile","useMobile","dispatch","useAppDispatch","selectCompanyHierarchyId","companyHierarchyList","useAppSelector","company","companyHierarchyInfo","pagesSubsidiariesPermission","isAddBottom","bottomHeightPage","some","item","includes","state","switchAccountButton","useContext","CustomStyleContext","color","customCss","horizontalPadding","verticalPadding","cssInfo","splitCustomCssValue","cssValue","mediaBlocks","MUIMediaStyle","setMUIMediaStyle","baseStyles","backgroundColor","getContrastColor","bottom","getStyles","desktopStyles","buyerPortalStyles","left","right","top","mobileOpenStyles","width","sx","getPosition","companyName","useMemo","find","companyId","Number","jsx","Fragment","children","Snackbar","zIndex","Z_INDEX","NOTIFICATION","height","borderRadius","fontSize","fontFamily","mb","anchorOrigin","getLocation","vertical","horizontal","open","jsxs","Box","display","alignItems","padding","cursor","onClick","handleHierarchyExternalBtnClick","companyHierarchy","COMPANY_HIERARCHY","PATH_ROUTES","openUrl","key","Object","keys","route","PAGES_SUBSIDIARIES_PERMISSION_KEYS","path","setOpenCompanyHierarchyDropDown","BusinessIcon","margin","fontWeight","_interopRequireDefault","require$$0","defineProperty","Business","value","default_1","default","_createSvgIcon","require$$1","_jsxRuntime","require$$2","d"],"mappings":"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","x_google_ignoreList":[1]}