{"version":3,"file":"B3Layout-legacy-DwetT2Rz.js","sources":["../../src/components/layout/B3Layout.tsx","../../src/components/CompanyCredit.tsx","../../src/components/layout/B3CloseAppButton.tsx","../../src/components/layout/B3Logo.tsx","../../../../node_modules/@mui/icons-material/ArrowDropDown.js","../../../../node_modules/@mui/icons-material/ArrowDropUp.js","../../src/components/B3DropDown.tsx","../../src/components/layout/B3AccountInfo.tsx","../../../../node_modules/@mui/icons-material/Check.js","../../src/components/layout/B3CompanyHierarchy.tsx","../../src/components/layout/B3StatusNotification.tsx","../../src/components/layout/B3MainHeader.tsx","../../src/components/layout/B3Nav.tsx","../../src/components/layout/B3MobileLayout.tsx"],"sourcesContent":["import { ReactNode, useContext, useEffect, useMemo, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, useMediaQuery } from '@mui/material';\n\nimport useMobile from '@/hooks/useMobile';\nimport { DynamicallyVariableContext } from '@/shared/dynamicallyVariable';\nimport { getIsTokenGotoPage, routes } from '@/shared/routes';\nimport { useAppSelector } from '@/store';\n\nimport B3Dialog from '../B3Dialog';\nimport CompanyCredit from '../CompanyCredit';\n\nimport B3CloseAppButton from './B3CloseAppButton';\nimport B3Logo from './B3Logo';\nimport B3MainHeader from './B3MainHeader';\nimport B3MobileLayout from './B3MobileLayout';\nimport B3Nav from './B3Nav';\n\nconst SPECIAL_PATH_TEXTS = {\n  '/purchased-products': 'global.purchasedProducts.title',\n  '/orders': 'global.orders.title',\n  '/company-orders': 'global.companyOrders.title',\n} as const;\n\nexport default function B3Layout({ children }: { children: ReactNode }) {\n  const [isMobile] = useMobile();\n  const isDesktopLimit = useMediaQuery('(min-width:1775px)');\n\n  const location = useLocation();\n\n  const [title, setTitle] = useState<string>('');\n\n  const b3Lang = useB3Lang();\n\n  const emailAddress = useAppSelector(({ company }) => company.customer.emailAddress);\n  const customerId = useAppSelector(({ company }) => company.customer.id);\n\n  const {\n    state: { globalMessageDialog },\n    dispatch,\n  } = useContext(DynamicallyVariableContext);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if ((!emailAddress || !customerId) && !getIsTokenGotoPage(location.pathname)) {\n      navigate('/login');\n    }\n  }, [emailAddress, customerId, location, navigate]);\n\n  useEffect(() => {\n    const itemsRoutes = routes.find((item) => item.path === location.pathname);\n    if (itemsRoutes && location.pathname !== '/quoteDraft') {\n      const foundPath = Object.entries(SPECIAL_PATH_TEXTS).find(\n        ([specialPath]) => specialPath === location.pathname,\n      );\n      if (foundPath) {\n        setTitle(b3Lang(foundPath[1]));\n      } else {\n        setTitle(b3Lang(itemsRoutes.idLang));\n      }\n    } else {\n      setTitle('');\n    }\n    dispatch({\n      type: 'common',\n      payload: {\n        tipMessage: {\n          msgs: [],\n        },\n      },\n    });\n    // disabling as dispatch is not necessary in the deps\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location]);\n\n  const messageDialogClose = () => {\n    dispatch({\n      type: 'common',\n      payload: {\n        globalMessageDialog: {\n          open: false,\n          title: '',\n          message: '',\n          cancelText: 'Cancel',\n        },\n      },\n    });\n  };\n\n  const overflowStyle = useMemo(() => {\n    const overflowXHiddenPage = ['/invoice'];\n    if (overflowXHiddenPage.includes(location.pathname)) {\n      return {\n        overflowX: 'hidden',\n      };\n    }\n\n    return {};\n  }, [location]);\n\n  return (\n    <Box>\n      {isMobile ? (\n        <B3MobileLayout title={title}>{children}</B3MobileLayout>\n      ) : (\n        <Box\n          id=\"app-mainPage-layout\"\n          sx={{\n            display: 'flex',\n            minHeight: '100vh',\n            margin: 'auto',\n            width: !isDesktopLimit ? '100%' : 1775,\n            minWidth: !isDesktopLimit ? '100%' : 1775,\n            maxWidth: !isDesktopLimit ? '100%' : 1775,\n            flexDirection: 'row',\n            p: '32px 63px 70px 63px',\n          }}\n        >\n          <B3CloseAppButton />\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              width: '200px',\n              displayPrint: 'none',\n            }}\n          >\n            <B3Logo />\n            <Box\n              sx={{\n                pt: '24px',\n              }}\n            >\n              <B3Nav />\n            </Box>\n          </Box>\n\n          <Box\n            sx={{\n              flex: 1,\n              display: 'flex',\n              flexDirection: 'column',\n              maxWidth: '1450px',\n              width: '100%',\n              p: '0 0px 0px 50px',\n              ...overflowStyle,\n            }}\n          >\n            <B3MainHeader title={title} />\n            <CompanyCredit />\n            <Box\n              component=\"main\"\n              sx={{\n                mt: !isMobile && !title ? '24px' : '0',\n              }}\n            >\n              {children}\n            </Box>\n          </Box>\n        </Box>\n      )}\n\n      <B3Dialog\n        isOpen={globalMessageDialog.open}\n        title={globalMessageDialog.title}\n        leftSizeBtn={globalMessageDialog.cancelText}\n        rightSizeBtn={globalMessageDialog.saveText}\n        handleLeftClick={globalMessageDialog.cancelFn || messageDialogClose}\n        handRightClick={globalMessageDialog.saveFn}\n        showRightBtn={!!globalMessageDialog.saveText}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: isMobile ? 'center' : 'start',\n            width: isMobile ? '100%' : '450px',\n            height: '100%',\n          }}\n        >\n          {globalMessageDialog.message}\n        </Box>\n      </B3Dialog>\n    </Box>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Alert, Box } from '@mui/material';\n\nimport useStorageState from '@/hooks/useStorageState';\nimport { getCompanyCreditConfig } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\n\nconst permissionRoles = [0, 1, 2];\n\nfunction CompanyCredit() {\n  const b3Lang = useB3Lang();\n  const [isEnabled, setEnabled] = useState<boolean>(false);\n  const [isCloseCompanyCredit, setIsCloseCompanyCredit] = useStorageState<boolean>(\n    'sf-isCloseCompanyCredit',\n    false,\n    sessionStorage,\n  );\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n\n  useEffect(() => {\n    const init = async () => {\n      if (isCloseCompanyCredit) return;\n\n      if (permissionRoles.includes(Number(role)) || (Number(role) === 3 && isAgenting)) {\n        const {\n          companyCreditConfig: { creditHold, creditEnabled },\n        } = await getCompanyCreditConfig();\n\n        setEnabled(creditHold && creditEnabled);\n      }\n    };\n\n    init();\n  }, [role, isAgenting, isCloseCompanyCredit]);\n\n  const handleCompanyCreditCloseClick = () => {\n    setIsCloseCompanyCredit(true);\n    setEnabled(false);\n  };\n\n  if (!isEnabled) return null;\n\n  return (\n    <Box\n      sx={{\n        margin: '1rem 0',\n      }}\n    >\n      <Alert variant=\"filled\" onClose={() => handleCompanyCreditCloseClick()} severity=\"warning\">\n        {b3Lang('global.companyCredit.alert')}\n      </Alert>\n    </Box>\n  );\n}\n\nexport default CompanyCredit;\n","import { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport useMobile from '@/hooks/useMobile';\nimport { GlobalContext } from '@/shared/global';\nimport { useAppSelector } from '@/store';\n\nimport { CloseBox, CloseBoxMobile, CloseButton } from '../styled';\n\nexport default function B3CloseAppButton() {\n  const [isMobile] = useMobile();\n\n  const setOpenPageFn = useAppSelector(({ global }) => global.setOpenPageFn);\n\n  const {\n    state: { isCloseGotoBCHome },\n  } = useContext(GlobalContext);\n  const navigate = useNavigate();\n\n  const handleCloseForm = () => {\n    if (isCloseGotoBCHome) {\n      window.location.href = '/';\n    } else {\n      navigate('/');\n      setOpenPageFn?.({\n        isOpen: false,\n        openUrl: '',\n      });\n    }\n    window.history.replaceState(null, '', window.location.pathname || '/');\n  };\n\n  const Box = isMobile ? CloseBoxMobile : CloseBox;\n\n  return (\n    <Box>\n      <CloseButton\n        sx={{\n          color: '#757371',\n        }}\n        onClick={handleCloseForm}\n      />\n    </Box>\n  );\n}\n","import { useContext } from 'react';\nimport { Box, ImageListItem } from '@mui/material';\n\nimport { STORE_DEFAULT_LOGO } from '@/constants';\nimport { useMobile } from '@/hooks';\nimport { GlobalContext } from '@/shared/global';\nimport { useAppSelector } from '@/store';\n\nexport default function B3Logo() {\n  const {\n    state: { logo },\n  } = useContext(GlobalContext);\n  // const customer = useAppSelector(({ company }) => company.customer);\n  // const companyInfoName = useAppSelector(({ company }) => company.companyInfo.companyName);\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n\n  let companyLogo = logo\n  switch(companyInfoId) {\n    case '8333329': companyLogo = 'https://store-g2rtbg88n2.mybigcommerce.com/content/retailco.png';\n      break;\n    case '8333327': companyLogo = 'https://store-g2rtbg88n2.mybigcommerce.com/content/bbros.png';\n      break;\n    case '8311697': companyLogo = 'https://s3-us-west-2.amazonaws.com/bundleb2b-v3.0-media-files-prod/logo-candcgroup_d3c2c167-a757-40b3-99b6-2fadd54b8a34.png';\n      break;\n    case '8333328': companyLogo = 'https://store-g2rtbg88n2.mybigcommerce.com/content/pubpartners.png';\n      break;\n  }\n\n  const [isMobile] = useMobile();\n\n  return (\n    <Box\n      sx={\n        isMobile\n          ? {\n              height: '40px',\n              width: '140px',\n              '& li': {\n                height: '40px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginLeft: '1rem',\n              },\n              '& img': {\n                maxHeight: '40px',\n              },\n            }\n          : {\n              width: '200px',\n              height: '65px',\n              display: 'flex',\n              alignItems: 'center',\n              '& img': {\n                maxHeight: '65px',\n              },\n            }\n      }\n    >\n      <ImageListItem\n        sx={{\n          maxWidth: '200px',\n          cursor: 'pointer',\n          '& .MuiImageListItem-img': {\n            objectFit: 'contain',\n            width: 'auto',\n          },\n        }}\n        onClick={() => {\n          window.location.href = '/';\n        }}\n      >\n        <img src={companyLogo || STORE_DEFAULT_LOGO} alt=\"logo\" />\n      </ImageListItem>\n      {/* <ListItem sx={{minWidth: '300px', ml: 12}}>\n        <Typography>{customer.companyRoleName} - {companyInfoName} ({companyInfoId})</Typography>\n      </ListItem> */}\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');","import { forwardRef, Ref, useImperativeHandle, useRef, useState } from 'react';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport { Box, MenuProps } from '@mui/material';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nimport { useMobile } from '@/hooks';\nimport { disableLogoutButton } from '@/utils';\n\nexport interface ListItemProps {\n  name: string;\n  key: string | number;\n}\n\nexport interface DropDownHandle {\n  setOpenDropDown: () => void;\n}\n\ninterface B3DropDownProps extends Partial<MenuProps> {\n  width?: string;\n  list: Array<ListItemProps>;\n  title: string;\n  handleItemClick?: (key: string | number) => void;\n  value?: string;\n  menuRenderItemName?: (item: ListItemProps) => JSX.Element | string;\n}\n\nfunction B3DropDown(\n  {\n    width,\n    list,\n    title,\n    value,\n    handleItemClick,\n    menuRenderItemName = (item) => item.name,\n    ...menu\n  }: B3DropDownProps,\n  ref: Ref<DropDownHandle>,\n) {\n  const [isMobile] = useMobile();\n  const [isOpen, setIsOpen] = useState(false);\n  const listRef = useRef<HTMLDivElement | null>(null);\n\n  useImperativeHandle(ref, () => ({\n    setOpenDropDown: () => setIsOpen(true),\n  }));\n\n  const close = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <Box\n      sx={{\n        width: width || 'auto',\n      }}\n    >\n      {!disableLogoutButton ? (\n        <ListItemButton\n          ref={listRef}\n          onClick={() => setIsOpen(true)}\n          sx={{\n            pr: 0,\n          }}\n        >\n          <ListItemText\n            primary={title}\n            sx={{\n              '& span': {\n                fontWeight: isMobile ? 400 : 700,\n                color: '#333333',\n              },\n            }}\n          />\n          {isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n        </ListItemButton>\n      ) : (\n        <ListItemText\n          primary={title}\n          sx={{\n            '& span': {\n              fontWeight: isMobile ? 400 : 700,\n              color: '#333333',\n            },\n          }}\n        />\n      )}\n      <Menu\n        anchorEl={listRef.current}\n        open={isOpen}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        id=\"customized-menu\"\n        keepMounted\n        onClose={close}\n        sx={{\n          '& .MuiList-root.MuiList-padding.MuiMenu-list': {\n            pt: isMobile ? 0 : '8px',\n            pb: isMobile ? 0 : '8px',\n            maxHeight: isMobile ? 'auto' : '200px',\n          },\n        }}\n        {...(menu || {})}\n      >\n        {list.length &&\n          list.map((item) => {\n            const { key } = item;\n            const color = value === key ? '#3385d6' : 'black';\n            return (\n              <MenuItem\n                sx={{\n                  color,\n                  minWidth: isMobile ? 'auto' : width || '155px',\n                }}\n                key={key}\n                onClick={() => {\n                  close();\n                  if (handleItemClick) handleItemClick(key);\n                }}\n              >\n                {menuRenderItemName(item)}\n              </MenuItem>\n            );\n          })}\n      </Menu>\n    </Box>\n  );\n}\n\nexport default forwardRef<DropDownHandle, B3DropDownProps>(B3DropDown);\n","import { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Box } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\nimport { useAppSelector } from '@/store';\n\nimport B3DropDown, { ListItemProps } from '../B3DropDown';\n\ninterface ListProps {\n  [key: string]: string;\n}\n\nconst list: Array<ListProps> = [\n  {\n    name: 'Log out',\n    key: 'logout',\n    idLang: 'global.button.logout',\n  },\n];\n\ninterface B3AccountInfoProps {\n  closeSidebar?: (x: boolean) => void;\n}\n\nexport default function B3AccountInfo({ closeSidebar }: B3AccountInfoProps) {\n  const [isMobile] = useMobile();\n\n  const firstName = useAppSelector(({ company }) => company.customer.firstName);\n  const lastName = useAppSelector(({ company }) => company.customer.lastName);\n\n  const navigate = useNavigate();\n\n  const b3Lang = useB3Lang();\n\n  const handleItemClick = async (key: string | number) => {\n    const item = list.find((v) => v.key === key);\n\n    if (!item) return;\n\n    if (item.key === 'logout') {\n      navigate('/login?loginFlag=loggedOutLogin');\n    } else if (item.type === 'path' && item.key) {\n      navigate(item.key);\n    }\n    if (closeSidebar) {\n      closeSidebar(false);\n    }\n  };\n\n  const name = `${firstName}  ${lastName}`;\n\n  const newList: ListItemProps[] = useMemo(() => {\n    return list.map((item) => {\n      return {\n        key: item.key,\n        name: b3Lang(item.idLang),\n      };\n    });\n  }, [b3Lang]);\n\n  return (\n    <Box\n      sx={{\n        minWidth: '150px',\n        display: 'flex',\n        justifyContent: isMobile ? 'start' : 'end',\n        mr: '-5px',\n        fontSize: '16px',\n        color: '#333333',\n        textAlign: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <B3DropDown title={name} handleItemClick={handleItemClick} list={newList} />\n    </Box>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { Box, Chip, Grid } from '@mui/material';\n\nimport HierarchyDialog from '@/pages/CompanyHierarchy/components/HierarchyDialog';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { setOpenCompanyHierarchyDropDown, useAppDispatch, useAppSelector } from '@/store';\nimport { CompanyHierarchyProps, PagesSubsidiariesPermissionProps } from '@/types';\n\nimport B3DropDown, { DropDownHandle, ListItemProps } from '../B3DropDown';\n\nconst chipInfo = {\n  currentInfo: {\n    langId: 'companyHierarchy.chip.currentCompany',\n  },\n  representingInfo: {\n    langId: 'companyHierarchy.chip.selectCompany',\n  },\n};\n\nfunction B3CompanyHierarchy() {\n  const b3Lang = useB3Lang();\n\n  const dispatch = useAppDispatch();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const [currentRow, setCurrentRow] = useState<Partial<CompanyHierarchyProps> | null>(null);\n\n  const dropDownRef = useRef<DropDownHandle>(null);\n\n  const {\n    state: {\n      switchAccountButton: { color = '#ED6C02' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const { id: currentCompanyId } = useAppSelector(({ company }) => company.companyInfo);\n\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n\n  const { pagesSubsidiariesPermission } = useAppSelector(({ company }) => company);\n\n  const { selectCompanyHierarchyId, companyHierarchyList } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const { isOpenCompanyHierarchyDropDown } = useAppSelector(({ global }) => global);\n\n  const isPagesSubsidiariesPermission = useMemo(() => {\n    return Object.keys(pagesSubsidiariesPermission).some(\n      (key) => pagesSubsidiariesPermission[key as keyof PagesSubsidiariesPermissionProps],\n    );\n  }, [pagesSubsidiariesPermission]);\n\n  useEffect(() => {\n    if (isOpenCompanyHierarchyDropDown && dropDownRef?.current) {\n      dropDownRef.current?.setOpenDropDown();\n    }\n  }, [isOpenCompanyHierarchyDropDown]);\n\n  const info = useMemo(() => {\n    const showTitleId = selectCompanyHierarchyId || currentCompanyId || salesRepCompanyId;\n\n    const title = companyHierarchyList.find(\n      (list) => Number(list.companyId) === Number(showTitleId),\n    )?.companyName;\n\n    const list: ListItemProps[] = companyHierarchyList.map((item) => ({\n      name: item.companyName,\n      key: item.companyId,\n    }));\n\n    return {\n      title,\n      list,\n    };\n  }, [selectCompanyHierarchyId, currentCompanyId, companyHierarchyList, salesRepCompanyId]);\n\n  const handleClose = () => {\n    setOpen(false);\n    dispatch(setOpenCompanyHierarchyDropDown(false));\n  };\n  const handleRowClick = (key: number) => {\n    const item = info.list.find((list) => Number(list.key) === key);\n    if (!item) return;\n    setCurrentRow({\n      companyId: Number(item.key),\n      companyName: item.name,\n    });\n    setOpen(true);\n  };\n\n  const menuRenderItemName = (item: ListItemProps) => {\n    const { name, key } = item;\n\n    const selectId = selectCompanyHierarchyId || currentCompanyId || salesRepCompanyId;\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        sx={{\n          justifyContent: 'space-between',\n        }}\n      >\n        <Grid\n          sx={{\n            mr: 2,\n          }}\n        >\n          {name}\n        </Grid>\n        <Grid\n          sx={{\n            width: '20px',\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          {key === Number(selectId) && <CheckIcon sx={{ fontSize: '1.2rem' }} />}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const { langId: chipLangId } = selectCompanyHierarchyId\n    ? chipInfo.representingInfo\n    : chipInfo.currentInfo;\n\n  if (!info?.list?.length || !isPagesSubsidiariesPermission) return null;\n\n  if (!currentCompanyId && !salesRepCompanyId) return null;\n\n  return (\n    <>\n      <Box\n        sx={{\n          minWidth: '100px',\n          display: 'flex',\n          justifyContent: 'start',\n          alignItems: 'center',\n          fontSize: '1rem',\n          color: '#333333',\n          '& .MuiListItemButton-root': {\n            paddingLeft: '0',\n          },\n        }}\n      >\n        <B3DropDown\n          ref={dropDownRef}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          menuRenderItemName={menuRenderItemName}\n          title={info?.title || ''}\n          handleItemClick={(item) => handleRowClick(Number(item))}\n          list={info?.list || []}\n        />\n\n        <Chip\n          label={b3Lang(chipLangId)}\n          size=\"small\"\n          sx={{\n            backgroundColor: selectCompanyHierarchyId ? color : 'primary.main',\n            color: 'white',\n            height: 24,\n            '& .MuiChip-label': {\n              px: 1,\n            },\n          }}\n        />\n      </Box>\n\n      <HierarchyDialog open={open} handleClose={handleClose} currentRow={currentRow} />\n    </>\n  );\n}\n\nexport default B3CompanyHierarchy;\n","import { useEffect, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport styled from '@emotion/styled';\nimport { Alert, Box } from '@mui/material';\n\nimport { StatusNotifications } from '@/constants';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { useAppDispatch, useAppSelector } from '@/store';\nimport { setLoginType } from '@/store/slices/company';\nimport { LoginTypes } from '@/types';\nimport { B3SStorage } from '@/utils';\n\nexport type AlertColor = 'success' | 'info' | 'warning' | 'error';\n\ninterface B3StatusNotificationProps {\n  title: string;\n}\n\nconst B3StatusNotificationContainer = styled(Box)(() => ({\n  '& svg': {\n    color: '#FFFFFF',\n  },\n}));\n\nexport default function B3StatusNotification(props: B3StatusNotificationProps) {\n  const { title } = props;\n  const dispatch = useAppDispatch();\n  const b3Lang = useB3Lang();\n\n  const loginType = useAppSelector(({ company }) => company.customer.loginType);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const blockPendingAccountOrderCreation = B3SStorage.get('blockPendingAccountOrderCreation');\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n  const [tip, setTip] = useState<string>('');\n  const [isShow, setIsShow] = useState<boolean>(false);\n  const [type, setType] = useState<AlertColor>('success');\n  const [bcColor, setBcColor] = useState<string>('#2E7D32');\n\n  const handleCloseTip = () => {\n    dispatch(setLoginType(LoginTypes.WAITING_LOGIN));\n    setIsShow(false);\n  };\n\n  const action: CustomFieldItems = {};\n  if (Number(companyStatus) !== 0) {\n    action.onClose = handleCloseTip;\n  }\n\n  useEffect(() => {\n    const loginTypeStatus = Number(companyStatus) === 0 ? true : loginType === 1;\n\n    const showTip = role === 100 ? false : loginTypeStatus;\n    setIsShow(showTip);\n    if (showTip) {\n      if (Number(companyStatus) === 0) {\n        if (blockPendingAccountOrderCreation && blockPendingAccountViewPrice) {\n          setTip(b3Lang(StatusNotifications.pendingOrderingAndViewPriceBlocked));\n        }\n\n        if (blockPendingAccountOrderCreation && !blockPendingAccountViewPrice) {\n          setTip(b3Lang(StatusNotifications.pendingOrderingBlocked));\n        }\n\n        if (!blockPendingAccountOrderCreation && blockPendingAccountViewPrice) {\n          setTip(b3Lang(StatusNotifications.pendingViewPriceBlocked));\n        }\n\n        if (!blockPendingAccountOrderCreation && !blockPendingAccountViewPrice) {\n          setTip(b3Lang(StatusNotifications.pendingOrderingNotBlocked));\n        }\n        setType('info');\n        setBcColor('#0288D1');\n      }\n\n      if (Number(companyStatus) === 1) {\n        setTip(b3Lang(StatusNotifications.approvedTip));\n        setType('success');\n        setBcColor('#2E7D32');\n      }\n\n      if (Number(companyStatus) === 2) {\n        setTip(StatusNotifications.rejectedTip);\n        setType('warning');\n        setBcColor('#ED6C02');\n      }\n    }\n  }, [\n    blockPendingAccountOrderCreation,\n    blockPendingAccountViewPrice,\n    companyStatus,\n    loginType,\n    role,\n    b3Lang,\n  ]);\n\n  return isShow ? (\n    <B3StatusNotificationContainer\n      sx={{\n        mb: title ? '20px' : '0',\n      }}\n    >\n      <Alert\n        {...action}\n        severity={type || 'success'}\n        sx={{\n          color: '#FFFFFF',\n          backgroundColor: bcColor,\n        }}\n      >\n        {tip}\n      </Alert>\n    </B3StatusNotificationContainer>\n  ) : null;\n}\n","import { useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { dispatchEvent } from '@b3/hooks';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, Button, Grid, Typography } from '@mui/material';\n\nimport { CART_URL } from '@/constants';\nimport useMobile from '@/hooks/useMobile';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\n\nimport { getContrastColor } from '../outSideComponents/utils/b3CustomStyles';\n\nimport B3AccountInfo from './B3AccountInfo';\nimport B3CompanyHierarchy from './B3CompanyHierarchy';\nimport B3StatusNotification from './B3StatusNotification';\n\nexport default function MainHeader({ title }: { title: string }) {\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const companyInfo = useAppSelector(({ company }) => company.companyInfo);\n  const salesRepCompanyName = useAppSelector(\n    ({ b2bFeatures }) => b2bFeatures.masqueradeCompany.companyName,\n  );\n  const cartNumber = useAppSelector(({ global }) => global.cartNumber);\n  const navigate = useNavigate();\n  const b3Lang = useB3Lang();\n  const [isMobile] = useMobile();\n\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const { isEnabledCompanyHierarchy } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const isShowCart = isB2BUser ? purchasabilityPermission : true;\n\n  const customColor = getContrastColor(backgroundColor);\n\n  const onCartClick = () => {\n    if (!dispatchEvent('on-click-cart-button')) {\n      return;\n    }\n\n    window.location.href = CART_URL;\n  };\n\n  useEffect(() => {\n    b3TriggerCartNumber();\n  }, []);\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          height: '70px',\n          alignItems: 'center',\n        }}\n      >\n        <Grid\n          sx={{\n            alignItems: 'center',\n            flexDirection: 'row',\n            display: 'flex',\n          }}\n        >\n          <Box\n            component=\"h4\"\n            sx={{\n              fontSize: '20px',\n              fontWeight: '500',\n              color: customColor || '#333333',\n              ml: 0,\n            }}\n          >\n            {Number(role) === 3 &&\n              (companyInfo?.companyName ||\n                salesRepCompanyName ||\n                b3Lang('global.B3MainHeader.superAdmin'))}\n          </Box>\n          {isEnabledCompanyHierarchy && <B3CompanyHierarchy />}\n        </Grid>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          {role !== 100 && <B3AccountInfo />}\n          <Box sx={{ marginLeft: '8px' }}>\n            {role === 100 && (\n              <Button\n                sx={{\n                  color: '#333333',\n                  fontWeight: 700,\n                  fontSize: '16px',\n                }}\n                onClick={() => {\n                  navigate('/login');\n                }}\n              >\n                {b3Lang('global.B3MainHeader.signIn')}\n              </Button>\n            )}\n            <Button\n              sx={{\n                color: '#333333',\n                fontWeight: 700,\n                fontSize: '16px',\n              }}\n              onClick={() => {\n                window.location.href = '/';\n              }}\n            >\n              {b3Lang('global.B3MainHeader.home')}\n            </Button>\n            {isShowCart && (\n              <Button\n                sx={{\n                  color: '#333333',\n                  fontWeight: 700,\n                  fontSize: '16px',\n                }}\n                onClick={onCartClick}\n              >\n                {b3Lang('global.B3MainHeader.cart')}\n                {cartNumber > 0 ? (\n                  <Typography\n                    id=\"cart-number-icon\"\n                    sx={{\n                      backgroundColor: '#1976D2',\n                      minWidth: '21px',\n                      height: '20px',\n                      color: '#FFFFFF',\n                      borderRadius: '64px',\n                      fontSize: '12px',\n                      fontWeight: '500',\n                      lineHeight: '20px',\n                      marginLeft: '3px',\n                      padding: '0px 6.5px',\n                    }}\n                  >\n                    {cartNumber}\n                  </Typography>\n                ) : null}\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Box>\n      {title && (\n        <Box\n          component=\"h3\"\n          sx={{\n            height: '40px',\n            m: '0',\n            fontSize: '34px',\n            fontWeight: 400,\n            lineHeight: '42px',\n            display: 'flex',\n            alignItems: 'end',\n            mb: '24px',\n            mt: isMobile ? 0 : '24px',\n            color: customColor,\n          }}\n        >\n          {title}\n        </Box>\n      )}\n      <B3StatusNotification title={title} />\n    </Box>\n  );\n}\n","import { useContext, useEffect, useMemo } from 'react';\nimport { matchPath, useLocation, useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Badge, List, ListItem, ListItemButton, ListItemText, useTheme } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\nimport { DynamicallyVariableContext } from '@/shared/dynamicallyVariable';\nimport { GlobalContext } from '@/shared/global';\nimport { type RouteItem } from '@/shared/routeList';\nimport { getAllowedRoutes } from '@/shared/routes';\nimport { store, useAppSelector } from '@/store';\nimport {\n  setCompanyHierarchyInfoModules,\n  setPagesSubsidiariesPermission,\n} from '@/store/slices/company';\nimport { PagesSubsidiariesPermissionProps } from '@/types';\nimport { B3SStorage } from '@/utils';\nimport { validatePermissionWithComparisonType } from '@/utils/b3CheckPermissions';\n\nimport { b3HexToRgb, getContrastColor } from '../outSideComponents/utils/b3CustomStyles';\n\ninterface B3NavProps {\n  closeSidebar?: (x: boolean) => void;\n}\n\nconst getSubsidiariesPermission = (routes: RouteItem[]) => {\n  const subsidiariesPermission = routes.reduce((all, cur) => {\n    if (cur?.subsidiariesCompanyKey) {\n      const code = cur.permissionCodes?.includes(',')\n        ? cur.permissionCodes.split(',')[0].trim()\n        : cur.permissionCodes;\n\n      all[cur.subsidiariesCompanyKey] = validatePermissionWithComparisonType({\n        level: 3,\n        code,\n      });\n    }\n\n    return all;\n  }, {} as PagesSubsidiariesPermissionProps);\n\n  return subsidiariesPermission;\n};\n\nexport default function B3Nav({ closeSidebar }: B3NavProps) {\n  const [isMobile] = useMobile();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const b3Lang = useB3Lang();\n\n  const { dispatch } = useContext(DynamicallyVariableContext);\n  const role = useAppSelector(({ company }) => company.customer.role);\n\n  const { selectCompanyHierarchyId, isEnabledCompanyHierarchy } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const { permissions } = useAppSelector(({ company }) => company);\n\n  const { state: globalState } = useContext(GlobalContext);\n  const { quoteDetailHasNewMessages, registerEnabled } = globalState;\n\n  const theme = useTheme();\n  const primaryColor = theme.palette.primary.main;\n\n  const jumpRegister = () => {\n    navigate('/register');\n    dispatch({\n      type: 'common',\n      payload: {\n        globalMessageDialog: {\n          open: false,\n          title: '',\n          message: '',\n          cancelText: 'Cancel',\n        },\n      },\n    });\n  };\n\n  const handleClick = (item: { configKey?: string; path: string }) => {\n    if (role === 100) {\n      dispatch({\n        type: 'common',\n        payload: {\n          globalMessageDialog: {\n            open: true,\n            title: 'Registration',\n            message:\n              item.configKey === 'shoppingLists'\n                ? 'Please create an account, or login to create a shopping list.'\n                : 'To receive full access to buyer portal, please register. It will take 2 minutes.',\n            cancelText: 'Cancel',\n            saveText: registerEnabled ? 'Register' : '',\n            saveFn: jumpRegister,\n          },\n        },\n      });\n\n      return;\n    }\n\n    navigate(item.path);\n    if (isMobile && closeSidebar) {\n      closeSidebar(false);\n    }\n  };\n\n  useEffect(() => {\n    let isHasSubsidiariesCompanyPermission = false;\n    const { hash } = window.location;\n    const url = hash.split('#')[1] || '';\n    const routes = getAllowedRoutes(globalState).filter((route) => route.isMenuItem);\n\n    if (url) {\n      const routeItem = getAllowedRoutes(globalState).find((item) => {\n        return matchPath(item.path, url);\n      });\n\n      if (routeItem && routeItem?.subsidiariesCompanyKey) {\n        const { permissionCodes } = routeItem;\n\n        const code = permissionCodes?.includes(',')\n          ? permissionCodes.split(',')[0].trim()\n          : permissionCodes;\n\n        isHasSubsidiariesCompanyPermission = validatePermissionWithComparisonType({\n          code,\n          level: 3,\n        });\n      }\n    }\n\n    const subsidiariesPermission = getSubsidiariesPermission(routes);\n\n    store.dispatch(setPagesSubsidiariesPermission(subsidiariesPermission));\n\n    store.dispatch(\n      setCompanyHierarchyInfoModules({\n        isHasCurrentPagePermission: isHasSubsidiariesCompanyPermission,\n      }),\n    );\n  }, [selectCompanyHierarchyId, globalState, navigate]);\n\n  const newRoutes = useMemo(() => {\n    let routes = getAllowedRoutes(globalState).filter((route) => route.isMenuItem);\n\n    const subsidiariesPermission = getSubsidiariesPermission(routes);\n\n    if (selectCompanyHierarchyId) {\n      routes = routes.filter((route) =>\n        route?.subsidiariesCompanyKey\n          ? subsidiariesPermission[route.subsidiariesCompanyKey]\n          : false,\n      );\n    } else {\n      routes = routes.filter((route) => {\n        if (route?.subsidiariesCompanyKey === 'companyHierarchy') {\n          return isEnabledCompanyHierarchy && subsidiariesPermission[route.subsidiariesCompanyKey];\n        }\n        return true;\n      });\n    }\n\n    return routes;\n\n    // ignore permissions because verifyCompanyLevelPermissionByCode method with permissions\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectCompanyHierarchyId, permissions, globalState, isEnabledCompanyHierarchy]);\n\n  const activePath = (path: string) => {\n    if (location.pathname === path) {\n      B3SStorage.set('prevPath', path);\n      return true;\n    }\n\n    if (location.pathname.includes('orderDetail')) {\n      const gotoOrderPath =\n        B3SStorage.get('prevPath') === '/company-orders' ? '/company-orders' : '/orders';\n      if (path === gotoOrderPath) return true;\n    }\n\n    if (location.pathname.includes('shoppingList') && path === '/shoppingLists') {\n      return true;\n    }\n\n    if (location.pathname.includes('/quoteDetail') || location.pathname.includes('/quoteDraft')) {\n      if (path === '/quotes') return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <List\n      sx={{\n        width: '100%',\n        maxWidth: 360,\n        bgcolor: isMobile ? 'background.paper' : 'background.default',\n        color: primaryColor || 'info.main',\n        '& .MuiListItem-root': {\n          '& .MuiButtonBase-root.Mui-selected': {\n            color: getContrastColor(primaryColor) || '#fff',\n            bgcolor: 'primary.main',\n            borderRadius: '4px',\n          },\n          '& .MuiButtonBase-root:hover:not(.Mui-selected)': {\n            bgcolor: b3HexToRgb(primaryColor, 0.12),\n            borderRadius: '4px',\n          },\n        },\n      }}\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n    >\n      {newRoutes.map((item) => {\n        if (item.name === 'Quotes') {\n          const { pathname } = location;\n          return (\n            <ListItem key={item.path} disablePadding>\n              <Badge\n                badgeContent={\n                  quoteDetailHasNewMessages && pathname.includes('quoteDetail') ? '' : 0\n                }\n                variant=\"dot\"\n                sx={{\n                  width: '100%',\n                  '& .MuiBadge-badge.MuiBadge-dot': {\n                    width: 8,\n                    height: 8,\n                    bgcolor: '#FFFFFF',\n                    right: 14,\n                    top: 22,\n                  },\n                }}\n              >\n                <ListItemButton onClick={() => handleClick(item)} selected={activePath(item.path)}>\n                  <ListItemText primary={b3Lang(item.idLang)} />\n                </ListItemButton>\n              </Badge>\n            </ListItem>\n          );\n        }\n        return (\n          <ListItem key={item.path} disablePadding>\n            <ListItemButton onClick={() => handleClick(item)} selected={activePath(item.path)}>\n              <ListItemText primary={b3Lang(item.idLang)} />\n            </ListItemButton>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import { ReactNode, useContext, useState } from 'react';\nimport { Close, Dehaze, ShoppingBagOutlined } from '@mui/icons-material';\nimport { Badge, Box } from '@mui/material';\n\nimport { CART_URL } from '@/constants';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\n\nimport CompanyCredit from '../CompanyCredit';\nimport { getContrastColor } from '../outSideComponents/utils/b3CustomStyles';\n\nimport B3AccountInfo from './B3AccountInfo';\nimport B3CloseAppButton from './B3CloseAppButton';\nimport B3Logo from './B3Logo';\nimport B3Nav from './B3Nav';\n\nexport default function B3MobileLayout({\n  children,\n  title,\n}: {\n  children: ReactNode;\n  title: string;\n}) {\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const [isOpenMobileSidebar, setOpenMobileSidebar] = useState<boolean>(false);\n  const cartNumber = useAppSelector(({ global }) => global.cartNumber);\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const isShowCart = isB2BUser ? purchasabilityPermission : true;\n\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const openRouteList = () => {\n    setOpenMobileSidebar(true);\n  };\n\n  const customColor = getContrastColor(backgroundColor);\n\n  return (\n    <Box\n      sx={{\n        height: '70vh',\n        p: '4vw',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: '4.5vw',\n        }}\n      >\n        <Badge badgeContent={0} color=\"secondary\">\n          <Dehaze onClick={openRouteList} sx={{ color: customColor }} />\n        </Badge>\n\n        <B3Logo />\n\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n\n            '& span': {\n              marginRight: '1.5rem',\n            },\n          }}\n        >\n          {isShowCart && (\n            <Badge\n              badgeContent={cartNumber}\n              max={1000}\n              sx={{\n                '& .MuiBadge-badge': {\n                  color: '#FFFFFF',\n                  backgroundColor: '#1976D2',\n                  fontWeight: 500,\n                  fontSize: '12px',\n                  minWidth: '18px',\n                  height: '18px',\n                  top: '8px',\n                  right: '3px',\n                  marginRight: '-0.5rem',\n                },\n              }}\n            >\n              <ShoppingBagOutlined\n                sx={{ color: 'rgba(0, 0, 0, 0.54)', marginRight: '-0.5rem' }}\n                onClick={() => {\n                  window.location.href = CART_URL;\n                }}\n              />\n            </Badge>\n          )}\n          <Box\n            sx={{\n              marginLeft: '2px',\n              height: '24px',\n            }}\n          >\n            <B3CloseAppButton />\n          </Box>\n        </Box>\n      </Box>\n\n      <Box\n        component=\"h1\"\n        sx={{\n          p: 0,\n          m: 0,\n          mb: '6vw',\n          fontSize: '34px',\n          fontWeight: '400',\n          color: customColor || '#263238',\n        }}\n      >\n        {title}\n      </Box>\n      <CompanyCredit />\n      <Box\n        sx={{\n          flex: 1,\n          display: 'flex',\n          paddingBottom: isAgenting ? '52px' : '0',\n        }}\n      >\n        {children}\n      </Box>\n      {isOpenMobileSidebar && (\n        <Box\n          sx={{\n            height: '100vh',\n            position: 'fixed',\n            width: '92vw',\n            zIndex: 1000,\n            left: 0,\n            top: 0,\n            p: '4vw',\n            backgroundColor: 'white',\n            boxShadow:\n              '0px 7px 8px -4px #00000033, 0px 12px 17px 2px #00000024, 0px 5px 22px 4px #0000001f',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              pb: '4vw',\n            }}\n          >\n            <B3AccountInfo closeSidebar={setOpenMobileSidebar} />\n            <Close onClick={() => setOpenMobileSidebar(false)} />\n          </Box>\n\n          <B3Nav closeSidebar={setOpenMobileSidebar} />\n        </Box>\n      )}\n    </Box>\n  );\n}\n"],"names":["children","isMobile","useMobile","isDesktopLimit","useMediaQuery","location","useLocation","title","setTitle","useState","b3Lang","useB3Lang","emailAddress","useAppSelector","company","customer","customerId","id","state","globalMessageDialog","dispatch","useContext","DynamicallyVariableContext","navigate","useNavigate","useEffect","getIsTokenGotoPage","pathname","itemsRoutes","routes","find","item","path","foundPath","Object","entries","SPECIAL_PATH_TEXTS","specialPath","idLang","type","payload","tipMessage","msgs","overflowStyle","useMemo","includes","overflowX","Box","jsx","B3MobileLayout","jsxs","sx","display","minHeight","margin","width","minWidth","maxWidth","flexDirection","p","B3CloseAppButton","displayPrint","B3Logo","pt","B3Nav","flex","B3MainHeader","CompanyCredit","component","mt","B3Dialog","isOpen","open","leftSizeBtn","cancelText","rightSizeBtn","saveText","handleLeftClick","cancelFn","messageDialogClose","message","handRightClick","saveFn","showRightBtn","justifyContent","height","permissionRoles","isEnabled","setEnabled","isCloseCompanyCredit","setIsCloseCompanyCredit","useStorageState","sessionStorage","role","isAgenting","b2bFeatures","masqueradeCompany","async","Number","companyCreditConfig","creditHold","creditEnabled","getCompanyCreditConfig","init","Alert","variant","onClose","severity","setOpenPageFn","global","isCloseGotoBCHome","GlobalContext","CloseBoxMobile","CloseBox","CloseButton","color","onClick","handleCloseForm","window","href","openUrl","history","replaceState","logo","companyLogo","companyInfo","alignItems","marginLeft","maxHeight","ImageListItem","cursor","objectFit","src","STORE_DEFAULT_LOGO","alt","_interopRequireDefault","require$$0","defineProperty","ArrowDropDown","value","default_1","default","_createSvgIcon","require$$1","_jsxRuntime","require$$2","d","ArrowDropUp","forwardRef","list","handleItemClick","menuRenderItemName","name","menu","ref","setIsOpen","listRef","useRef","useImperativeHandle","setOpenDropDown","close","disableLogoutButton","ListItemText","primary","fontWeight","ListItemButton","pr","ArrowDropUpIcon","ArrowDropDownIcon","Menu","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","pb","length","map","key","MenuItem","B3AccountInfo","closeSidebar","firstName","lastName","newList","mr","fontSize","textAlign","B3DropDown","v","Check","chipInfo","currentInfo","langId","representingInfo","B3CompanyHierarchy","useAppDispatch","setOpen","currentRow","setCurrentRow","dropDownRef","switchAccountButton","CustomStyleContext","currentCompanyId","salesRepCompanyId","pagesSubsidiariesPermission","selectCompanyHierarchyId","companyHierarchyList","companyHierarchyInfo","isOpenCompanyHierarchyDropDown","isPagesSubsidiariesPermission","keys","some","info","showTitleId","companyId","companyName","chipLangId","Fragment","paddingLeft","selectId","Grid","container","direction","CheckIcon","handleRowClick","Chip","label","size","backgroundColor","px","HierarchyDialog","handleClose","setOpenCompanyHierarchyDropDown","B3StatusNotificationContainer","styled","B3StatusNotification","props","loginType","companyStatus","status","blockPendingAccountOrderCreation","B3SStorage","get","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","tip","setTip","isShow","setIsShow","setType","bcColor","setBcColor","handleCloseTip","setLoginType","LoginTypes","WAITING_LOGIN","action","loginTypeStatus","showTip","StatusNotifications","pendingOrderingAndViewPriceBlocked","pendingOrderingBlocked","pendingViewPriceBlocked","pendingOrderingNotBlocked","approvedTip","rejectedTip","mb","MainHeader","isB2BUser","isB2BUserSelector","salesRepCompanyName","cartNumber","portalStyle","purchasabilityPermission","rolePermissionSelector","isEnabledCompanyHierarchy","isShowCart","customColor","getContrastColor","b3TriggerCartNumber","ml","Button","onCartClick","dispatchEvent","CART_URL","Typography","borderRadius","lineHeight","padding","m","getSubsidiariesPermission","reduce","all","cur","subsidiariesCompanyKey","code","permissionCodes","split","trim","validatePermissionWithComparisonType","level","permissions","globalState","quoteDetailHasNewMessages","registerEnabled","primaryColor","useTheme","palette","main","jumpRegister","handleClick","configKey","isHasSubsidiariesCompanyPermission","hash","url","getAllowedRoutes","filter","route","isMenuItem","routeItem","matchPath","subsidiariesPermission","store","setPagesSubsidiariesPermission","setCompanyHierarchyInfoModules","isHasCurrentPagePermission","newRoutes","activePath","set","List","bgcolor","b3HexToRgb","ListItem","disablePadding","Badge","badgeContent","right","top","selected","isOpenMobileSidebar","setOpenMobileSidebar","Dehaze","openRouteList","marginRight","max","ShoppingBagOutlined","paddingBottom","position","zIndex","left","boxShadow","Close"],"mappings":"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","x_google_ignoreList":[4,5,8]}