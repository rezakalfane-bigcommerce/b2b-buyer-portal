{"version":3,"file":"B3MasqueradeGlobalTip-B7cT79TE.js","sources":["../../../../node_modules/@mui/icons-material/Group.js","../../../../node_modules/@mui/icons-material/KeyboardArrowLeft.js","../../src/components/outSideComponents/B3MasqueradeGlobalTip.tsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'Group');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import { useContext } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport GroupIcon from '@mui/icons-material/Group';\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\nimport { Box, Button, SnackbarOrigin, SxProps } from '@mui/material';\nimport Snackbar from '@mui/material/Snackbar';\n\nimport {\n  CHECKOUT_URL,\n  END_MASQUERADE_DEFAULT_VALUE,\n  TRANSLATION_MASQUERADE_BUTTON_VARIABLE,\n} from '@/constants';\nimport { useGetButtonText } from '@/hooks';\nimport useMobile from '@/hooks/useMobile';\nimport useStorageState from '@/hooks/useStorageState';\nimport { type SetOpenPage } from '@/pages/SetOpenPage';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { superAdminEndMasquerade } from '@/shared/service/b2b';\nimport { clearMasqueradeCompany, useAppDispatch, useAppSelector } from '@/store';\n\nimport {\n  getContrastColor,\n  getLocation,\n  getPosition,\n  getStyles,\n  setMUIMediaStyle,\n  splitCustomCssValue,\n} from './utils/b3CustomStyles';\n\ninterface B3MasqueradeGlobalTipProps {\n  isOpen: boolean;\n  setOpenPage: SetOpenPage;\n}\n\nconst bottomHeightPage = ['shoppingList/', 'purchased-products'];\n\nexport default function B3MasqueradeGlobalTip(props: B3MasqueradeGlobalTipProps) {\n  const { isOpen, setOpenPage } = props;\n  const dispatch = useAppDispatch();\n  const customerId = useAppSelector(({ company }) => company.customer.id);\n  const b2bId = useAppSelector(({ company }) => company.customer.b2bId);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const salesRepCompanyName = useAppSelector(\n    ({ b2bFeatures }) => b2bFeatures.masqueradeCompany.companyName,\n  );\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n\n  const { hash, href } = window.location;\n\n  const b3Lang = useB3Lang();\n\n  const {\n    state: { masqueradeButton },\n  } = useContext(CustomStyleContext);\n\n  const {\n    text = '',\n    color = '',\n    customCss = '',\n    location = 'bottomLeft',\n    horizontalPadding = '',\n    verticalPadding = '',\n  } = masqueradeButton;\n\n  const buttonLabel = useGetButtonText(\n    TRANSLATION_MASQUERADE_BUTTON_VARIABLE,\n    text,\n    END_MASQUERADE_DEFAULT_VALUE,\n  );\n\n  const isAddBottom = bottomHeightPage.some((item: string) => hash.includes(item));\n\n  const [isExpansion, setExpansion] = useStorageState<boolean>(\n    'sf-isMasqueradeTipExpansion',\n    true,\n    sessionStorage,\n  );\n  const [isMobile] = useMobile();\n\n  const endActing = async () => {\n    if (isOpen) {\n      setOpenPage({\n        isOpen: true,\n        openUrl: '/dashboard?closeMasquerade=1',\n      });\n    } else {\n      if (typeof b2bId === 'number') {\n        await superAdminEndMasquerade(Number(salesRepCompanyId));\n      }\n\n      dispatch(clearMasqueradeCompany());\n      setOpenPage({\n        isOpen: true,\n        openUrl: '/dashboard',\n      });\n    }\n  };\n\n  if (href.includes(CHECKOUT_URL) || !customerId) return null;\n\n  if (!isAgenting) return null;\n\n  const defaultLocation: SnackbarOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left',\n  };\n\n  let sx: SxProps = {};\n\n  if (isMobile && isOpen) {\n    sx = {\n      width: '100%',\n      bottom: 0,\n      left: 0,\n      borderRadius: '0px',\n    };\n  } else if (!isMobile && isAddBottom) {\n    sx = {\n      bottom: '90px !important',\n    };\n  }\n\n  const cssInfo = splitCustomCssValue(customCss);\n  const {\n    cssValue,\n    mediaBlocks,\n  }: {\n    cssValue: string;\n    mediaBlocks: string[];\n  } = cssInfo;\n  const MUIMediaStyle = setMUIMediaStyle(mediaBlocks);\n\n  const customStyles: SxProps = {\n    backgroundColor: color || '#ED6C02',\n    color: getContrastColor(color || '#FFFFFF'),\n    padding: '0',\n    ...getStyles(cssValue),\n  };\n\n  const isMobileCustomStyles: SxProps = {\n    backgroundColor: color || '#ED6C02',\n    color: getContrastColor(color || '#FFFFFF'),\n  };\n\n  const customBuyerPortalPagesStyles: SxProps = {\n    bottom: '24px',\n    left: '24px',\n    right: 'auto',\n    top: 'unset',\n  };\n\n  return (\n    <>\n      {!isOpen && isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '99999999993',\n            ...getPosition(horizontalPadding, verticalPadding, location),\n          }}\n          anchorOrigin={getLocation(location) || defaultLocation}\n          open\n        >\n          <Button\n            sx={{\n              height: '42px',\n              marginTop: '10px',\n              ...customStyles,\n              ...MUIMediaStyle,\n            }}\n            onClick={() => endActing()}\n            variant=\"contained\"\n            startIcon={<GroupIcon />}\n          >\n            {salesRepCompanyName}\n          </Button>\n        </Snackbar>\n      )}\n\n      {!isOpen && !isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            fontSize: '16px',\n            ...getPosition(horizontalPadding, verticalPadding, location),\n            ...sx,\n            ...customStyles,\n            ...MUIMediaStyle,\n          }}\n          anchorOrigin={getLocation(location) || defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            {!isMobile && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <GroupIcon\n                  sx={{\n                    mr: '12px',\n                  }}\n                />\n                {isExpansion && (\n                  <Box\n                    sx={{\n                      fontWeight: 400,\n                    }}\n                  >\n                    {b3Lang('global.masquerade.youAreMasqueradeAs')}\n                  </Box>\n                )}\n                <Box\n                  sx={{\n                    fontWeight: '600',\n                    m: '0 15px 0 10px',\n                  }}\n                >\n                  {salesRepCompanyName}\n                </Box>\n                {isExpansion && (\n                  <Box\n                    sx={{\n                      fontWeight: 500,\n                      fontSize: '13px',\n                      cursor: 'pointer',\n                    }}\n                    onClick={() => endActing()}\n                  >\n                    {buttonLabel}\n                  </Box>\n                )}\n\n                {isExpansion ? (\n                  <KeyboardArrowLeftIcon\n                    onClick={() => setExpansion(false)}\n                    sx={{\n                      ml: '10px',\n                      cursor: 'pointer',\n                    }}\n                  />\n                ) : (\n                  <KeyboardArrowRightIcon\n                    onClick={() => setExpansion(true)}\n                    sx={{\n                      ml: '10px',\n                      cursor: 'pointer',\n                    }}\n                  />\n                )}\n              </Box>\n            )}\n          </Box>\n        </Snackbar>\n      )}\n\n      {isOpen && !isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            ...customStyles,\n            ...customBuyerPortalPagesStyles,\n            ...sx,\n          }}\n          anchorOrigin={defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '16px',\n              }}\n            >\n              <GroupIcon\n                sx={{\n                  mr: '12px',\n                }}\n              />\n              {isExpansion && (\n                <Box\n                  sx={{\n                    fontWeight: 400,\n                  }}\n                >\n                  {b3Lang('global.masquerade.youAreMasqueradeAs')}\n                </Box>\n              )}\n              <Box\n                sx={{\n                  fontWeight: '600',\n                  m: '0 15px 0 10px',\n                }}\n              >\n                {salesRepCompanyName}\n              </Box>\n              {isExpansion && (\n                <Box\n                  sx={{\n                    fontWeight: 500,\n                    fontSize: '13px',\n                    cursor: 'pointer',\n                  }}\n                  onClick={() => endActing()}\n                >\n                  {buttonLabel}\n                </Box>\n              )}\n\n              {isExpansion ? (\n                <KeyboardArrowLeftIcon\n                  onClick={() => setExpansion(false)}\n                  sx={{\n                    ml: '10px',\n                    cursor: 'pointer',\n                  }}\n                />\n              ) : (\n                <KeyboardArrowRightIcon\n                  onClick={() => setExpansion(true)}\n                  sx={{\n                    ml: '10px',\n                    cursor: 'pointer',\n                  }}\n                />\n              )}\n            </Box>\n          </Box>\n        </Snackbar>\n      )}\n\n      {isOpen && isMobile && (\n        <Snackbar\n          sx={{\n            zIndex: '9999999999',\n            borderRadius: '4px',\n            height: '52px',\n            ...sx,\n            ...isMobileCustomStyles,\n          }}\n          anchorOrigin={defaultLocation}\n          open\n        >\n          <Box\n            sx={{\n              padding: '5px 15px',\n              width: '100%',\n            }}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                fontSize: '16px',\n                width: '100%',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <GroupIcon\n                  sx={{\n                    mr: '12px',\n                  }}\n                />\n\n                <Box\n                  sx={{\n                    fontWeight: '600',\n                    m: '0 15px 0 10px',\n                  }}\n                >\n                  {salesRepCompanyName}\n                </Box>\n              </Box>\n\n              <Box\n                sx={{\n                  fontWeight: 500,\n                  fontSize: '13px',\n                  cursor: 'pointer',\n                }}\n                onClick={() => endActing()}\n              >\n                {buttonLabel}\n              </Box>\n            </Box>\n          </Box>\n        </Snackbar>\n      )}\n    </>\n  );\n}\n"],"names":["_interopRequireDefault","require$$0","Group","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","KeyboardArrowLeft","bottomHeightPage","B3MasqueradeGlobalTip","props","isOpen","setOpenPage","dispatch","useAppDispatch","customerId","useAppSelector","company","b2bId","salesRepCompanyId","b2bFeatures","salesRepCompanyName","isAgenting","hash","href","b3Lang","useB3Lang","masqueradeButton","useContext","CustomStyleContext","text","color","customCss","location","horizontalPadding","verticalPadding","buttonLabel","useGetButtonText","TRANSLATION_MASQUERADE_BUTTON_VARIABLE","END_MASQUERADE_DEFAULT_VALUE","isAddBottom","item","isExpansion","setExpansion","useStorageState","isMobile","useMobile","endActing","superAdminEndMasquerade","clearMasqueradeCompany","CHECKOUT_URL","defaultLocation","sx","cssInfo","splitCustomCssValue","cssValue","mediaBlocks","MUIMediaStyle","setMUIMediaStyle","customStyles","getContrastColor","getStyles","isMobileCustomStyles","customBuyerPortalPagesStyles","jsxs","Fragment","jsx","Snackbar","getPosition","getLocation","Button","GroupIcon","Box","KeyboardArrowLeftIcon","KeyboardArrowRightIcon"],"mappings":"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","x_google_ignoreList":[0,1]}