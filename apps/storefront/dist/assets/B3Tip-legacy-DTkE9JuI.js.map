{"version":3,"file":"B3Tip-legacy-DTkE9JuI.js","sources":["../../src/components/B3Tip.tsx"],"sourcesContent":["import { Alert, AlertTitle, Box, Snackbar } from '@mui/material';\n\nimport useMobile from '@/hooks/useMobile';\nimport { MsgsProps, TipMessagesProps } from '@/shared/dynamicallyVariable/context/config';\n\ninterface B3TipProps extends TipMessagesProps {\n  handleItemClose: (id: number | string) => void;\n  handleAllClose: (id: string | number, reason: string) => void;\n}\n\nfunction MessageAlert({\n  msg,\n  onClose,\n}: {\n  msg: MsgsProps;\n  onClose: (id: string | number) => void;\n}) {\n  const Body = msg.jsx ? msg.jsx : () => <span>{msg.msg}</span>;\n\n  return (\n    <Alert\n      sx={{\n        width: '320px',\n        alignItems: 'center',\n        '& button[title=\"Close\"]': {\n          display: msg.isClose ? 'block' : 'none',\n        },\n        mb: '5px',\n\n        '& .MuiAlert-message': {\n          overflow: 'unset',\n        },\n      }}\n      variant=\"filled\"\n      key={msg.id}\n      severity={msg.type}\n      onClose={() => msg.isClose && onClose(msg.id)}\n    >\n      {msg.title && <AlertTitle>{msg.title}</AlertTitle>}\n      <Body />\n    </Alert>\n  );\n}\n\nexport default function B3Tip({\n  handleItemClose,\n  vertical = 'bottom',\n  horizontal = 'right',\n  msgs = [],\n  handleAllClose,\n}: B3TipProps) {\n  const [isMobile] = useMobile();\n  if (!msgs || !msgs.length) return null;\n  return (\n    <Box>\n      {msgs.length > 0\n        ? msgs.map((msg: MsgsProps, index: number) => (\n            <Snackbar\n              key={msg.id}\n              open={!!msg?.id}\n              autoHideDuration={msg?.time || 5000}\n              onClose={(_, reason: string) => handleAllClose(msg.id, reason)}\n              disableWindowBlurListener\n              anchorOrigin={{\n                vertical,\n                horizontal,\n              }}\n              sx={{\n                top: `${24 + index * 10 + index * (isMobile ? 80 : 90)}px !important`,\n                width: '320px',\n                height: 'auto',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                }}\n              >\n                <MessageAlert msg={msg} onClose={handleItemClose} />\n              </Box>\n            </Snackbar>\n          ))\n        : null}\n    </Box>\n  );\n}\n"],"names":["MessageAlert","msg","onClose","Body","jsx","children","jsxs","Alert","sx","width","alignItems","display","isClose","mb","overflow","variant","severity","type","id","title","AlertTitle","handleItemClose","vertical","horizontal","msgs","handleAllClose","isMobile","useMobile","length","Box","map","index","Snackbar","open","autoHideDuration","time","_","reason","disableWindowBlurListener","anchorOrigin","top","height"],"mappings":"0uBAUA,SAASA,GAAaC,IACpBA,EAAAC,QACAA,IAKM,MAAAC,EAAOF,EAAIG,IAAMH,EAAIG,IAAM,IAAMA,EAAAA,IAAC,OAAM,CAAAC,SAAAJ,EAAIA,MAGhD,OAAAK,EAAAA,KAACC,EAAA,CACCC,GAAI,CACFC,MAAO,QACPC,WAAY,SACZ,0BAA2B,CACzBC,QAASV,EAAIW,QAAU,QAAU,QAEnCC,GAAI,MAEJ,sBAAuB,CACrBC,SAAU,UAGdC,QAAQ,SAERC,SAAUf,EAAIgB,KACdf,QAASA,IAAMD,EAAIW,SAAWV,EAAQD,EAAIiB,IAEzCb,SAAA,CAAAJ,EAAIkB,OAASf,MAACgB,EAAY,CAAAf,SAAAJ,EAAIkB,cAC9BhB,EAAK,CAAA,KALDF,EAAIiB,GAQf,cAEA,UAA8BG,gBAC5BA,EAAAC,SACAA,EAAW,SAAAC,WACXA,EAAa,QAAAC,KACbA,EAAO,GAACC,eACRA,IAEM,MAACC,GAAYC,IACnB,OAAKH,GAASA,EAAKI,OAEjBxB,MAACyB,GACExB,SAAKmB,EAAAI,OAAS,EACXJ,EAAKM,KAAI,CAAC7B,EAAgB8B,IACxB3B,EAAAA,IAAC4B,EAAA,CAECC,OAAQhC,GAAKiB,GACbgB,iBAAkBjC,GAAKkC,MAAQ,IAC/BjC,QAASA,CAACkC,EAAGC,IAAmBZ,EAAexB,EAAIiB,GAAImB,GACvDC,2BAAyB,EACzBC,aAAc,CACZjB,WACAC,cAEFf,GAAI,CACFgC,IAAQ,GAAa,GAART,EAAaA,GAASL,EAAW,GAAK,IAA9C,gBACLjB,MAAO,QACPgC,OAAQ,QAGVpC,SAAAD,EAAAA,IAACyB,EAAA,CACCrB,GAAI,CACFG,QAAS,QAGXN,SAACD,EAAAA,IAAAJ,EAAA,CAAaC,MAAUC,QAASmB,OApB9BpB,EAAIiB,MAwBb,OA9B0B,IAiCpC"}