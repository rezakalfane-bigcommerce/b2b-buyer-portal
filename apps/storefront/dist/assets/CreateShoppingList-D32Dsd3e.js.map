{"version":3,"mappings":";8pBAQA,MAAMA,EAAWC,OAAK,UAAM,OAAO,2BAA8B,OAAAC,KAAA,mFAAC,EAC5DC,EAAeF,OAAK,UAAM,OAAO,4BAAkC,OAAAC,KAAA,wFAAC,EACpEE,EAAWC,GAA+B,CAC9C,CACE,KAAM,OACN,MAAOA,EAAO,gCAAgC,EAC9C,SAAU,GACV,QAAS,GACT,UAAW,OACX,GAAI,GACJ,QAAS,SACT,KAAM,QACN,UAAW,GACb,EACA,CACE,KAAM,cACN,MAAOA,EAAO,uCAAuC,EACrD,SAAU,GACV,QAAS,GACT,UAAW,YACX,GAAI,GACJ,QAAS,SACT,KAAM,QACN,KAAM,EACN,UAAW,IAEf,EAQA,SAASC,EAAmB,CAAE,KAAAC,EAAM,SAAAC,EAAU,QAAAC,GAAoC,CAC1E,MAAAC,EAAYC,SAAgC,IAAI,EAEhDN,EAASO,EAAU,EAEnB,CAACC,EAASC,CAAU,EAAIC,WAAkB,EAAK,EAE/CC,EAAYC,EAAeC,CAAiB,EAE5C,CACJ,QAAAC,EACA,aAAAC,EACA,UAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,EACpB,SAAAC,GACEC,EAAQ,CACV,KAAM,WACP,EAEKC,EAAc,IAAM,CAChBhB,EAAA,CACV,EAEMiB,EAAgB,IAAM,CAC1BN,EAAa,MAAOO,GAAS,CACrB,MAAE,KAAAC,EAAM,YAAAC,CAAA,EAAgBF,EAE9Bb,EAAW,EAAI,EACf,MAAMgB,EAAmB,CACvB,KAAM,CAAE,KAAAF,EAAM,YAAAC,CAAY,EAC1B,UAAAb,CAAA,CACD,EACDF,EAAW,EAAK,EACPN,EAAA,EACV,EAAE,CACL,EAGE,OAAAuB,EAAA,KAACC,EAAA,CACC,GAAI,CACF,GAAI,EACJ,OAAQ,UACR,MAAO,KACT,EAEA,UAACC,MAAAD,EAAA,CAAI,IAAKtB,CAAW,GAErBuB,EAAA,IAACjC,EAAA,CACC,OAAQO,EACR,UAAS,GACT,MAAOF,EAAO,qCAAqC,EACnD,QAAAQ,EACA,gBAAiBY,EACjB,eAAgBC,EAEhB,SAAAO,EAAA,IAACD,EAAA,CACC,GAAI,CACF,UAAW,OACX,QAAS,OACT,WAAY,YACd,EAEA,SAAAC,EAAA,IAAC9B,EAAA,CACC,WAAYC,EAAQC,CAAM,EAC1B,OAAAiB,EACA,QAAAH,EACA,UAAAE,EACA,SAAAE,CAAA,EACF,EACF,EACF,EACF,CAEJ","names":["B3Dialog","lazy","n","B3CustomForm","getList","b3Lang","CreateShoppingList","open","onChange","onClose","container","useRef","useB3Lang","loading","setLoading","useState","isB2BUser","useAppSelector","isB2BUserSelector","control","handleSubmit","getValues","errors","setValue","useForm","handleClose","handleConfirm","data","name","description","createShoppingList","jsxs","Box","jsx"],"ignoreList":[],"sources":["../../src/pages/OrderDetail/components/CreateShoppingList.tsx"],"sourcesContent":["import { lazy, useRef, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { LangFormatFunction, useB3Lang } from '@b3/lang';\nimport { Box } from '@mui/material';\n\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport createShoppingList from '@/utils/b3ShoppingList/b3ShoppingList';\n\nconst B3Dialog = lazy(() => import('../../../components/B3Dialog'));\nconst B3CustomForm = lazy(() => import('../../../components/B3CustomForm'));\nconst getList = (b3Lang: LangFormatFunction) => [\n  {\n    name: 'name',\n    label: b3Lang('global.createShoppingList.name'),\n    required: true,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    maxLength: 200,\n  },\n  {\n    name: 'description',\n    label: b3Lang('global.createShoppingList.description'),\n    required: false,\n    default: '',\n    fieldType: 'multiline',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    rows: 4,\n    maxLength: 200,\n  },\n];\n\ninterface CreateShoppingListProps {\n  open: boolean;\n  onChange: () => void;\n  onClose: () => void;\n}\n\nfunction CreateShoppingList({ open, onChange, onClose }: CreateShoppingListProps) {\n  const container = useRef<HTMLInputElement | null>(null);\n\n  const b3Lang = useB3Lang();\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setValue,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleConfirm = () => {\n    handleSubmit(async (data) => {\n      const { name, description } = data;\n\n      setLoading(true);\n      await createShoppingList({\n        data: { name, description },\n        isB2BUser,\n      });\n      setLoading(false);\n      onChange();\n    })();\n  };\n\n  return (\n    <Box\n      sx={{\n        ml: 3,\n        cursor: 'pointer',\n        width: '50%',\n      }}\n    >\n      <Box ref={container} />\n\n      <B3Dialog\n        isOpen={open}\n        fullWidth\n        title={b3Lang('global.createShoppingList.createNew')}\n        loading={loading}\n        handleLeftClick={handleClose}\n        handRightClick={handleConfirm}\n      >\n        <Box\n          sx={{\n            minHeight: 'auto',\n            display: 'flex',\n            alignItems: 'flex-start',\n          }}\n        >\n          <B3CustomForm\n            formFields={getList(b3Lang)}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n      </B3Dialog>\n    </Box>\n  );\n}\n\nexport default CreateShoppingList;\n"],"file":"assets/CreateShoppingList-D32Dsd3e.js"}