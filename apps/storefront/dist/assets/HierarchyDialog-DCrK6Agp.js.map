{"version":3,"file":"HierarchyDialog-DCrK6Agp.js","sources":["../../src/utils/b3Company.ts","../../src/pages/CompanyHierarchy/components/HierarchyDialog.tsx"],"sourcesContent":["import { CompanyHierarchyListProps, CompanyHierarchyProps } from '@/types';\n\ntype BuildHierarchyProps = {\n  data: CompanyHierarchyListProps[];\n  companyId?: number | null;\n  parentId?: number | null;\n};\n\nexport const buildHierarchy = ({\n  data,\n  companyId,\n  parentId,\n}: BuildHierarchyProps): CompanyHierarchyProps[] => {\n  return data\n    .filter((company) => {\n      if (companyId) {\n        return company.companyId === companyId;\n      }\n      if (!parentId) {\n        return company.parentCompanyId === null || company.parentCompanyId === 0;\n      }\n\n      return company.parentCompanyId === parentId;\n    })\n    .map((company) => ({\n      ...company,\n      children: buildHierarchy({\n        data,\n        parentId: company.companyId,\n      }),\n    }));\n};\n\nexport const flattenBuildHierarchyCompanies = (company: CompanyHierarchyProps) => {\n  let result: CompanyHierarchyProps[] = [];\n\n  result.push({\n    companyId: company.companyId,\n    companyName: company.companyName,\n    parentCompanyId: company.parentCompanyId,\n    parentCompanyName: company.parentCompanyName,\n    channelFlag: company.channelFlag,\n  });\n\n  if (company.children && company.children.length > 0) {\n    company.children.forEach((child) => {\n      result = result.concat(flattenBuildHierarchyCompanies(child));\n    });\n  }\n\n  return result;\n};\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Box } from '@mui/material';\nimport Cookies from 'js-cookie';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport { PAGES_SUBSIDIARIES_PERMISSION_KEYS } from '@/constants';\nimport { endUserMasqueradingCompany, startUserMasqueradingCompany } from '@/shared/service/b2b';\nimport { deleteCart } from '@/shared/service/bc/graphql/cart';\nimport { store, useAppSelector } from '@/store';\nimport { setCompanyHierarchyInfoModules } from '@/store/slices/company';\nimport { setCartNumber } from '@/store/slices/global';\nimport {\n  CompanyHierarchyListProps,\n  CompanyHierarchyProps,\n  PagesSubsidiariesPermissionProps,\n} from '@/types';\nimport { buildHierarchy, flattenBuildHierarchyCompanies } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport { deleteCartData } from '@/utils/cartUtils';\n\ninterface HierarchyDialogProps {\n  open: boolean;\n  handleClose: () => void;\n  currentRow: Partial<CompanyHierarchyProps> | null;\n  companyHierarchyAllList?: CompanyHierarchyListProps[] | [];\n  title?: string;\n  context?: string;\n  dialogParams?: { [key: string]: string };\n}\nfunction HierarchyDialog({\n  open = false,\n  handleClose,\n  currentRow,\n  companyHierarchyAllList,\n  title,\n  context,\n  dialogParams = {},\n}: HierarchyDialogProps) {\n  const b3Lang = useB3Lang();\n  const navigate = useNavigate();\n\n  const { id: currentCompanyId } = useAppSelector(({ company }) => company.companyInfo);\n\n  const { pagesSubsidiariesPermission } = useAppSelector(({ company }) => company);\n\n  const { isHasCurrentPagePermission, companyHierarchyAllList: allList } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSwitchCompanyClick = async () => {\n    if (!currentRow) return;\n    try {\n      setLoading(true);\n\n      const cartEntityId = Cookies.get('cartId');\n\n      const { companyId } = currentRow;\n\n      if (!companyId) return;\n\n      if (companyId === Number(currentCompanyId)) {\n        await endUserMasqueradingCompany();\n      } else if (companyId) {\n        await startUserMasqueradingCompany(Number(companyId));\n      }\n\n      if (cartEntityId) {\n        const deleteCartObject = deleteCartData(cartEntityId);\n\n        await deleteCart(deleteCartObject);\n\n        store.dispatch(setCartNumber(0));\n      }\n\n      const selectCompanyHierarchyId = companyId === Number(currentCompanyId) ? '' : companyId;\n\n      const buildData = companyHierarchyAllList || allList;\n\n      store.dispatch(\n        setCompanyHierarchyInfoModules({\n          selectCompanyHierarchyId,\n          ...(companyHierarchyAllList && { companyHierarchyAllList }),\n          companyHierarchySelectSubsidiariesList: flattenBuildHierarchyCompanies(\n            buildHierarchy({\n              data: buildData,\n              companyId,\n            })[0],\n          ),\n        }),\n      );\n    } catch (error) {\n      b2bLogger.error(error);\n    } finally {\n      setLoading(false);\n\n      handleClose();\n    }\n  };\n\n  return (\n    <B3Dialog\n      isOpen={open}\n      rightSizeBtn={b3Lang('global.button.next')}\n      title={title || b3Lang('companyHierarchy.dialog.title')}\n      fullWidth\n      loading={loading}\n      handleLeftClick={handleClose}\n      handRightClick={handleSwitchCompanyClick}\n      restDialogParams={{\n        TransitionProps: {\n          onExited: () => {\n            if (!currentRow) return;\n            const { companyId } = currentRow;\n            if (companyId === Number(currentCompanyId)) {\n              const { hash } = window.location;\n              if (hash.includes('/shoppingList/')) {\n                navigate('/shoppingLists');\n              }\n            }\n            if (companyId !== Number(currentCompanyId) && !isHasCurrentPagePermission) {\n              const key = Object.keys(pagesSubsidiariesPermission).find((key) => {\n                return !!pagesSubsidiariesPermission[key as keyof PagesSubsidiariesPermissionProps];\n              });\n\n              const route = PAGES_SUBSIDIARIES_PERMISSION_KEYS.find((item) => item.key === key);\n\n              if (route) {\n                handleClose();\n                setLoading(false);\n                navigate(route.path);\n              }\n            }\n          },\n        },\n      }}\n      dialogSx={{\n        '& .MuiDialogTitle-root': {\n          border: 0,\n        },\n        '& .MuiDialogActions-root': {\n          border: 0,\n        },\n      }}\n      {...dialogParams}\n    >\n      <Box\n        sx={{\n          maxHeight: '600px',\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flex: 1,\n          }}\n        >\n          {context || b3Lang('companyHierarchy.dialog.content')}\n        </Box>\n      </Box>\n    </B3Dialog>\n  );\n}\n\nexport default HierarchyDialog;\n"],"names":["buildHierarchy","data","companyId","parentId","company","flattenBuildHierarchyCompanies","result","child","HierarchyDialog","open","handleClose","currentRow","companyHierarchyAllList","title","context","dialogParams","b3Lang","useB3Lang","navigate","useNavigate","currentCompanyId","useAppSelector","pagesSubsidiariesPermission","isHasCurrentPagePermission","allList","loading","setLoading","useState","handleSwitchCompanyClick","cartEntityId","Cookies","endUserMasqueradingCompany","startUserMasqueradingCompany","deleteCartObject","deleteCartData","deleteCart","store","setCartNumber","selectCompanyHierarchyId","buildData","setCompanyHierarchyInfoModules","error","b2bLogger","jsx","B3Dialog","hash","key","route","PAGES_SUBSIDIARIES_PERMISSION_KEYS","item","Box"],"mappings":"mXAQO,MAAMA,EAAiB,CAAC,CAC7B,KAAAC,EACA,UAAAC,EACA,SAAAC,CACF,IACSF,EACJ,OAAQG,GACHF,EACKE,EAAQ,YAAcF,EAE1BC,EAIEC,EAAQ,kBAAoBD,EAH1BC,EAAQ,kBAAoB,MAAQA,EAAQ,kBAAoB,CAI1E,EACA,IAAKA,IAAa,CACjB,GAAGA,EACH,SAAUJ,EAAe,CACvB,KAAAC,EACA,SAAUG,EAAQ,SACnB,CAAA,CAAA,EACD,EAGOC,EAAkCD,GAAmC,CAChF,IAAIE,EAAkC,CAAC,EAEvC,OAAAA,EAAO,KAAK,CACV,UAAWF,EAAQ,UACnB,YAAaA,EAAQ,YACrB,gBAAiBA,EAAQ,gBACzB,kBAAmBA,EAAQ,kBAC3B,YAAaA,EAAQ,WAAA,CACtB,EAEGA,EAAQ,UAAYA,EAAQ,SAAS,OAAS,GACxCA,EAAA,SAAS,QAASG,GAAU,CAClCD,EAASA,EAAO,OAAOD,EAA+BE,CAAK,CAAC,CAAA,CAC7D,EAGID,CACT,ECpBA,SAASE,EAAgB,CACvB,KAAAC,EAAO,GACP,YAAAC,EACA,WAAAC,EACA,wBAAAC,EACA,MAAAC,EACA,QAAAC,EACA,aAAAC,EAAe,CAAA,CACjB,EAAyB,CACvB,MAAMC,EAASC,EAAU,EACnBC,EAAWC,EAAY,EAEvB,CAAE,GAAIC,GAAqBC,EAAe,CAAC,CAAE,QAAAjB,CAAA,IAAcA,EAAQ,WAAW,EAE9E,CAAE,4BAAAkB,GAAgCD,EAAe,CAAC,CAAE,QAAAjB,KAAcA,CAAO,EAEzE,CAAE,2BAAAmB,EAA4B,wBAAyBC,CAAY,EAAAH,EACvE,CAAC,CAAE,QAAAjB,CAAQ,IAAMA,EAAQ,oBAC3B,EAEM,CAACqB,EAASC,CAAU,EAAIC,EAAAA,SAAkB,EAAK,EAE/CC,EAA2B,SAAY,CAC3C,GAAKjB,EACD,GAAA,CACFe,EAAW,EAAI,EAET,MAAAG,EAAeC,EAAQ,IAAI,QAAQ,EAEnC,CAAE,UAAA5B,GAAcS,EAEtB,GAAI,CAACT,EAAW,OAQhB,GANIA,IAAc,OAAOkB,CAAgB,EACvC,MAAMW,EAA2B,EACxB7B,GACH,MAAA8B,EAA6B,OAAO9B,CAAS,CAAC,EAGlD2B,EAAc,CACV,MAAAI,EAAmBC,EAAeL,CAAY,EAEpD,MAAMM,EAAWF,CAAgB,EAE3BG,EAAA,SAASC,EAAc,CAAC,CAAC,CAAA,CAGjC,MAAMC,EAA2BpC,IAAc,OAAOkB,CAAgB,EAAI,GAAKlB,EAEzEqC,EAAY3B,GAA2BY,EAEvCY,EAAA,SACJI,EAA+B,CAC7B,yBAAAF,EACA,GAAI1B,GAA2B,CAAE,wBAAAA,CAAwB,EACzD,uCAAwCP,EACtCL,EAAe,CACb,KAAMuC,EACN,UAAArC,CACD,CAAA,EAAE,CAAC,CAAA,CAEP,CAAA,CACH,QACOuC,EAAO,CACdC,EAAU,MAAMD,CAAK,CAAA,QACrB,CACAf,EAAW,EAAK,EAEJhB,EAAA,CAAA,CAEhB,EAGE,OAAAiC,EAAA,IAACC,EAAA,CACC,OAAQnC,EACR,aAAcO,EAAO,oBAAoB,EACzC,MAAOH,GAASG,EAAO,+BAA+B,EACtD,UAAS,GACT,QAAAS,EACA,gBAAiBf,EACjB,eAAgBkB,EAChB,iBAAkB,CAChB,gBAAiB,CACf,SAAU,IAAM,CACd,GAAI,CAACjB,EAAY,OACX,KAAA,CAAE,UAAAT,GAAcS,EAClB,GAAAT,IAAc,OAAOkB,CAAgB,EAAG,CACpC,KAAA,CAAE,KAAAyB,GAAS,OAAO,SACpBA,EAAK,SAAS,gBAAgB,GAChC3B,EAAS,gBAAgB,CAC3B,CAEF,GAAIhB,IAAc,OAAOkB,CAAgB,GAAK,CAACG,EAA4B,CACzE,MAAMuB,EAAM,OAAO,KAAKxB,CAA2B,EAAE,KAAMwB,GAClD,CAAC,CAACxB,EAA4BwB,CAA6C,CACnF,EAEKC,EAAQC,EAAmC,KAAMC,GAASA,EAAK,MAAQH,CAAG,EAE5EC,IACUrC,EAAA,EACZgB,EAAW,EAAK,EAChBR,EAAS6B,EAAM,IAAI,EACrB,CACF,CACF,CAEJ,EACA,SAAU,CACR,yBAA0B,CACxB,OAAQ,CACV,EACA,2BAA4B,CAC1B,OAAQ,CAAA,CAEZ,EACC,GAAGhC,EAEJ,SAAA4B,EAAA,IAACO,EAAA,CACC,GAAI,CACF,UAAW,OACb,EAEA,SAAAP,EAAA,IAACO,EAAA,CACC,GAAI,CACF,QAAS,OACT,cAAe,SACf,KAAM,CACR,EAEC,SAAApC,GAAWE,EAAO,iCAAiC,CAAA,CAAA,CACtD,CAAA,CACF,CACF,CAEJ"}