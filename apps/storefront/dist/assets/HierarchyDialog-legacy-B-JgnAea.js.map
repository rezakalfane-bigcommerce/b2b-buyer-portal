{"version":3,"file":"HierarchyDialog-legacy-B-JgnAea.js","sources":["../../src/pages/CompanyHierarchy/components/HierarchyDialog.tsx","../../src/utils/b3Company.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Box } from '@mui/material';\nimport Cookies from 'js-cookie';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport { PAGES_SUBSIDIARIES_PERMISSION_KEYS } from '@/constants';\nimport { endUserMasqueradingCompany, startUserMasqueradingCompany } from '@/shared/service/b2b';\nimport { deleteCart } from '@/shared/service/bc/graphql/cart';\nimport { store, useAppSelector } from '@/store';\nimport { setCompanyHierarchyInfoModules } from '@/store/slices/company';\nimport { setCartNumber } from '@/store/slices/global';\nimport {\n  CompanyHierarchyListProps,\n  CompanyHierarchyProps,\n  PagesSubsidiariesPermissionProps,\n} from '@/types';\nimport { buildHierarchy, flattenBuildHierarchyCompanies } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport { deleteCartData } from '@/utils/cartUtils';\n\ninterface HierarchyDialogProps {\n  open: boolean;\n  handleClose: () => void;\n  currentRow: Partial<CompanyHierarchyProps> | null;\n  companyHierarchyAllList?: CompanyHierarchyListProps[] | [];\n  title?: string;\n  context?: string;\n  dialogParams?: { [key: string]: string };\n}\nfunction HierarchyDialog({\n  open = false,\n  handleClose,\n  currentRow,\n  companyHierarchyAllList,\n  title,\n  context,\n  dialogParams = {},\n}: HierarchyDialogProps) {\n  const b3Lang = useB3Lang();\n  const navigate = useNavigate();\n\n  const { id: currentCompanyId } = useAppSelector(({ company }) => company.companyInfo);\n\n  const { pagesSubsidiariesPermission } = useAppSelector(({ company }) => company);\n\n  const { isHasCurrentPagePermission, companyHierarchyAllList: allList } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSwitchCompanyClick = async () => {\n    if (!currentRow) return;\n    try {\n      setLoading(true);\n\n      const cartEntityId = Cookies.get('cartId');\n\n      const { companyId } = currentRow;\n\n      if (!companyId) return;\n\n      if (companyId === Number(currentCompanyId)) {\n        await endUserMasqueradingCompany();\n      } else if (companyId) {\n        await startUserMasqueradingCompany(Number(companyId));\n      }\n\n      if (cartEntityId) {\n        const deleteCartObject = deleteCartData(cartEntityId);\n\n        await deleteCart(deleteCartObject);\n\n        store.dispatch(setCartNumber(0));\n      }\n\n      const selectCompanyHierarchyId = companyId === Number(currentCompanyId) ? '' : companyId;\n\n      const buildData = companyHierarchyAllList || allList;\n\n      store.dispatch(\n        setCompanyHierarchyInfoModules({\n          selectCompanyHierarchyId,\n          ...(companyHierarchyAllList && { companyHierarchyAllList }),\n          companyHierarchySelectSubsidiariesList: flattenBuildHierarchyCompanies(\n            buildHierarchy({\n              data: buildData,\n              companyId,\n            })[0],\n          ),\n        }),\n      );\n    } catch (error) {\n      b2bLogger.error(error);\n    } finally {\n      setLoading(false);\n\n      handleClose();\n    }\n  };\n\n  return (\n    <B3Dialog\n      isOpen={open}\n      rightSizeBtn={b3Lang('global.button.next')}\n      title={title || b3Lang('companyHierarchy.dialog.title')}\n      fullWidth\n      loading={loading}\n      handleLeftClick={handleClose}\n      handRightClick={handleSwitchCompanyClick}\n      restDialogParams={{\n        TransitionProps: {\n          onExited: () => {\n            if (!currentRow) return;\n            const { companyId } = currentRow;\n            if (companyId === Number(currentCompanyId)) {\n              const { hash } = window.location;\n              if (hash.includes('/shoppingList/')) {\n                navigate('/shoppingLists');\n              }\n            }\n            if (companyId !== Number(currentCompanyId) && !isHasCurrentPagePermission) {\n              const key = Object.keys(pagesSubsidiariesPermission).find((key) => {\n                return !!pagesSubsidiariesPermission[key as keyof PagesSubsidiariesPermissionProps];\n              });\n\n              const route = PAGES_SUBSIDIARIES_PERMISSION_KEYS.find((item) => item.key === key);\n\n              if (route) {\n                handleClose();\n                setLoading(false);\n                navigate(route.path);\n              }\n            }\n          },\n        },\n      }}\n      dialogSx={{\n        '& .MuiDialogTitle-root': {\n          border: 0,\n        },\n        '& .MuiDialogActions-root': {\n          border: 0,\n        },\n      }}\n      {...dialogParams}\n    >\n      <Box\n        sx={{\n          maxHeight: '600px',\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            flex: 1,\n          }}\n        >\n          {context || b3Lang('companyHierarchy.dialog.content')}\n        </Box>\n      </Box>\n    </B3Dialog>\n  );\n}\n\nexport default HierarchyDialog;\n","import { CompanyHierarchyListProps, CompanyHierarchyProps } from '@/types';\n\ntype BuildHierarchyProps = {\n  data: CompanyHierarchyListProps[];\n  companyId?: number | null;\n  parentId?: number | null;\n};\n\nexport const buildHierarchy = ({\n  data,\n  companyId,\n  parentId,\n}: BuildHierarchyProps): CompanyHierarchyProps[] => {\n  return data\n    .filter((company) => {\n      if (companyId) {\n        return company.companyId === companyId;\n      }\n      if (!parentId) {\n        return company.parentCompanyId === null || company.parentCompanyId === 0;\n      }\n\n      return company.parentCompanyId === parentId;\n    })\n    .map((company) => ({\n      ...company,\n      children: buildHierarchy({\n        data,\n        parentId: company.companyId,\n      }),\n    }));\n};\n\nexport const flattenBuildHierarchyCompanies = (company: CompanyHierarchyProps) => {\n  let result: CompanyHierarchyProps[] = [];\n\n  result.push({\n    companyId: company.companyId,\n    companyName: company.companyName,\n    parentCompanyId: company.parentCompanyId,\n    parentCompanyName: company.parentCompanyName,\n    channelFlag: company.channelFlag,\n  });\n\n  if (company.children && company.children.length > 0) {\n    company.children.forEach((child) => {\n      result = result.concat(flattenBuildHierarchyCompanies(child));\n    });\n  }\n\n  return result;\n};\n"],"names":["open","handleClose","currentRow","companyHierarchyAllList","title","context","dialogParams","b3Lang","useB3Lang","navigate","useNavigate","id","currentCompanyId","useAppSelector","company","companyInfo","pagesSubsidiariesPermission","isHasCurrentPagePermission","allList","companyHierarchyInfo","loading","setLoading","useState","jsx","B3Dialog","isOpen","rightSizeBtn","fullWidth","handleLeftClick","handRightClick","async","cartEntityId","Cookies","get","companyId","Number","endUserMasqueradingCompany","startUserMasqueradingCompany","deleteCartObject","deleteCartData","deleteCart","store","dispatch","setCartNumber","selectCompanyHierarchyId","buildData","setCompanyHierarchyInfoModules","companyHierarchySelectSubsidiariesList","flattenBuildHierarchyCompanies","buildHierarchy","data","error","b2bLogger","restDialogParams","TransitionProps","onExited","hash","window","location","includes","key","Object","keys","find","route","PAGES_SUBSIDIARIES_PERMISSION_KEYS","item","path","dialogSx","border","children","Box","sx","maxHeight","display","flexDirection","flex","parentId","filter","parentCompanyId","map","result","push","companyName","parentCompanyName","channelFlag","length","forEach","child","concat"],"mappings":"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"}