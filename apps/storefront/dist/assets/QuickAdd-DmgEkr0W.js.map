{"version":3,"file":"QuickAdd-DmgEkr0W.js","sources":["../../src/pages/ShoppingListDetails/components/QuickAdd.tsx"],"sourcesContent":["import { KeyboardEventHandler, useCallback, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, Grid, Typography } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { compareOption } from '@/utils/b3Product/b3Product';\nimport { getAllModifierDefaultValue, getQuickAddRowFields } from '@/utils/b3Product/shared/config';\n\nimport { getB2BVariantInfoBySkus, getBcVariantInfoBySkus } from '../../../shared/service/b2b';\nimport { ShoppingListAddProductOption, SimpleObject } from '../../../types';\n\ninterface AddToListContentProps {\n  updateList: () => void;\n  quickAddToList: (products: CustomFieldItems[]) => CustomFieldItems;\n  level?: number;\n  buttonText?: string;\n  buttonLoading?: boolean;\n  type?: string;\n}\n\nexport default function QuickAdd(props: AddToListContentProps) {\n  const b3Lang = useB3Lang();\n  const {\n    updateList,\n    quickAddToList,\n    level = 3,\n    buttonText = b3Lang('shoppingList.quickAdd.addToShoppingList'),\n    buttonLoading = false,\n    type,\n  } = props;\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const draftQuoteList = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteList);\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const [rows, setRows] = useState(level);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loopRows = (rows: number, fn: (index: number) => void) => {\n    new Array(rows).fill(1).forEach((_, index) => fn(index));\n  };\n\n  useEffect(() => {\n    let formFields: CustomFieldItems[] = [];\n    loopRows(rows, (index) => {\n      formFields = [...formFields, ...getQuickAddRowFields(index, b3Lang)];\n    });\n    setFormFields(formFields);\n    // disabling since b3Lang since it has rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rows]);\n\n  const handleAddRowsClick = () => {\n    setRows(rows + level);\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setError,\n    setValue,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const validateSkuInput = (index: number, sku: string, qty: string) => {\n    if (!sku && !qty) {\n      return true;\n    }\n\n    let isValid = true;\n    const quantity = parseInt(qty, 10) || 0;\n\n    if (!sku) {\n      setError(`sku-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.sku'),\n        }),\n      });\n      isValid = false;\n    }\n\n    if (!qty) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.qty'),\n        }),\n      });\n      isValid = false;\n    } else if (quantity <= 0) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: 'incorrect number',\n      });\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const getProductData = (value: CustomFieldItems) => {\n    const skuValue: SimpleObject = {};\n    let isValid = true;\n    loopRows(rows, (index) => {\n      const sku = value[`sku-${index}`];\n      const qty = value[`qty-${index}`];\n\n      isValid = validateSkuInput(index, sku, qty) === false ? false : isValid;\n\n      if (isValid && sku) {\n        const quantity = parseInt(qty, 10) || 0;\n        skuValue[sku] = skuValue[sku] ? (skuValue[sku] as number) + quantity : quantity;\n      }\n    });\n\n    return {\n      skuValue,\n      isValid,\n      skus: Object.keys(skuValue),\n    };\n  };\n\n  const getProductItems = useCallback(\n    (variantInfoList: CustomFieldItems, skuValue: SimpleObject, skus: string[]) => {\n      const notFoundSku: string[] = [];\n      const notPurchaseSku: string[] = [];\n      const productItems: CustomFieldItems[] = [];\n      const passSku: string[] = [];\n      const notAddAble: string[] = [];\n      const numberLimit: string[] = [];\n\n      skus.forEach((sku) => {\n        const variantInfo: CustomFieldItems | null = (variantInfoList || []).find(\n          (variant: CustomFieldItems) => variant.variantSku.toUpperCase() === sku.toUpperCase(),\n        );\n\n        if (!variantInfo) {\n          notFoundSku.push(sku);\n          return;\n        }\n\n        const {\n          productId,\n          variantId,\n          option: options,\n          purchasingDisabled = '1',\n          modifiers,\n          variantSku,\n        } = variantInfo;\n        const defaultModifiers = getAllModifierDefaultValue(modifiers);\n\n        const quantity = (skuValue[sku] as number) || 0;\n\n        if (purchasingDisabled === '1' && type !== 'shoppingList') {\n          notPurchaseSku.push(sku);\n          return;\n        }\n\n        const notPassedModifier = defaultModifiers.filter(\n          (modifier: CustomFieldItems) => !modifier.isVerified,\n        );\n        if (notPassedModifier.length > 0) {\n          notAddAble.push(sku);\n\n          return;\n        }\n\n        if (Number(quantity) < 1 || Number(quantity) > 1000000) {\n          numberLimit.push(sku);\n          return;\n        }\n\n        const optionList = (options || []).reduce(\n          (arr: ShoppingListAddProductOption[], optionStr: string) => {\n            try {\n              const option = typeof optionStr === 'string' ? JSON.parse(optionStr) : optionStr;\n              arr.push({\n                optionId: `attribute[${option.option_id}]`,\n                optionValue: `${option.id}`,\n              });\n              return arr;\n            } catch (error) {\n              return arr;\n            }\n          },\n          [],\n        );\n\n        defaultModifiers.forEach((modifier: CustomFieldItems) => {\n          const { type } = modifier;\n\n          if (type === 'date') {\n            const { defaultValue } = modifier;\n            Object.keys(defaultValue).forEach((key) => {\n              optionList.push({\n                optionId: `attribute[${modifier.option_id}][${key}]`,\n                optionValue: `${modifier.defaultValue[key]}`,\n              });\n            });\n          } else {\n            optionList.push({\n              optionId: `attribute[${modifier.option_id}]`,\n              optionValue: `${modifier.defaultValue}`,\n            });\n          }\n        });\n\n        passSku.push(sku);\n\n        const quoteDraftItem = draftQuoteList.find((item) => item.node.variantSku === variantSku);\n        if (quoteDraftItem) {\n          const oldOptionList = JSON.parse(quoteDraftItem.node.optionList);\n          let { quantity: quoteDraftItemQuantity } = quoteDraftItem.node;\n\n          const isAdd =\n            oldOptionList.length > optionList.length\n              ? compareOption(oldOptionList, optionList)\n              : compareOption(optionList, oldOptionList);\n\n          if (isAdd) {\n            quoteDraftItemQuantity += quantity;\n          }\n          if (quoteDraftItemQuantity > 1000000) {\n            numberLimit.push(sku);\n            return;\n          }\n        }\n\n        productItems.push({\n          ...variantInfo,\n          newSelectOptionList: optionList,\n          productId: parseInt(productId, 10) || 0,\n          quantity,\n          variantId: parseInt(variantId, 10) || 0,\n        });\n      });\n\n      return {\n        notFoundSku,\n        notPurchaseSku,\n        productItems,\n        passSku,\n        notAddAble,\n        numberLimit,\n      };\n    },\n    [draftQuoteList, type],\n  );\n\n  const showErrors = (\n    value: CustomFieldItems,\n    skus: string[],\n    inputType: 'sku' | 'qty',\n    message: string,\n  ) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setError(skuFieldName.replace('sku', inputType), {\n          type: 'manual',\n          message,\n        });\n      }\n    });\n  };\n\n  const clearInputValue = (value: CustomFieldItems, skus: string[]) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setValue(skuFieldName, '');\n        setValue(skuFieldName.replace('sku', 'qty'), '');\n      }\n    });\n  };\n\n  const getVariantList = async (skus: string[]) => {\n    const getVariantInfoBySku = isB2BUser ? getB2BVariantInfoBySkus : getBcVariantInfoBySkus;\n\n    try {\n      const { variantSku: variantInfoList } = await getVariantInfoBySku(\n        {\n          skus,\n        },\n        true,\n      );\n\n      return variantInfoList;\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const handleAddToList = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(\n        'Your business account is pending approval. This feature is currently disabled.',\n      );\n      return;\n    }\n\n    handleSubmit(async (value) => {\n      try {\n        setIsLoading(true);\n        const { skuValue, isValid, skus } = getProductData(value);\n\n        if (!isValid || skus.length <= 0) {\n          return;\n        }\n\n        const variantInfoList = await getVariantList(skus);\n        const { notFoundSku, notPurchaseSku, productItems, notAddAble, passSku, numberLimit } =\n          getProductItems(variantInfoList, skuValue, skus);\n\n        if (notFoundSku.length > 0) {\n          showErrors(value, notFoundSku, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotFound', {\n              notFoundSku: notFoundSku.join(', '),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (notPurchaseSku.length > 0) {\n          showErrors(value, notPurchaseSku, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotPurchasable', {\n              notPurchaseSku: notPurchaseSku.join(', '),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (notAddAble.length > 0) {\n          showErrors(value, notAddAble, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotAddable', {\n              notAddAble: notAddAble.join(', '),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (numberLimit.length > 0) {\n          numberLimit.forEach((sku) => {\n            showErrors(value, [sku], 'qty', '');\n          });\n\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuLimitQuantity', {\n              numberLimit: numberLimit.join(', '),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (productItems.length > 0) {\n          await quickAddToList(productItems);\n          clearInputValue(value, passSku);\n\n          updateList();\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLDivElement> = (e) => {\n    if (e.key === 'Enter') {\n      handleAddToList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isLoading} spinningHeight=\"auto\">\n      <Box sx={{ width: '100%' }}>\n        <Grid\n          container\n          sx={{\n            margin: '16px 0',\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              flex: 1,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              sx={{\n                color: '#000',\n              }}\n              variant=\"body1\"\n            >\n              {b3Lang('shoppingList.quickAdd.quickAdd')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <CustomButton\n              variant=\"text\"\n              sx={{\n                textTransform: 'initial',\n                ml: '-8px',\n                fontWeight: '400',\n              }}\n              onClick={handleAddRowsClick}\n            >\n              {b3Lang('shoppingList.quickAdd.showMoreRows')}\n            </CustomButton>\n          </Grid>\n        </Grid>\n\n        <Box\n          onKeyDown={handleKeyDown}\n          sx={{\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <B3CustomForm\n            formFields={formFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n\n        <CustomButton\n          variant=\"outlined\"\n          fullWidth\n          disabled={isLoading}\n          onClick={handleAddToList}\n          sx={{\n            margin: '20px 0',\n          }}\n        >\n          <B3Spin isSpinning={buttonLoading ? isLoading : false} tip=\"\" size={16}>\n            <Box\n              sx={{\n                flex: 1,\n                textAlign: 'center',\n              }}\n            >\n              {buttonText}\n            </Box>\n          </B3Spin>\n        </CustomButton>\n      </Box>\n    </B3Spin>\n  );\n}\n"],"names":["QuickAdd","props","b3Lang","useB3Lang","updateList","quickAddToList","level","buttonText","buttonLoading","type","isB2BUser","useAppSelector","isB2BUserSelector","companyStatus","company","draftQuoteList","quoteInfo","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","rows","setRows","useState","formFields","setFormFields","isLoading","setIsLoading","loopRows","fn","_","index","useEffect","getQuickAddRowFields","handleAddRowsClick","control","handleSubmit","getValues","errors","setError","setValue","useForm","validateSkuInput","sku","qty","isValid","quantity","getProductData","value","skuValue","getProductItems","useCallback","variantInfoList","skus","notFoundSku","notPurchaseSku","productItems","passSku","notAddAble","numberLimit","variantInfo","variant","productId","variantId","options","purchasingDisabled","modifiers","variantSku","defaultModifiers","getAllModifierDefaultValue","modifier","optionList","arr","optionStr","option","error","defaultValue","key","quoteDraftItem","item","oldOptionList","quoteDraftItemQuantity","compareOption","showErrors","inputType","message","skuFieldName","name","clearInputValue","getVariantList","getVariantInfoBySku","getB2BVariantInfoBySkus","getBcVariantInfoBySkus","handleAddToList","snackbar","handleKeyDown","e","jsx","B3Spin","jsxs","Box","Grid","Typography","CustomButton","B3CustomForm"],"mappings":"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"}