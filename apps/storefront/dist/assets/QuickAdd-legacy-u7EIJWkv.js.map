{"version":3,"file":"QuickAdd-legacy-u7EIJWkv.js","sources":["../../src/pages/ShoppingListDetails/components/QuickAdd.tsx"],"sourcesContent":["import { KeyboardEventHandler, useCallback, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, Grid, Typography } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { compareOption } from '@/utils/b3Product/b3Product';\nimport { getAllModifierDefaultValue, getQuickAddRowFields } from '@/utils/b3Product/shared/config';\n\nimport { getB2BVariantInfoBySkus, getBcVariantInfoBySkus } from '../../../shared/service/b2b';\nimport { ShoppingListAddProductOption, SimpleObject } from '../../../types';\n\ninterface AddToListContentProps {\n  updateList: () => void;\n  quickAddToList: (products: CustomFieldItems[]) => CustomFieldItems;\n  level?: number;\n  buttonText?: string;\n  buttonLoading?: boolean;\n  type?: string;\n}\n\nexport default function QuickAdd(props: AddToListContentProps) {\n  const b3Lang = useB3Lang();\n  const {\n    updateList,\n    quickAddToList,\n    level = 3,\n    buttonText = b3Lang('shoppingList.quickAdd.addToShoppingList'),\n    buttonLoading = false,\n    type,\n  } = props;\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const draftQuoteList = useAppSelector(({ quoteInfo }) => quoteInfo.draftQuoteList);\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const [rows, setRows] = useState(level);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loopRows = (rows: number, fn: (index: number) => void) => {\n    new Array(rows).fill(1).forEach((_, index) => fn(index));\n  };\n\n  useEffect(() => {\n    let formFields: CustomFieldItems[] = [];\n    loopRows(rows, (index) => {\n      formFields = [...formFields, ...getQuickAddRowFields(index, b3Lang)];\n    });\n    setFormFields(formFields);\n    // disabling since b3Lang since it has rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rows]);\n\n  const handleAddRowsClick = () => {\n    setRows(rows + level);\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setError,\n    setValue,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const validateSkuInput = (index: number, sku: string, qty: string) => {\n    if (!sku && !qty) {\n      return true;\n    }\n\n    let isValid = true;\n    const quantity = parseInt(qty, 10) || 0;\n\n    if (!sku) {\n      setError(`sku-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.sku'),\n        }),\n      });\n      isValid = false;\n    }\n\n    if (!qty) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.qty'),\n        }),\n      });\n      isValid = false;\n    } else if (quantity <= 0) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: 'incorrect number',\n      });\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const getProductData = (value: CustomFieldItems) => {\n    const skuValue: SimpleObject = {};\n    let isValid = true;\n    loopRows(rows, (index) => {\n      const sku = value[`sku-${index}`];\n      const qty = value[`qty-${index}`];\n\n      isValid = validateSkuInput(index, sku, qty) === false ? false : isValid;\n\n      if (isValid && sku) {\n        const quantity = parseInt(qty, 10) || 0;\n        skuValue[sku] = skuValue[sku] ? (skuValue[sku] as number) + quantity : quantity;\n      }\n    });\n\n    return {\n      skuValue,\n      isValid,\n      skus: Object.keys(skuValue),\n    };\n  };\n\n  const getProductItems = useCallback(\n    (variantInfoList: CustomFieldItems, skuValue: SimpleObject, skus: string[]) => {\n      const notFoundSku: string[] = [];\n      const notPurchaseSku: string[] = [];\n      const productItems: CustomFieldItems[] = [];\n      const passSku: string[] = [];\n      const notAddAble: string[] = [];\n      const numberLimit: string[] = [];\n\n      skus.forEach((sku) => {\n        const variantInfo: CustomFieldItems | null = (variantInfoList || []).find(\n          (variant: CustomFieldItems) => variant.variantSku.toUpperCase() === sku.toUpperCase(),\n        );\n\n        if (!variantInfo) {\n          notFoundSku.push(sku);\n          return;\n        }\n\n        const {\n          productId,\n          variantId,\n          option: options,\n          purchasingDisabled = '1',\n          modifiers,\n          variantSku,\n        } = variantInfo;\n        const defaultModifiers = getAllModifierDefaultValue(modifiers);\n\n        const quantity = (skuValue[sku] as number) || 0;\n\n        if (purchasingDisabled === '1' && type !== 'shoppingList') {\n          notPurchaseSku.push(sku);\n          return;\n        }\n\n        const notPassedModifier = defaultModifiers.filter(\n          (modifier: CustomFieldItems) => !modifier.isVerified,\n        );\n        if (notPassedModifier.length > 0) {\n          notAddAble.push(sku);\n\n          return;\n        }\n\n        if (Number(quantity) < 1 || Number(quantity) > 1000000) {\n          numberLimit.push(sku);\n          return;\n        }\n\n        const optionList = (options || []).reduce(\n          (arr: ShoppingListAddProductOption[], optionStr: string) => {\n            try {\n              const option = typeof optionStr === 'string' ? JSON.parse(optionStr) : optionStr;\n              arr.push({\n                optionId: `attribute[${option.option_id}]`,\n                optionValue: `${option.id}`,\n              });\n              return arr;\n            } catch (error) {\n              return arr;\n            }\n          },\n          [],\n        );\n\n        defaultModifiers.forEach((modifier: CustomFieldItems) => {\n          const { type } = modifier;\n\n          if (type === 'date') {\n            const { defaultValue } = modifier;\n            Object.keys(defaultValue).forEach((key) => {\n              optionList.push({\n                optionId: `attribute[${modifier.option_id}][${key}]`,\n                optionValue: `${modifier.defaultValue[key]}`,\n              });\n            });\n          } else {\n            optionList.push({\n              optionId: `attribute[${modifier.option_id}]`,\n              optionValue: `${modifier.defaultValue}`,\n            });\n          }\n        });\n\n        passSku.push(sku);\n\n        const quoteDraftItem = draftQuoteList.find((item) => item.node.variantSku === variantSku);\n        if (quoteDraftItem) {\n          const oldOptionList = JSON.parse(quoteDraftItem.node.optionList);\n          let { quantity: quoteDraftItemQuantity } = quoteDraftItem.node;\n\n          const isAdd =\n            oldOptionList.length > optionList.length\n              ? compareOption(oldOptionList, optionList)\n              : compareOption(optionList, oldOptionList);\n\n          if (isAdd) {\n            quoteDraftItemQuantity += quantity;\n          }\n          if (quoteDraftItemQuantity > 1000000) {\n            numberLimit.push(sku);\n            return;\n          }\n        }\n\n        productItems.push({\n          ...variantInfo,\n          newSelectOptionList: optionList,\n          productId: parseInt(productId, 10) || 0,\n          quantity,\n          variantId: parseInt(variantId, 10) || 0,\n        });\n      });\n\n      return {\n        notFoundSku,\n        notPurchaseSku,\n        productItems,\n        passSku,\n        notAddAble,\n        numberLimit,\n      };\n    },\n    [draftQuoteList, type],\n  );\n\n  const showErrors = (\n    value: CustomFieldItems,\n    skus: string[],\n    inputType: 'sku' | 'qty',\n    message: string,\n  ) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setError(skuFieldName.replace('sku', inputType), {\n          type: 'manual',\n          message,\n        });\n      }\n    });\n  };\n\n  const clearInputValue = (value: CustomFieldItems, skus: string[]) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setValue(skuFieldName, '');\n        setValue(skuFieldName.replace('sku', 'qty'), '');\n      }\n    });\n  };\n\n  const getVariantList = async (skus: string[]) => {\n    const getVariantInfoBySku = isB2BUser ? getB2BVariantInfoBySkus : getBcVariantInfoBySkus;\n\n    try {\n      const { variantSku: variantInfoList } = await getVariantInfoBySku(\n        {\n          skus,\n        },\n        true,\n      );\n\n      return variantInfoList;\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const handleAddToList = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(\n        'Your business account is pending approval. This feature is currently disabled.',\n      );\n      return;\n    }\n\n    handleSubmit(async (value) => {\n      try {\n        setIsLoading(true);\n        const { skuValue, isValid, skus } = getProductData(value);\n\n        if (!isValid || skus.length <= 0) {\n          return;\n        }\n\n        const variantInfoList = await getVariantList(skus);\n        const { notFoundSku, notPurchaseSku, productItems, notAddAble, passSku, numberLimit } =\n          getProductItems(variantInfoList, skuValue, skus);\n\n        if (notFoundSku.length > 0) {\n          showErrors(value, notFoundSku, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotFound', {\n              notFoundSku: notFoundSku.join(', '),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (notPurchaseSku.length > 0) {\n          showErrors(value, notPurchaseSku, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotPurchasable', {\n              notPurchaseSku: notPurchaseSku.join(', '),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (notAddAble.length > 0) {\n          showErrors(value, notAddAble, 'sku', '');\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuNotAddable', {\n              notAddAble: notAddAble.join(', '),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (numberLimit.length > 0) {\n          numberLimit.forEach((sku) => {\n            showErrors(value, [sku], 'qty', '');\n          });\n\n          snackbar.error(\n            b3Lang('shoppingList.quickAdd.skuLimitQuantity', {\n              numberLimit: numberLimit.join(', '),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (productItems.length > 0) {\n          await quickAddToList(productItems);\n          clearInputValue(value, passSku);\n\n          updateList();\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLDivElement> = (e) => {\n    if (e.key === 'Enter') {\n      handleAddToList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isLoading} spinningHeight=\"auto\">\n      <Box sx={{ width: '100%' }}>\n        <Grid\n          container\n          sx={{\n            margin: '16px 0',\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              flex: 1,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              sx={{\n                color: '#000',\n              }}\n              variant=\"body1\"\n            >\n              {b3Lang('shoppingList.quickAdd.quickAdd')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <CustomButton\n              variant=\"text\"\n              sx={{\n                textTransform: 'initial',\n                ml: '-8px',\n                fontWeight: '400',\n              }}\n              onClick={handleAddRowsClick}\n            >\n              {b3Lang('shoppingList.quickAdd.showMoreRows')}\n            </CustomButton>\n          </Grid>\n        </Grid>\n\n        <Box\n          onKeyDown={handleKeyDown}\n          sx={{\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <B3CustomForm\n            formFields={formFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n\n        <CustomButton\n          variant=\"outlined\"\n          fullWidth\n          disabled={isLoading}\n          onClick={handleAddToList}\n          sx={{\n            margin: '20px 0',\n          }}\n        >\n          <B3Spin isSpinning={buttonLoading ? isLoading : false} tip=\"\" size={16}>\n            <Box\n              sx={{\n                flex: 1,\n                textAlign: 'center',\n              }}\n            >\n              {buttonText}\n            </Box>\n          </B3Spin>\n        </CustomButton>\n      </Box>\n    </B3Spin>\n  );\n}\n"],"names":["props","b3Lang","useB3Lang","updateList","quickAddToList","level","buttonText","buttonLoading","type","isB2BUser","useAppSelector","isB2BUserSelector","companyStatus","company","companyInfo","status","draftQuoteList","quoteInfo","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","rows","setRows","useState","formFields","setFormFields","isLoading","setIsLoading","loopRows","fn","Array","fill","forEach","_","index","useEffect","getQuickAddRowFields","control","handleSubmit","getValues","formState","errors","setError","setValue","useForm","mode","getProductData","value","skuValue","isValid","sku","qty","validateSkuInput","quantity","parseInt","message","label","skus","Object","keys","getProductItems","useCallback","variantInfoList","notFoundSku","notPurchaseSku","productItems","passSku","notAddAble","numberLimit","variantInfo","find","variant","variantSku","toUpperCase","push","productId","variantId","option","options","purchasingDisabled","modifiers","defaultModifiers","getAllModifierDefaultValue","filter","modifier","isVerified","length","Number","optionList","reduce","arr","optionStr","JSON","parse","optionId","option_id","optionValue","id","error","defaultValue","key","quoteDraftItem","item","node","oldOptionList","quoteDraftItemQuantity","compareOption","newSelectOptionList","showErrors","inputType","skuFieldName","name","replace","handleAddToList","snackbar","info","async","getVariantInfoBySku","getB2BVariantInfoBySkus","getBcVariantInfoBySkus","getVariantList","join","isClose","clearInputValue","jsx","B3Spin","isSpinning","spinningHeight","children","jsxs","Box","sx","width","Grid","container","margin","flex","display","alignItems","Typography","color","CustomButton","textTransform","ml","fontWeight","onClick","handleAddRowsClick","onKeyDown","e","zIndex","B3CustomForm","fullWidth","disabled","tip","size","textAlign"],"mappings":"gmBA0BA,SAAiCA,GAC/B,MAAMC,EAASC,KACTC,WACJA,EAAAC,eACAA,EAAAC,MACAA,EAAQ,EAAAC,WACRA,EAAaL,EAAO,2CAAyCM,cAC7DA,GAAgB,EAAAC,KAChBA,GACER,EAEES,EAAYC,EAAeC,GAC3BC,EAAgBF,GAAe,EAAGG,aAAcA,EAAQC,YAAYC,SACpEC,EAAiBN,GAAe,EAAGO,eAAgBA,EAAUD,kBAE5DE,GAAgCC,KAEhCC,EAAMC,GAAWC,EAAAA,SAASjB,IAC1BkB,EAAYC,GAAiBF,EAAAA,SAA6B,KAC1DG,EAAWC,GAAgBJ,EAAAA,UAAS,GAErCK,EAAWA,CAACP,EAAcQ,KAC9B,IAAIC,MAAMT,GAAMU,KAAK,GAAGC,SAAQ,CAACC,EAAGC,IAAUL,EAAGK,IAAM,EAGzDC,EAAAA,WAAU,KACR,IAAIX,EAAiC,GAC5BI,EAAAP,GAAOa,IACdV,EAAa,IAAIA,KAAeY,EAAqBF,EAAOhC,GAAO,IAErEuB,EAAcD,EAAU,GAGvB,CAACH,IAEJ,MAIMgB,QACJA,EAAAC,aACAA,EAAAC,UACAA,EACAC,WAAWC,OAAEA,GAAOC,SACpBA,EAAAC,SACAA,GACEC,EAAQ,CACVC,KAAM,QAwCFC,EAAkBC,IACtB,MAAMC,EAAyB,CAAC,EAChC,IAAIC,GAAU,EAaP,OAZErB,EAAAP,GAAOa,IACd,MAAMgB,EAAMH,EAAM,OAAOb,KACnBiB,EAAMJ,EAAM,OAAOb,KAIzB,GAFAe,GAAgD,IA5C3BG,EAAClB,EAAegB,EAAaC,KAChD,IAACD,IAAQC,EACJ,OAAA,EAGT,IAAIF,GAAU,EACd,MAAMI,EAAWC,SAASH,EAAK,KAAO,EA4B/B,OA1BFD,IACMR,EAAA,OAAOR,IAAS,CACvBzB,KAAM,SACN8C,QAASrD,EAAO,2BAA4B,CAC1CsD,MAAOtD,EAAO,sCAGR+C,GAAA,GAGPE,EAQME,GAAY,IACZX,EAAA,OAAOR,IAAS,CACvBzB,KAAM,SACN8C,QAAS,qBAEDN,GAAA,IAZDP,EAAA,OAAOR,IAAS,CACvBzB,KAAM,SACN8C,QAASrD,EAAO,2BAA4B,CAC1CsD,MAAOtD,EAAO,sCAGR+C,GAAA,GASLA,CAAA,EAUKG,CAAiBlB,EAAOgB,EAAKC,IAAyBF,EAE5DA,GAAWC,EAAK,CAClB,MAAMG,EAAWC,SAASH,EAAK,KAAO,EAC7BH,EAAAE,GAAOF,EAASE,GAAQF,EAASE,GAAkBG,EAAWA,CAAA,KAIpE,CACLL,WACAC,UACAQ,KAAMC,OAAOC,KAAKX,GACpB,EAGIY,EAAkBC,EAAAA,aACtB,CAACC,EAAmCd,EAAwBS,KAC1D,MAAMM,EAAwB,GACxBC,EAA2B,GAC3BC,EAAmC,GACnCC,EAAoB,GACpBC,EAAuB,GACvBC,EAAwB,GA4GvB,OA1GFX,EAAAzB,SAASkB,IACN,MAAAmB,GAAwCP,GAAmB,IAAIQ,MAClEC,GAA8BA,EAAQC,WAAWC,gBAAkBvB,EAAIuB,gBAG1E,IAAKJ,EAEH,YADAN,EAAYW,KAAKxB,GAIb,MAAAyB,UACJA,EAAAC,UACAA,EACAC,OAAQC,EAAAC,mBACRA,EAAqB,IAAAC,UACrBA,EAAAR,WACAA,GACEH,EACEY,EAAmBC,EAA2BF,GAE9C3B,EAAYL,EAASE,IAAmB,EAE1C,GAAuB,MAAvB6B,GAAuC,iBAATtE,EAEhC,YADAuD,EAAeU,KAAKxB,GAOlB,GAHsB+B,EAAiBE,QACxCC,IAAgCA,EAASC,aAEtBC,OAAS,EAG7B,YAFAnB,EAAWO,KAAKxB,GAKlB,GAAIqC,OAAOlC,GAAY,GAAKkC,OAAOlC,GAAY,IAE7C,YADAe,EAAYM,KAAKxB,GAIb,MAAAsC,GAAcV,GAAW,IAAIW,QACjC,CAACC,EAAqCC,KAChC,IACF,MAAMd,EAA8B,iBAAdc,EAAyBC,KAAKC,MAAMF,GAAaA,EAKhE,OAJPD,EAAIhB,KAAK,CACPoB,SAAU,aAAajB,EAAOkB,aAC9BC,YAAa,GAAGnB,EAAOoB,OAElBP,QACAQ,GACA,OAAAR,CAAA,IAGX,IAGeT,EAAAjD,SAASoD,IAClB,MAAE3E,KAAAA,GAAS2E,EAEjB,GAAa,SAAT3E,EAAiB,CACb,MAAA0F,aAAEA,GAAiBf,EACzB1B,OAAOC,KAAKwC,GAAcnE,SAASoE,IACjCZ,EAAWd,KAAK,CACdoB,SAAU,aAAaV,EAASW,cAAcK,KAC9CJ,YAAa,GAAGZ,EAASe,aAAaC,MACvC,GACF,MAEDZ,EAAWd,KAAK,CACdoB,SAAU,aAAaV,EAASW,aAChCC,YAAa,GAAGZ,EAASe,gBAC1B,IAILjC,EAAQQ,KAAKxB,GAEP,MAAAmD,EAAiBpF,EAAeqD,MAAMgC,GAASA,EAAKC,KAAK/B,aAAeA,IAC9E,GAAI6B,EAAgB,CAClB,MAAMG,EAAgBZ,KAAKC,MAAMQ,EAAeE,KAAKf,YACrD,IAAMnC,SAAUoD,GAA2BJ,EAAeE,KAU1D,IAPEC,EAAclB,OAASE,EAAWF,OAC9BoB,EAAcF,EAAehB,GAC7BkB,EAAclB,EAAYgB,MAGJC,GAAApD,GAExBoD,EAAyB,IAE3B,YADArC,EAAYM,KAAKxB,EAEnB,CAGFe,EAAaS,KAAK,IACbL,EACHsC,oBAAqBnB,EACrBb,UAAWrB,SAASqB,EAAW,KAAO,EACtCtB,WACAuB,UAAWtB,SAASsB,EAAW,KAAO,GACvC,IAGI,CACLb,cACAC,iBACAC,eACAC,UACAC,aACAC,cACF,GAEF,CAACnD,EAAgBR,IAGbmG,EAAaA,CACjB7D,EACAU,EACAoD,EACAtD,KAEKE,EAAAzB,SAASkB,IACZ,MAAM4D,EAAepD,OAAOC,KAAKZ,GAAOuB,MAAMyC,GAAShE,EAAMgE,KAAU7D,KAAQ,GAE3E4D,GACFpE,EAASoE,EAAaE,QAAQ,MAAOH,GAAY,CAC/CpG,KAAM,SACN8C,WACD,GAEJ,EA+BG0D,EAAkBA,KAClB9F,GAAkD,IAAlBN,EACzBqG,EAAAC,KACP,kFAKJ7E,GAAa8E,UACP,IACFzF,GAAa,GACb,MAAMqB,SAAEA,EAAUC,QAAAA,EAAAQ,KAASA,GAASX,EAAeC,GAEnD,IAAKE,GAAWQ,EAAK6B,QAAU,EAC7B,OAGI,MAAAxB,OAlCWsD,WACf,MAAAC,EAAsB3G,EAAY4G,EAA0BC,EAE9D,IACF,MAAQ/C,WAAYV,SAA0BuD,EAC5C,CACE5D,SAEF,GAGK,OAAAK,QACAoC,GACP,MAAO,EAAC,GAqBwBsB,CAAe/D,IACvCM,YAAEA,EAAaC,eAAAA,EAAAC,aAAgBA,EAAcE,WAAAA,EAAAD,QAAYA,EAASE,YAAAA,GACtER,EAAgBE,EAAiBd,EAAUS,GAEzCM,EAAYuB,OAAS,IACZsB,EAAA7D,EAAOgB,EAAa,MAAO,IAC7BmD,EAAAhB,MACPhG,EAAO,oCAAqC,CAC1C6D,YAAaA,EAAY0D,KAAK,QAEhC,CACEC,SAAS,KAKX1D,EAAesB,OAAS,IACfsB,EAAA7D,EAAOiB,EAAgB,MAAO,IAChCkD,EAAAhB,MACPhG,EAAO,0CAA2C,CAChD8D,eAAgBA,EAAeyD,KAAK,QAEtC,CACEC,SAAS,KAKXvD,EAAWmB,OAAS,IACXsB,EAAA7D,EAAOoB,EAAY,MAAO,IAC5B+C,EAAAhB,MACPhG,EAAO,sCAAuC,CAC5CiE,WAAYA,EAAWsD,KAAK,QAE9B,CACEC,SAAS,KAKXtD,EAAYkB,OAAS,IACXlB,EAAApC,SAASkB,IACnB0D,EAAW7D,EAAO,CAACG,GAAM,MAAO,GAAE,IAG3BgE,EAAAhB,MACPhG,EAAO,yCAA0C,CAC/CkE,YAAaA,EAAYqD,KAAK,QAEhC,CACEC,SAAS,KAKXzD,EAAaqB,OAAS,UAClBjF,EAAe4D,GArGL0D,EAAC5E,EAAyBU,KAC3CA,EAAAzB,SAASkB,IACZ,MAAM4D,EAAepD,OAAOC,KAAKZ,GAAOuB,MAAMyC,GAAShE,EAAMgE,KAAU7D,KAAQ,GAE3E4D,IACFnE,EAASmE,EAAc,IACvBnE,EAASmE,EAAaE,QAAQ,MAAO,OAAQ,IAAE,GAElD,EA8FKW,CAAgB5E,EAAOmB,GAEZ9D,IACb,CACA,QACAuB,GAAa,EAAK,IAvEtBW,EAyEG,EASL,OACGsF,EAAAA,IAAAC,EAAA,CAAOC,WAAYpG,EAAWqG,eAAe,OAC5CC,SAACC,EAAAA,KAAAC,EAAA,CAAIC,GAAI,CAAEC,MAAO,QAChBJ,SAAA,CAAAC,EAAAA,KAACI,EAAA,CACCC,WAAS,EACTH,GAAI,CACFI,OAAQ,UAGVP,SAAA,CAAAJ,EAAAA,IAACS,EAAA,CACC/B,MAAI,EACJ6B,GAAI,CACFK,KAAM,EACNC,QAAS,OACTC,WAAY,UAGdV,SAAAJ,EAAAA,IAACe,EAAA,CACCR,GAAI,CACFS,MAAO,QAETrE,QAAQ,QAEPyD,WAAO,sCAGZJ,EAAAA,IAACS,EAAK,CAAA/B,MAAI,EACR0B,SAAAJ,EAAAA,IAACiB,EAAA,CACCtE,QAAQ,OACR4D,GAAI,CACFW,cAAe,UACfC,GAAI,OACJC,WAAY,OAEdC,QAnXeC,KACzB5H,EAAQD,EAAOf,EAAK,EAoXT0H,WAAO,6CAKdJ,EAAAA,IAACM,EAAA,CACCiB,UAhDqDC,IAC7C,UAAVA,EAAEhD,KACYa,GAAA,EA+CZkB,GAAI,CACF,UAAW,CACTkB,OAAQ,IAIZrB,SAAAJ,EAAAA,IAAC0B,EAAA,CACC9H,aACAiB,SACAJ,UACAE,YACAI,eAIJiF,EAAAA,IAACiB,EAAA,CACCtE,QAAQ,WACRgF,WAAS,EACTC,SAAU9H,EACVuH,QAAShC,EACTkB,GAAI,CACFI,OAAQ,UAGVP,SAAAJ,EAAAA,IAACC,GAAOC,aAAYtH,GAAgBkB,EAAmB+H,IAAI,GAAGC,KAAM,GAClE1B,SAAAJ,EAAAA,IAACM,EAAA,CACCC,GAAI,CACFK,KAAM,EACNmB,UAAW,UAGZ3B,SAAAzH,YAOf"}