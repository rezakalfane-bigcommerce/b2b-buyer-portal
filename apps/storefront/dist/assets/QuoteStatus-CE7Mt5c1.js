import{B as t,bK as r,aB as n,aH as i,ag as l,ah as h}from"./react-setup-CIpmLpp1.js";import"./load-functions-BRbpFqwb.js";import"./reactVendor-BTcQ-GDs.js";import{j as f}from"./mui-BLXOPN2Y.js";import{u as y}from"./lang-DZEhsX8V.js";import"./base-BCVDEF8S.js";const c=(e,o)=>"{\n  ".concat(o==="b2b"?"quotes":"customerQuotes","(\n    first: ").concat(e.first,"\n    offset: ").concat(e.offset,'\n    search: "').concat(e.q||"",'"\n    orderBy: "').concat((e==null?void 0:e.orderBy)||"",'"\n    createdBy: "').concat((e==null?void 0:e.createdBy)||"",'"\n    email: "').concat((e==null?void 0:e.email)||"",'"\n    salesRep: "').concat((e==null?void 0:e.salesRep)||"",'"\n    ').concat(e!=null&&e.status?'status: "'.concat(e.status,'"'):"","\n    ").concat(e!=null&&e.dateCreatedBeginAt?'dateCreatedBeginAt: "'.concat(e.dateCreatedBeginAt,'"'):"","\n    ").concat(e!=null&&e.dateCreatedEndAt?'dateCreatedEndAt: "'.concat(e.dateCreatedEndAt,'"'):"","\n    ").concat(o==="bc"?"channelId: ".concat((e==null?void 0:e.channelId)||1):"","\n  ) {\n    totalCount,\n    edges {\n      node {\n        id,\n        createdAt,\n        updatedAt,\n        quoteNumber,\n        quoteTitle,\n        referenceNumber,\n        createdBy,\n        expiredAt,\n        expiredAt,\n        discount,\n        grandTotal,\n        currency,\n        status,\n        salesRep,\n        salesRepEmail,\n        orderId,\n        subtotal,\n        totalAmount,\n        taxTotal,\n      }\n    }\n  }\n}"),B=()=>"{\n  customerAddresses (\n    first: 50\n    offset: 0\n  ){\n    totalCount,\n    edges {\n      node {\n        id,\n        createdAt,\n        updatedAt,\n        firstName,\n        lastName,\n        company,\n        bcAddressId,\n        address1,\n        address2,\n        city,\n        stateOrProvince,\n        postalCode,\n        country,\n        countryCode,\n        phone,\n        addressType,\n      },\n    },\n  }\n}",$=e=>"{\n  addresses (\n    first: 50\n    offset: 0\n    companyId: ".concat(e,"\n  ){\n    totalCount,\n    edges{\n      node{\n        id,\n        createdAt,\n        updatedAt,\n        firstName,\n        lastName,\n        isShipping,\n        isBilling,\n        addressLine1,\n        addressLine2,\n        address,\n        city,\n        state,\n        stateCode,\n        country,\n        countryCode,\n        zipCode,\n        phoneNumber,\n        isActive,\n        label,\n        company,\n        uuid,\n        isDefaultShipping,\n        isDefaultBilling,\n      },\n    },\n  }\n}"),d=e=>'mutation{\n  quoteCreate(quoteData: {\n    message: "'.concat(e.message,'",\n    legalTerms: "').concat(e.legalTerms,'",\n    totalAmount: "').concat(e.totalAmount,'",\n    grandTotal: "').concat(e.grandTotal,'",\n    subtotal: "').concat(e.subtotal||"",'",\n    taxTotal: "').concat(e.taxTotal||"",'"\n    ').concat(e!=null&&e.companyId?"companyId: ".concat(e.companyId):"",'\n    storeHash: "').concat(e.storeHash,'",\n    discount: "').concat(e.discount,'",\n    channelId: ').concat(e.channelId,',\n    userEmail: "').concat((e==null?void 0:e.userEmail)||"",'",\n    currency: ').concat(r(e.currency),"\n    shippingAddress: ").concat(r(e.shippingAddress),"\n    billingAddress: ").concat(r(e.billingAddress),"\n    contactInfo: ").concat(r(e.contactInfo),"\n    productList: ").concat(n(e.productList||[]),",\n    fileList: ").concat(n(e.fileList||[]),',\n    quoteTitle: "').concat(e.quoteTitle,'"\n    ').concat(e!=null&&e.extraFields?"extraFields: ".concat(n((e==null?void 0:e.extraFields)||[])):"","\n    ").concat(e!=null&&e.referenceNumber?'referenceNumber: "'.concat(e==null?void 0:e.referenceNumber,'"'):"","\n    ").concat(e!=null&&e.recipients?"recipients: ".concat(n((e==null?void 0:e.recipients)||[])):"","\n  }) {\n    quote{\n      id,\n      createdAt,\n    }\n  }\n}"),a=e=>"mutation{\n  quoteUpdate(\n    id: ".concat(e.id,",\n    quoteData: ").concat(r(e.quoteData),"\n  ) {\n    quote{\n      trackingHistory,\n    }\n  }\n}"),p=e=>"{\n  quote(\n    id: ".concat(e.id,',\n    storeHash: "').concat(i,'",\n    date:  "').concat((e==null?void 0:e.date)||"",'",\n  ) {\n    id,\n    createdAt,\n    updatedAt,\n    quoteNumber,\n    quoteTitle,\n    referenceNumber,\n    userEmail,\n    bcCustomerId,\n    createdBy,\n    expiredAt,\n    companyId {\n      id,\n      companyName,\n      bcGroupName,\n      description,\n      catalogId,\n      companyStatus,\n      addressLine1,\n      addressLine2,\n      city,\n      state,\n      zipCode,\n      country,\n      extraFields {\n        fieldName,\n        fieldValue,\n      },\n    },\n    salesRepStatus,\n    customerStatus,\n    subtotal,\n    discount,\n    grandTotal,\n    cartId,\n    cartUrl,\n    checkoutUrl,\n    bcOrderId,\n    currency,\n    contactInfo,\n    trackingHistory,\n    extraFields {\n      fieldName,\n      fieldValue,\n    },\n    notes,\n    legalTerms,\n    shippingTotal,\n    taxTotal,\n    totalAmount,\n    shippingMethod,\n    billingAddress,\n    oldSalesRepStatus,\n    oldCustomerStatus,\n    recipients,\n    discountType,\n    discountValue,\n    status,\n    company,\n    salesRep,\n    salesRepEmail,\n    orderId,\n    shippingAddress,\n    productsList {\n      productId,\n      sku,\n      basePrice,\n      discount,\n      offeredPrice,\n      quantity,\n      variantId,\n      imageUrl,\n      orderQuantityMaximum,\n      orderQuantityMinimum,\n      productName,\n      purchaseHandled,\n      options,\n      notes,\n      costPrice,\n      inventoryTracking,\n      inventoryLevel,\n    },\n    storefrontAttachFiles {\n      id,\n      fileName,\n      fileType,\n      fileUrl,\n      createdBy,\n    },\n    backendAttachFiles {\n      id,\n      fileName,\n      fileType,\n      fileUrl,\n      createdBy,\n    },\n    storeInfo {\n      storeName,\n      storeAddress,\n      storeCountry,\n      storeLogo,\n      storeUrl,\n    },\n    companyInfo {\n      companyId,\n      companyName,\n      companyAddress,\n      companyCountry,\n      companyState,\n      companyCity,\n      companyZipCode,\n      phoneNumber,\n    },\n    salesRepInfo {\n      salesRepName,\n      salesRepEmail,\n      salesRepPhoneNumber,\n    },\n    quoteLogo,\n    quoteUrl,\n    channelId,\n    channelName,\n    allowCheckout,\n    displayDiscount,\n  }\n}'),m=e=>"mutation{\n  quoteFrontendPdf(\n    quoteId: ".concat(e.quoteId,',\n    storeHash: "').concat(i,'",\n    createdAt: ').concat(e.createdAt,',\n    lang: "').concat(e.lang,'",\n    isPreview: ').concat(e.isPreview,"\n  ) {\n    url,\n    content,\n  }\n}"),g=e=>"mutation{\n  quoteCheckout(\n    id: ".concat(e.id,',\n    storeHash: "').concat(i,'",\n  ) {\n    quoteCheckout {\n      checkoutUrl,\n      cartId,\n      cartUrl,\n    }\n  }\n}'),C=e=>"mutation{\n  quoteAttachFileCreate(\n    quoteId: ".concat(e.quoteId,",\n    fileList: ").concat(n(e.fileList||[]),"\n  ) {\n    attachFiles {\n      id,\n      createdBy,\n      fileUrl,\n    }\n  }\n}"),b=e=>"mutation{\n  quoteAttachFileDelete(\n    quoteId: ".concat(e.quoteId,",\n    fileId: ").concat(e.fileId,"\n  ) {\n    message\n  }\n}"),A="\nquery getStorefrontProductSettings($storeHash: String!, $channelId: Int) {\n  storefrontProductSettings(storeHash: $storeHash, channelId: $channelId) {\n    hidePriceFromGuests\n  }\n}\n",I="query getQuoteExtraFields($storeHash: String, $channelId: Int) {\n  quoteExtraFieldsConfig(storeHash: $storeHash, channelId: $channelId) {\n    fieldName,\n    fieldType,\n    isRequired,\n    defaultValue,\n    maximumLength,\n    numberOfRows,\n    maximumValue,\n    listOfValue,\n    visibleToEnduser,\n    labelName,\n    id,\n    isUnique,\n    valueConfigs,\n    fieldCategory,\n  }\n}",E=()=>t.graphqlB2B({query:B()}),H=e=>t.graphqlB2B({query:$(e)}),P=e=>t.graphqlB2B({query:c(e,"b2b")}).then(o=>o.quotes),R=e=>t.graphqlB2B({query:c(e,"bc")}).then(o=>o.customerQuotes),v=e=>t.graphqlB2B({query:d(e)}),k=e=>t.graphqlB2B({query:d(e)}),U=e=>t.graphqlB2B({query:a(e)}),O=e=>t.graphqlB2B({query:a(e)}),V=e=>t.graphqlB2B({query:p(e)}),j=e=>t.graphqlB2B({query:p(e)}),w=e=>t.graphqlB2B({query:m(e)}),G=e=>t.graphqlB2B({query:m(e)}),M=e=>t.graphqlB2B({query:g(e)}),z=e=>t.graphqlB2B({query:g(e)}),K=e=>t.graphqlB2B({query:C(e)}),Z=e=>t.graphqlB2B({query:b(e)}),J=()=>t.graphqlB2B({query:A,variables:{storeHash:i,channelId:l}}),W=()=>t.graphqlB2B({query:I,variables:{storeHash:i,channelId:l}}),x={0:{textColor:"rgba(0, 0, 0, 0.87)",idLang:"global.quoteStatusCode.draft",color:"#D8D6D1"},1:{textColor:"rgba(0, 0, 0, 0.87)",idLang:"global.quoteStatusCode.open",color:"#F1C224"},4:{textColor:"rgba(0, 0, 0, 0.87)",idLang:"global.quoteStatusCode.ordered",color:"#C4DD6C"},5:{textColor:"#fff",idLang:"global.quoteStatusCode.expired",color:"#BD3E1E"}},N=(e,o)=>{const u=x[e];if(!u)return;const{idLang:s,...q}=u;return{...q,name:o(s)}};function X(e){const o=y(),{code:u}=e,s=N(u,o);return s!=null&&s.name?f.jsx(h,{color:s.color,textColor:s.textColor,children:s.name}):null}export{X as Q,O as a,z as b,M as c,j as d,V as e,G as f,J as g,w as h,H as i,E as j,k,v as l,Z as m,W as n,P as o,R as p,K as q,U as u};
//# sourceMappingURL=QuoteStatus-CE7Mt5c1.js.map
