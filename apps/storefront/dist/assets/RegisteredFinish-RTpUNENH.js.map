{"version":3,"file":"RegisteredFinish-RTpUNENH.js","sources":["../../src/pages/Registered/PrimaryButton.tsx","../../src/pages/Registered/styled.ts","../../src/pages/Registered/RegisteredFinish.tsx"],"sourcesContent":["import { Button, useTheme } from '@mui/material';\n\ninterface Props {\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  children: React.ReactNode;\n}\n\nexport function PrimaryButton({ onClick, children }: Props) {\n  const theme = useTheme();\n\n  return (\n    <Button\n      variant=\"contained\"\n      type=\"button\"\n      onClick={onClick}\n      sx={{\n        backgroundColor: theme.palette.primary.main,\n      }}\n    >\n      {children}\n    </Button>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const StyleTipContainer = styled('p')(() => ({\n  margin: '2rem auto',\n}));\n\nexport const InformationLabels = styled('h3')(() => ({\n  margin: '1rem 0',\n  display: 'flex',\n  justifyContent: 'center',\n  fontSize: '34px',\n  fontWeight: '400',\n}));\n\nexport const InformationFourLabels = styled('h4')(() => ({\n  marginBottom: '20px',\n}));\n\nexport const TipContent = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n});\n\nexport const TipLogin = styled('div')(() => ({\n  cursor: 'pointer',\n  color: '#1976d2',\n  borderBottom: '1px solid #1976d2',\n}));\n\nexport const RegisteredContainer = styled('div')((props: CustomFieldItems) => {\n  const { isMobile = false } = props;\n  const style = isMobile\n    ? {}\n    : {\n        padding: '20px 40px',\n      };\n\n  return style;\n});\n\nexport const RegisteredImage = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100%',\n});\n","import { useContext } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Alert, Box } from '@mui/material';\n\nimport { getContrastColor } from '@/components/outSideComponents/utils/b3CustomStyles';\nimport { useMobile } from '@/hooks';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { B3SStorage } from '@/utils';\n\nimport { RegisteredContext } from './context/RegisteredContext';\nimport { PrimaryButton } from './PrimaryButton';\nimport { StyleTipContainer } from './styled';\n\ninterface Props {\n  handleFinish: () => void;\n  isBCToB2B?: boolean;\n}\n\nexport default function RegisteredFinish({ handleFinish, isBCToB2B = false }: Props) {\n  const { state } = useContext(RegisteredContext);\n  const b3Lang = useB3Lang();\n\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n  const [isMobile] = useMobile();\n\n  const customColor = getContrastColor(backgroundColor);\n\n  const { accountType, submitSuccess, isAutoApproval, storeName } = state;\n\n  const blockPendingAccountOrderCreation =\n    B3SStorage.get('blockPendingAccountOrderCreation') && !isAutoApproval;\n\n  const renderB2BSuccessPage = () => {\n    if (accountType === '1') {\n      return isAutoApproval ? (\n        <StyleTipContainer>\n          {b3Lang('global.registerFinish.autoApproved.tip', {\n            storeName: storeName ?? '',\n          })}\n        </StyleTipContainer>\n      ) : (\n        <>\n          {blockPendingAccountOrderCreation && (\n            <Alert\n              severity=\"warning\"\n              variant=\"filled\"\n              sx={{\n                margin: 'auto',\n                borderRadius: '4px',\n                padding: '6px 16px',\n                maxWidth: '820px',\n              }}\n            >\n              {b3Lang('global.registerFinish.blockPendingAccountOrderCreation.tip')}\n            </Alert>\n          )}\n          <StyleTipContainer>\n            {blockPendingAccountOrderCreation\n              ? b3Lang('global.registerFinish.notAutoApproved.warningTip')\n              : b3Lang('global.registerFinish.notAutoApproved.tip')}\n          </StyleTipContainer>\n        </>\n      );\n    }\n\n    if (accountType === '2') {\n      return (\n        <StyleTipContainer>\n          {b3Lang('global.registerFinish.bcSuccess.tip', {\n            storeName: storeName ?? '',\n          })}\n        </StyleTipContainer>\n      );\n    }\n    return undefined;\n  };\n\n  return (\n    <Box\n      sx={\n        isBCToB2B\n          ? {\n              pl: 2,\n              pr: 2,\n              mt: 2,\n              '& p': {\n                color: customColor,\n              },\n              width: isMobile ? '100%' : '537px',\n              boxShadow:\n                '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n              borderRadius: '4px',\n              background: '#FFFFFF',\n              padding: '0 0.8rem 1rem 0.8rem',\n            }\n          : {\n              mt: 2,\n              '& p': {\n                color: customColor,\n              },\n            }\n      }\n    >\n      {submitSuccess && (\n        <>\n          {renderB2BSuccessPage()}\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              pt: 2,\n            }}\n          >\n            <PrimaryButton onClick={handleFinish}>{b3Lang('global.button.finish')}</PrimaryButton>\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n}\n"],"names":["PrimaryButton","onClick","children","theme","useTheme","jsx","Button","StyleTipContainer","styled","InformationLabels","InformationFourLabels","TipContent","RegisteredContainer","props","isMobile","RegisteredImage","RegisteredFinish","handleFinish","isBCToB2B","state","useContext","RegisteredContext","b3Lang","useB3Lang","backgroundColor","CustomStyleContext","useMobile","customColor","getContrastColor","accountType","submitSuccess","isAutoApproval","storeName","blockPendingAccountOrderCreation","B3SStorage","renderB2BSuccessPage","jsxs","Fragment","Alert","Box"],"mappings":"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"}