{"version":3,"file":"SearchProduct-SfTXrr7y.js","sources":["../../../../node_modules/@mui/icons-material/UploadFile.js","../../src/pages/ShoppingListDetails/components/ChooseOptionsDialog.tsx","../../src/pages/ShoppingListDetails/context/ShoppingListDetailsContext.tsx","../../src/pages/ShoppingListDetails/components/ProductListDialog.tsx","../../src/pages/ShoppingListDetails/components/SearchProduct.tsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm4 18H6V4h7v5h5zM8 15.01l1.41 1.41L11 14.84V19h2v-4.16l1.59 1.59L16 15.01 12.01 11z\"\n}), 'UploadFile');","import {\n  ChangeEvent,\n  Dispatch,\n  KeyboardEvent,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport { useB3Lang } from '@b3/lang';\nimport styled from '@emotion/styled';\nimport { Box, Divider, TextField, Typography } from '@mui/material';\nimport isEqual from 'lodash-es/isEqual';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { searchB2BProducts, searchBcProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { currencyFormat, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport {\n  calculateProductListPrice,\n  getBCPrice,\n  getProductInfoDisplayPrice,\n  getVariantInfoDisplayPrice,\n} from '@/utils/b3Product/b3Product';\n\nimport { AllOptionProps, ShoppingListProductItem, SimpleObject, Variant } from '../../../types';\nimport {\n  Base64,\n  getOptionRequestData,\n  getProductOptionsFields,\n} from '../../../utils/b3Product/shared/config';\n\nconst Flex = styled('div')({\n  display: 'flex',\n  wordBreak: 'break-word',\n  gap: '8px',\n  flexWrap: 'wrap',\n  padding: '12px 0 12px',\n  '&:first-of-type': {\n    marginTop: '12px',\n  },\n});\n\ninterface FlexItemProps {\n  padding?: string;\n}\n\nconst FlexItem = styled('div')(({ padding }: FlexItemProps) => ({\n  display: 'flex',\n  flexGrow: 1,\n  flexShrink: 1,\n  alignItems: 'flex-start',\n  width: '100%',\n  padding: padding || '0 0 0 16px',\n}));\n\nconst ProductImage = styled('img')(() => ({\n  width: '60px',\n  height: '60px',\n  borderRadius: '4px',\n  marginTop: '12px',\n  flexShrink: 0,\n}));\n\nconst ProductOptionText = styled('div')(() => ({\n  fontSize: '0.75rem',\n  lineHeight: '1.5',\n  color: '#455A64',\n}));\n\nconst StyleTextField = styled(TextField)(() => ({\n  '& input::-webkit-outer-spin-button, input::-webkit-inner-spin-button': {\n    marginTop: '-8px',\n    marginBottom: '8px',\n  },\n}));\n\ninterface ChooseOptionsDialogProps {\n  isOpen: boolean;\n  product?: ShoppingListProductItem;\n  onCancel: () => void;\n  onConfirm: (products: CustomFieldItems[]) => void;\n  isEdit?: boolean;\n  isLoading: boolean;\n  setIsLoading: Dispatch<SetStateAction<boolean>>;\n  addButtonText?: string;\n  isB2BUser: boolean;\n  type?: string;\n}\n\ninterface ChooseOptionsProductProps extends ShoppingListProductItem {\n  newSelectOptionList: {\n    optionId: string;\n    optionValue: any;\n  }[];\n  productId: number;\n  quantity: number;\n  variantId: number;\n  additionalProducts: CustomFieldItems;\n}\n\nexport default function ChooseOptionsDialog(props: ChooseOptionsDialogProps) {\n  const {\n    isOpen,\n    onCancel,\n    onConfirm,\n    product,\n    isEdit = false,\n    isLoading,\n    setIsLoading,\n    isB2BUser,\n    type,\n    ...restProps\n  } = props;\n\n  const b3Lang = useB3Lang();\n  const { addButtonText = b3Lang('shoppingList.chooseOptionsDialog.addToList') } = restProps;\n\n  const showInclusiveTaxPrice = useAppSelector(({ global }) => global.showInclusiveTaxPrice);\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const [quantity, setQuantity] = useState<number | string>(1);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [variantInfo, setVariantInfo] = useState<Partial<Variant> | null>(null);\n  const [variantSku, setVariantSku] = useState('');\n  const [currentImage, setCurrentImage] = useState<string>(product?.imageUrl || '');\n  const [isShowPrice, setShowPrice] = useState<boolean>(true);\n  const [additionalProducts, setAdditionalProducts] = useState<CustomFieldItems>({});\n  const [productPriceChangeOptions, setProductPriceChangeOptions] = useState<\n    Partial<AllOptionProps>[]\n  >([]);\n  const [newPrice, setNewPrice] = useState<number>(0);\n  const [chooseOptionsProduct, setChooseOptionsProduct] = useState<ChooseOptionsProductProps[]>([]);\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === 'quote' && product) {\n      if (variantSku) {\n        const newProduct = product as CustomFieldItems;\n        newProduct.quantity = quantity;\n        const isPrice = !!getVariantInfoDisplayPrice(newProduct.base_price, newProduct, {\n          sku: variantSku,\n        });\n        setShowPrice(isPrice);\n      } else {\n        const newProduct = product as CustomFieldItems;\n        newProduct.quantity = quantity;\n        const isPrice = !!getProductInfoDisplayPrice(newProduct.base_price, newProduct);\n        if (!isPrice) {\n          setShowPrice(false);\n        }\n      }\n    } else if ((type === 'shoppingList' || type === 'quickOrder') && product) {\n      setShowPrice(!product?.isPriceHidden);\n    }\n  }, [variantSku, quantity, product, type]);\n\n  const setChooseOptionsForm = async (product: ShoppingListProductItem) => {\n    try {\n      setIsLoading(true);\n\n      const modifiers =\n        product?.modifiers?.filter(\n          (modifier) =>\n            modifier.type === 'product_list_with_images' || modifier.type === 'product_list',\n        ) || [];\n      const productImages: SimpleObject = {};\n      const additionalProductsParams: CustomFieldItems = {};\n      if (modifiers.length > 0) {\n        const productIds = modifiers.reduce((arr: number[], modifier) => {\n          const { option_values: optionValues } = modifier;\n          optionValues.forEach((option) => {\n            if (option?.value_data?.product_id) {\n              arr.push(option.value_data.product_id);\n            }\n          });\n          return arr;\n        }, []);\n\n        if (productIds.length > 0) {\n          const getProducts = isB2BUser ? searchB2BProducts : searchBcProducts;\n\n          const companyId = companyInfoId || salesRepCompanyId;\n          const { productsSearch } = await getProducts({\n            productIds,\n            companyId,\n            customerGroupId,\n          });\n\n          productsSearch.forEach((product: CustomFieldItems) => {\n            productImages[product.id] = product.imageUrl;\n            additionalProductsParams[product.id] = product;\n          });\n        }\n      }\n\n      setAdditionalProducts(additionalProductsParams);\n\n      setQuantity(product.quantity);\n      if (product.variants?.length === 1 && product.variants[0]) {\n        setVariantInfo(product.variants[0]);\n      }\n\n      const productOptionsFields = getProductOptionsFields(product, productImages);\n      setFormFields([...productOptionsFields]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getProductPriceOptions = (product: ShoppingListProductItem) => {\n    const newProductPriceChangeOptionLists: Partial<AllOptionProps>[] = [];\n    product.allOptions?.forEach((item) => {\n      if (\n        item.type === 'product_list_with_images' ||\n        item.type === 'product_list' ||\n        item.type === 'checkbox' ||\n        item.type === 'rectangles' ||\n        item.type === 'swatch' ||\n        item.type === 'radio_buttons' ||\n        item.type === 'dropdown'\n      ) {\n        newProductPriceChangeOptionLists.push(item);\n      }\n    });\n\n    setProductPriceChangeOptions(newProductPriceChangeOptionLists);\n  };\n\n  useEffect(() => {\n    if (product) {\n      setChooseOptionsForm(product);\n      setChooseOptionsProduct([]);\n      setNewPrice(0);\n      if (product?.allOptions?.length) {\n        getProductPriceOptions(product);\n      }\n    } else {\n      setQuantity(1);\n      setFormFields([]);\n    }\n    // disabling as we don't need dispatchers here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [product]);\n\n  const getProductPrice = (product: ShoppingListProductItem) => {\n    const { variants = [] } = product;\n\n    let priceNumber = 0;\n    if (variantSku) {\n      const variantCalculatePrice = variants.find(\n        (variant) => variant.sku === variantSku,\n      )?.bc_calculated_price;\n      priceNumber =\n        (showInclusiveTaxPrice\n          ? variantCalculatePrice?.tax_inclusive\n          : variantCalculatePrice?.tax_exclusive) || 0;\n    } else {\n      const variantCalculatePrice = variants[0]?.bc_calculated_price;\n      priceNumber =\n        parseFloat(\n          (showInclusiveTaxPrice\n            ? variantCalculatePrice?.tax_inclusive\n            : variantCalculatePrice?.tax_exclusive\n          )?.toString(),\n        ) || 0;\n    }\n\n    return priceNumber;\n  };\n\n  const handleProductQuantityChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.value || parseInt(e.target.value, 10) > 0) {\n      setQuantity(e.target.value);\n    }\n  };\n\n  const handleNumberInputKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (['KeyE', 'Equal', 'Minus'].indexOf(event.code) > -1) {\n      event.preventDefault();\n    }\n  };\n\n  const handleNumberInputBlur = () => {\n    if (!quantity) {\n      setQuantity(1);\n    }\n\n    if (Number(quantity) > 1000000) {\n      setQuantity(1000000);\n    }\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    watch,\n    setValue,\n    reset,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const formValues = watch();\n  const cache = useRef(formValues);\n\n  const getProductVariantId = useCallback(\n    async (value: CustomFieldItems, changeName = '') => {\n      const isVariantOptionChange =\n        formFields.find((item: CustomFieldItems) => item.name === changeName)?.isVariantOption ||\n        false;\n\n      if (!isVariantOptionChange || !product || !changeName) {\n        return;\n      }\n\n      const { variants = [] } = product || {};\n\n      const variantInfo =\n        variants.find((variant) => {\n          const { option_values: optionValues = [] } = variant;\n\n          const isSelectVariant = optionValues.reduce((isSelect, option) => {\n            if (\n              value[Base64.encode(`attribute[${option.option_id}]`)].toString() !==\n              (option.id || '').toString()\n            ) {\n              return false;\n            }\n            return isSelect;\n          }, true);\n\n          return isSelectVariant;\n        }) || null;\n\n      setVariantSku(variantInfo ? variantInfo.sku : '');\n      setVariantInfo(variantInfo);\n\n      if (variantInfo && (variantInfo.sku || variantInfo.variant_id)) {\n        const currentVariant = variants.find(\n          (variant) =>\n            variant.sku === variantInfo.sku || variant.variant_id === variantInfo.variant_id,\n        );\n\n        setCurrentImage(currentVariant?.image_url || product.imageUrl || '');\n      }\n    },\n    [formFields, product],\n  );\n\n  useEffect(() => {\n    const subscription = watch((value, { name }) => {\n      getProductVariantId(value, name);\n    });\n\n    if (formFields[0]) {\n      const defaultValues: SimpleObject = formFields.reduce((value: SimpleObject, fields) => {\n        const formFieldValue = value;\n        formFieldValue[fields.name] = fields.default;\n        setValue(fields.name, fields.default);\n        return value;\n      }, {});\n      getProductVariantId(defaultValues, formFields[0].name);\n    }\n\n    return () => subscription.unsubscribe();\n    // disabling as we don't need dispatchers or subscribers in the dep array\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formFields, getProductVariantId]);\n\n  const validateQuantityNumber = useCallback(() => {\n    const { purchasing_disabled: purchasingDisabled = true } = variantInfo || {};\n\n    if (type !== 'shoppingList' && purchasingDisabled === true && !isEnableProduct) {\n      snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n      return false;\n    }\n\n    return true;\n    // disabling as b3Lang will render errors\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEnableProduct, type, variantInfo]);\n\n  const getOptionList = useCallback(\n    (value: FieldValues) => {\n      const optionsData = getOptionRequestData(formFields, {}, value);\n      return Object.keys(optionsData).map((optionId) => ({\n        optionId,\n        optionValue: optionsData[optionId]?.toString(),\n      }));\n    },\n    [formFields],\n  );\n\n  useEffect(() => {\n    if (cache?.current && isEqual(cache?.current, formValues)) {\n      return;\n    }\n\n    cache.current = formValues;\n    if (Object.keys(formValues).length && formFields.length && productPriceChangeOptions.length) {\n      const optionList = getOptionList(formValues);\n      const { variant_id: variantId = '' } = variantInfo || {};\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      const newChooseOptionsProduct = [\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ];\n\n      if (chooseOptionsProduct[0]) {\n        let optionChangeFlag = false;\n        const { newSelectOptionList } = chooseOptionsProduct[0];\n        newSelectOptionList.forEach((option) => {\n          const findAttributeId = productPriceChangeOptions.findIndex((item) =>\n            option.optionId.includes(String(item.id)),\n          );\n          optionList.forEach((newOption) => {\n            if (\n              option.optionId === newOption.optionId &&\n              option.optionValue !== newOption.optionValue &&\n              findAttributeId !== -1\n            ) {\n              optionChangeFlag = true;\n            }\n          });\n        });\n        if (optionChangeFlag) {\n          setChooseOptionsProduct(newChooseOptionsProduct);\n        }\n      } else {\n        setChooseOptionsProduct(newChooseOptionsProduct);\n      }\n    }\n  }, [\n    additionalProducts,\n    chooseOptionsProduct,\n    formFields.length,\n    formValues,\n    getOptionList,\n    product,\n    productPriceChangeOptions,\n    quantity,\n    validateQuantityNumber,\n    variantInfo,\n  ]);\n\n  useEffect(() => {\n    const getNewProductPrice = async () => {\n      try {\n        if (chooseOptionsProduct.length) {\n          setIsRequestLoading(true);\n          const products = await calculateProductListPrice(chooseOptionsProduct);\n\n          if (products[0]) {\n            const { basePrice, taxPrice } = products[0];\n            const price = getBCPrice(Number(basePrice), Number(taxPrice));\n            setNewPrice(price);\n          }\n        }\n      } catch (err) {\n        b2bLogger.error(err);\n      } finally {\n        setIsRequestLoading(false);\n      }\n    };\n\n    getNewProductPrice();\n  }, [chooseOptionsProduct]);\n\n  const handleConfirmClicked = () => {\n    handleSubmit((value) => {\n      const optionList = getOptionList(value);\n\n      const { variant_id: variantId = '' } = variantInfo || {};\n\n      if (!product || !product.id || !variantId || !validateQuantityNumber()) {\n        return;\n      }\n\n      onConfirm([\n        {\n          ...product,\n          newSelectOptionList: optionList,\n          productId: product?.id,\n          quantity: parseInt(quantity.toString(), 10) || 1,\n          variantId: parseInt(variantId.toString(), 10) || 1,\n          additionalProducts,\n        },\n      ]);\n    })();\n  };\n\n  const handleCancelClicked = () => {\n    setQuantity(1);\n    onCancel();\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      reset();\n    }\n    // disabling as reset does not change between renders\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n\n  return (\n    <B3Dialog\n      isOpen={isOpen}\n      rightSizeBtn={isEdit ? b3Lang('shoppingList.chooseOptionsDialog.saveOption') : addButtonText}\n      handleLeftClick={handleCancelClicked}\n      handRightClick={handleConfirmClicked}\n      title={b3Lang('shoppingList.chooseOptionsDialog.chooseOptions')}\n      loading={isLoading || isRequestLoading}\n    >\n      <B3Spin isSpinning={isLoading}>\n        {product && (\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                }}\n              >\n                <ProductImage src={currentImage || product.imageUrl || PRODUCT_DEFAULT_IMAGE} />\n                <Flex>\n                  <FlexItem padding=\"0\">\n                    <Box\n                      sx={{\n                        marginLeft: '16px',\n                      }}\n                    >\n                      <Typography variant=\"body1\" color=\"#212121\">\n                        {product.name}\n                      </Typography>\n                      <Typography variant=\"body1\" color=\"#616161\">\n                        {variantSku || product.sku}\n                      </Typography>\n                      {(product.product_options || []).map((option) => (\n                        <ProductOptionText\n                          key={`${option.option_id}`}\n                        >{`${option.display_name}: ${option.display_value}`}</ProductOptionText>\n                      ))}\n                    </Box>\n                  </FlexItem>\n\n                  <FlexItem>\n                    <span>{b3Lang('shoppingList.chooseOptionsDialog.price')}</span>\n                    {!isShowPrice\n                      ? ''\n                      : currencyFormat(newPrice * Number(quantity) || getProductPrice(product))}\n                  </FlexItem>\n\n                  <FlexItem>\n                    <StyleTextField\n                      type=\"number\"\n                      variant=\"filled\"\n                      label={b3Lang('shoppingList.chooseOptionsDialog.quantity')}\n                      value={quantity}\n                      onChange={handleProductQuantityChange}\n                      onKeyDown={handleNumberInputKeyDown}\n                      onBlur={handleNumberInputBlur}\n                      size=\"small\"\n                      sx={{\n                        width: '60%',\n                        maxWidth: '100px',\n                      }}\n                    />\n                  </FlexItem>\n                </Flex>\n              </Box>\n\n              <Divider\n                sx={{\n                  margin: '16px 0 24px',\n                }}\n              />\n\n              <B3CustomForm\n                formFields={formFields}\n                errors={errors}\n                control={control}\n                getValues={getValues}\n                setValue={setValue}\n              />\n            </Box>\n          </Box>\n        )}\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { createContext, Dispatch, ReactNode, useMemo, useReducer } from 'react';\n\nexport interface ShoppingListDetailsState {\n  id?: number;\n  isLoading?: boolean;\n}\ninterface ShoppingListDetailsAction {\n  type: string;\n  payload: ShoppingListDetailsState;\n}\nexport interface ShoppingListDetailsContextType {\n  state: ShoppingListDetailsState;\n  dispatch: Dispatch<ShoppingListDetailsAction>;\n}\n\ninterface ShoppingListDetailsProviderProps {\n  children: ReactNode;\n}\n\nconst initState = {\n  id: 0,\n  isLoading: false,\n};\n\nexport const ShoppingListDetailsContext = createContext<ShoppingListDetailsContextType>({\n  state: initState,\n  dispatch: () => {},\n});\n\nconst reducer = (state: ShoppingListDetailsState, action: ShoppingListDetailsAction) => {\n  switch (action.type) {\n    case 'all':\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case 'init':\n      return {\n        ...state,\n        id: action.payload.id,\n      };\n    case 'loading':\n      return {\n        ...state,\n        isLoading: action.payload.isLoading,\n      };\n    default:\n      return state;\n  }\n};\n\nexport function ShoppingListDetailsProvider(props: ShoppingListDetailsProviderProps) {\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const { children } = props;\n\n  const ShoppingListDetailsValue = useMemo(\n    () => ({\n      state,\n      dispatch,\n    }),\n    [state],\n  );\n\n  return (\n    <ShoppingListDetailsContext.Provider value={ShoppingListDetailsValue}>\n      {children}\n    </ShoppingListDetailsContext.Provider>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useCallback, useContext } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport { B3ProductList } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\n\nimport { ShoppingListProductItem } from '../../../types';\nimport { ShoppingListDetailsContext } from '../context/ShoppingListDetailsContext';\n\ninterface ProductTableActionProps {\n  product: ShoppingListProductItem;\n  onAddToListClick: (id: number) => void;\n  onChooseOptionsClick: (id: number) => void;\n  addButtonText: string;\n}\n\nfunction ProductTableAction(props: ProductTableActionProps) {\n  const {\n    product: { id, allOptions: productOptions },\n    onAddToListClick,\n    onChooseOptionsClick,\n    addButtonText,\n  } = props;\n\n  const {\n    state: { isLoading = false },\n  } = useContext(ShoppingListDetailsContext);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  return productOptions && productOptions.length > 0 ? (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onChooseOptionsClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {b3Lang('global.searchProduct.chooseOptionsButton')}\n    </CustomButton>\n  ) : (\n    <CustomButton\n      variant=\"outlined\"\n      onClick={() => {\n        onAddToListClick(id);\n      }}\n      disabled={isLoading}\n      fullWidth={isMobile}\n    >\n      {addButtonText}\n    </CustomButton>\n  );\n}\n\ninterface ProductListDialogProps {\n  isOpen: boolean;\n  searchText: string;\n  productList: ShoppingListProductItem[];\n  onCancel: () => void;\n  onSearchTextChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSearch: () => void;\n  onProductQuantityChange: (id: number, newQuantity: number) => void;\n  onAddToListClick: (products: CustomFieldItems[]) => void;\n  onChooseOptionsClick: (id: number) => void;\n  isLoading: boolean;\n  searchDialogTitle?: string;\n  addButtonText?: string;\n  type?: string;\n}\n\nconst ProductTable = B3ProductList<ShoppingListProductItem>;\n\nexport default function ProductListDialog(props: ProductListDialogProps) {\n  const b3Lang = useB3Lang();\n  const {\n    isOpen,\n    onCancel,\n    searchText,\n    productList,\n    onSearchTextChange,\n    onSearch,\n    onProductQuantityChange,\n    onAddToListClick,\n    onChooseOptionsClick,\n    isLoading,\n    type,\n    searchDialogTitle = b3Lang('shoppingLists.title'),\n    addButtonText = b3Lang('shoppingLists.addButtonText'),\n  } = props;\n\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n\n  const [isMobile] = useMobile();\n\n  const handleCancelClicked = () => {\n    onCancel();\n  };\n\n  const handleSearchKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      onSearch();\n    }\n  };\n\n  const validateQuantityNumber = useCallback(\n    (product: ShoppingListProductItem) => {\n      const { variants = [] } = product || {};\n      const { purchasing_disabled: purchasingDisabled = true } = variants[0] || {};\n\n      if (type !== 'shoppingList' && purchasingDisabled === true && !isEnableProduct) {\n        snackbar.error(b3Lang('shoppingList.chooseOptionsDialog.productNoLongerForSale'));\n        return false;\n      }\n\n      return true;\n    },\n    // ignore b3Lang it's not reactive\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [isEnableProduct, type],\n  );\n\n  const handleAddToList = (id: number) => {\n    const product = productList.find((product) => product.id === id);\n\n    if (product && validateQuantityNumber(product || {})) {\n      let variantId: number | string = product.variantId || 0;\n\n      if (!product.variantId && product.variants?.[0]) {\n        variantId = product.variants[0].variant_id;\n      }\n\n      onAddToListClick([\n        {\n          ...product,\n          newSelectOptionList: [],\n          quantity: parseInt(product.quantity.toString(), 10) || 1,\n          variantId,\n        },\n      ]);\n    }\n  };\n\n  return (\n    <B3Dialog\n      fullWidth\n      isOpen={isOpen}\n      handleLeftClick={handleCancelClicked}\n      title={searchDialogTitle}\n      showRightBtn={false}\n      loading={isLoading}\n      maxWidth=\"md\"\n      leftSizeBtn={b3Lang('shoppingLists.close')}\n    >\n      <B3Spin isSpinning={isLoading}>\n        <Box\n          sx={{\n            minWidth: isMobile ? 'initial' : '100%',\n            flex: 1,\n          }}\n        >\n          <TextField\n            hiddenLabel\n            variant=\"filled\"\n            fullWidth\n            size=\"small\"\n            value={searchText}\n            onChange={onSearchTextChange}\n            onKeyDown={handleSearchKeyDown}\n            error={!productList || productList.length <= 0}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            sx={{\n              margin: '12px 0',\n              '& input': {\n                padding: '12px 12px 12px 0',\n              },\n            }}\n          />\n\n          {productList && productList.length > 0 ? (\n            <ProductTable\n              products={productList}\n              quantityEditable\n              type={type}\n              textAlign={isMobile ? 'left' : 'right'}\n              canToProduct\n              onProductQuantityChange={onProductQuantityChange}\n              renderAction={(product) => (\n                <ProductTableAction\n                  product={product}\n                  onAddToListClick={handleAddToList}\n                  onChooseOptionsClick={onChooseOptionsClick}\n                  addButtonText={addButtonText}\n                />\n              )}\n              actionWidth=\"180px\"\n            />\n          ) : (\n            <Typography>No products found</Typography>\n          )}\n        </Box>\n      </B3Spin>\n    </B3Dialog>\n  );\n}\n","import { ChangeEvent, KeyboardEvent, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box, InputAdornment, TextField, Typography } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { searchB2BProducts, searchBcProducts } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { calculateProductListPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport { ShoppingListProductItem } from '../../../types';\n\nimport ChooseOptionsDialog from './ChooseOptionsDialog';\nimport ProductListDialog from './ProductListDialog';\n\ninterface SearchProductProps {\n  updateList?: () => void;\n  addToList: (products: CustomFieldItems[]) => void;\n  searchDialogTitle?: string;\n  addButtonText?: string;\n  isB2BUser: boolean;\n  type?: string;\n}\n\nexport default function SearchProduct({\n  updateList = () => {},\n  addToList,\n  searchDialogTitle,\n  addButtonText,\n  isB2BUser,\n  type,\n}: SearchProductProps) {\n  const b3Lang = useB3Lang();\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const companyId = companyInfoId || salesRepCompanyId;\n  const [isLoading, setIsLoading] = useState(false);\n  const [productListOpen, setProductListOpen] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const [productList, setProductList] = useState<ShoppingListProductItem[]>([]);\n  const [chooseOptionsOpen, setChooseOptionsOpen] = useState(false);\n  const [optionsProduct, setOptionsProduct] = useState<ShoppingListProductItem>();\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleSearchTextChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  const searchProduct = async () => {\n    if (!searchText || isLoading) {\n      return;\n    }\n\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('global.searchProductAddProduct.businessAccountPendingApproval'));\n      return;\n    }\n    const getProducts = isB2BUser ? searchB2BProducts : searchBcProducts;\n\n    setIsLoading(true);\n    try {\n      const { productsSearch } = await getProducts({\n        search: searchText,\n        companyId,\n        customerGroupId,\n        categoryFilter: true,\n      });\n\n      const product = conversionProductsList(productsSearch);\n\n      setProductList(product);\n      setProductListOpen(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearchTextKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      searchProduct();\n    }\n  };\n\n  const handleSearchButtonClicked = () => {\n    searchProduct();\n  };\n\n  const clearProductInfo = () => {\n    setProductList([]);\n  };\n\n  const handleProductListDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(false);\n\n    if (isAdded) {\n      setIsAdded(false);\n      updateList();\n    }\n\n    clearProductInfo();\n  };\n\n  const handleProductQuantityChange = (id: number, newQuantity: number) => {\n    const product = productList.find((product) => product.id === id);\n    if (product) {\n      product.quantity = newQuantity;\n    }\n\n    setProductList([...productList]);\n  };\n\n  const handleAddToListClick = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await addToList(products);\n\n      updateList();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleProductListAddToList = async (products: CustomFieldItems[]) => {\n    await handleAddToListClick(products);\n  };\n\n  const handleChangeOptionsClick = (productId: number) => {\n    const product = productList.find((product) => product.id === productId);\n    if (product) {\n      setOptionsProduct({\n        ...product,\n      });\n    }\n    setProductListOpen(false);\n    setChooseOptionsOpen(true);\n  };\n\n  const handleChooseOptionsDialogCancel = () => {\n    setChooseOptionsOpen(false);\n    setProductListOpen(true);\n  };\n\n  const handleChooseOptionsDialogConfirm = async (products: CustomFieldItems[]) => {\n    try {\n      setIsLoading(true);\n      await calculateProductListPrice(products);\n      await handleAddToListClick(products);\n      setChooseOptionsOpen(false);\n      setProductListOpen(true);\n    } catch (error) {\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        margin: '24px 0',\n      }}\n    >\n      <Typography>{b3Lang('global.searchProductAddProduct.searchBySkuOrName')}</Typography>\n      <TextField\n        hiddenLabel\n        placeholder={b3Lang(`global.searchProduct.placeholder.${type}`)}\n        variant=\"filled\"\n        fullWidth\n        size=\"small\"\n        value={searchText}\n        onChange={handleSearchTextChange}\n        onKeyDown={handleSearchTextKeyDown}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon sx={{w: '32px'}}/>\n            </InputAdornment>\n          ),\n        }}\n        sx={{\n          margin: '12px 0',\n          '& input': {\n            padding: '12px 12px 12px 0',\n          },\n        }}\n      />\n      <CustomButton\n        variant=\"outlined\"\n        fullWidth\n        disabled={isLoading}\n        onClick={handleSearchButtonClicked}\n      >\n        <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n          <Box\n            sx={{\n              flex: 1,\n              textAlign: 'center',\n            }}\n          >\n            {b3Lang('global.searchProductAddProduct.searchProduct')}\n          </Box>\n        </B3Spin>\n      </CustomButton>\n\n      <ProductListDialog\n        isOpen={productListOpen}\n        isLoading={isLoading}\n        productList={productList}\n        searchText={searchText}\n        type={type}\n        onSearchTextChange={handleSearchTextChange}\n        onSearch={handleSearchButtonClicked}\n        onCancel={handleProductListDialogCancel}\n        onProductQuantityChange={handleProductQuantityChange}\n        onChooseOptionsClick={handleChangeOptionsClick}\n        onAddToListClick={handleProductListAddToList}\n        searchDialogTitle={searchDialogTitle}\n        addButtonText={addButtonText}\n      />\n\n      <ChooseOptionsDialog\n        isOpen={chooseOptionsOpen}\n        isLoading={isLoading}\n        type={type}\n        setIsLoading={setIsLoading}\n        product={optionsProduct}\n        onCancel={handleChooseOptionsDialogCancel}\n        onConfirm={handleChooseOptionsDialogConfirm}\n        addButtonText={addButtonText}\n        isB2BUser={isB2BUser}\n      />\n    </Box>\n  );\n}\n"],"names":["_interopRequireDefault","require$$0","UploadFile","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","Flex","styled","FlexItem","padding","ProductImage","ProductOptionText","StyleTextField","TextField","ChooseOptionsDialog","props","isOpen","onCancel","onConfirm","product","isEdit","isLoading","setIsLoading","isB2BUser","type","restProps","b3Lang","useB3Lang","addButtonText","showInclusiveTaxPrice","useAppSelector","global","isEnableProduct","salesRepCompanyId","b2bFeatures","customerGroupId","state","companyInfoId","quantity","setQuantity","useState","formFields","setFormFields","variantInfo","setVariantInfo","variantSku","setVariantSku","currentImage","setCurrentImage","isShowPrice","setShowPrice","additionalProducts","setAdditionalProducts","productPriceChangeOptions","setProductPriceChangeOptions","newPrice","setNewPrice","chooseOptionsProduct","setChooseOptionsProduct","isRequestLoading","setIsRequestLoading","useEffect","newProduct","isPrice","getVariantInfoDisplayPrice","getProductInfoDisplayPrice","setChooseOptionsForm","modifiers","modifier","productImages","additionalProductsParams","productIds","arr","optionValues","option","_a","getProducts","searchB2BProducts","searchBcProducts","companyId","productsSearch","productOptionsFields","getProductOptionsFields","getProductPriceOptions","newProductPriceChangeOptionLists","item","getProductPrice","variants","priceNumber","variantCalculatePrice","variant","_b","_c","handleProductQuantityChange","e","handleNumberInputKeyDown","event","handleNumberInputBlur","control","handleSubmit","getValues","errors","watch","setValue","reset","useForm","formValues","cache","useRef","getProductVariantId","useCallback","value","changeName","isSelect","Base64","currentVariant","subscription","name","defaultValues","fields","formFieldValue","validateQuantityNumber","purchasingDisabled","snackbar","getOptionList","optionsData","getOptionRequestData","optionId","isEqual","optionList","variantId","newChooseOptionsProduct","optionChangeFlag","newSelectOptionList","findAttributeId","newOption","products","calculateProductListPrice","basePrice","taxPrice","price","getBCPrice","err","b2bLogger","handleConfirmClicked","handleCancelClicked","jsx","B3Dialog","B3Spin","Box","jsxs","PRODUCT_DEFAULT_IMAGE","Typography","currencyFormat","Divider","B3CustomForm","initState","ShoppingListDetailsContext","createContext","reducer","action","ShoppingListDetailsProvider","dispatch","useReducer","children","ShoppingListDetailsValue","useMemo","ProductTableAction","id","productOptions","onAddToListClick","onChooseOptionsClick","useContext","isMobile","useMobile","CustomButton","ProductTable","B3ProductList","ProductListDialog","searchText","productList","onSearchTextChange","onSearch","onProductQuantityChange","searchDialogTitle","handleSearchKeyDown","handleAddToList","InputAdornment","SearchIcon","SearchProduct","updateList","addToList","company","companyStatus","productListOpen","setProductListOpen","isAdded","setIsAdded","setSearchText","setProductList","chooseOptionsOpen","setChooseOptionsOpen","optionsProduct","setOptionsProduct","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","handleSearchTextChange","searchProduct","conversionProductsList","handleSearchTextKeyDown","handleSearchButtonClicked","clearProductInfo","handleProductListDialogCancel","newQuantity","handleAddToListClick","handleProductListAddToList","handleChangeOptionsClick","productId","handleChooseOptionsDialogCancel","handleChooseOptionsDialogConfirm","error"],"mappings":"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","x_google_ignoreList":[0]}