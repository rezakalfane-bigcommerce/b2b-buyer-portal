{"version":3,"file":"ShoppingStatus-legacy-BDg7ioto.js","sources":["../../src/pages/ShoppingLists/ShoppingStatus.tsx","../../src/pages/ShoppingLists/config.ts"],"sourcesContent":["import { B3Tag } from '@/components';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\n\nimport { useGetFilterShoppingListStatus } from './config';\n\nexport const useGetStatus = () => {\n  const getFilterShoppingListStatus = useGetFilterShoppingListStatus();\n\n  return (submitShoppingListPermission: boolean) => {\n    const statusArr = getFilterShoppingListStatus(submitShoppingListPermission);\n\n    const newStatus = statusArr.map((item) => {\n      if (Number(item.value) === 0) {\n        return {\n          color: '#C4DD6C',\n          textColor: 'black',\n          ...item,\n        };\n      }\n\n      if (Number(item.value) === 40) {\n        return {\n          color: '#F4CC46',\n          textColor: 'black',\n          ...item,\n        };\n      }\n\n      if (Number(item.value) === 30) {\n        return {\n          color: '#899193',\n          textColor: '#FFFFFF',\n          ...item,\n        };\n      }\n      return {\n        color: '#7A6041',\n        textColor: '#FFFFFF',\n        ...item,\n      };\n    });\n\n    return newStatus;\n  };\n};\n\ninterface ShoppingStatusProps {\n  status: number | string;\n}\n\nexport function ShoppingStatus({ status }: ShoppingStatusProps) {\n  const { submitShoppingListPermission } = useAppSelector(rolePermissionSelector);\n  const getStatus = useGetStatus();\n\n  const statusList = getStatus(submitShoppingListPermission);\n  const statusItem = statusList.find((item) => Number(item.value) === Number(status));\n\n  if (statusItem) {\n    return (\n      <B3Tag color={statusItem.color} textColor={statusItem.textColor}>\n        {statusItem.label}\n      </B3Tag>\n    );\n  }\n\n  return null;\n}\n","import { LangFormatFunction, useB3Lang } from '@b3/lang';\n\nimport { CompanyInfoTypes } from '@/types';\n\nexport interface ShoppingListSearch {\n  search?: string;\n  createdBy?: string;\n  status?: string | number | number[];\n  offset?: number;\n  first?: number;\n}\n\ninterface ShoppingListStatusProps {\n  label: string;\n  value: number | string;\n  idLang: string;\n}\n\ninterface ShoppingListsItemsCustomerInfoProps {\n  firstName: string;\n  lastName: string;\n  userId: number;\n  email: string;\n  role: string;\n}\n\nexport interface ShoppingListsItemsProps {\n  id?: number;\n  name: string;\n  description: string;\n  status: number;\n  customerInfo: ShoppingListsItemsCustomerInfoProps;\n  products: {\n    totalCount: number;\n  };\n  updatedAt: string | number;\n  sampleShoppingListId?: number | string;\n  channelId: number;\n  approvedFlag: boolean;\n  isOwner: boolean;\n  companyInfo: CompanyInfoTypes | null;\n  companyId?: number;\n}\n\nexport interface GetFilterMoreListProps {\n  options?: Array<ShoppingListStatusProps>;\n  rows?: string | number;\n  name: string;\n  label: string;\n  required: boolean;\n  default: string;\n  fieldType: string;\n  xs: number;\n  variant: string;\n  size: string;\n  maxLength?: number;\n  idLang?: string;\n}\n\nexport const useGetFilterShoppingListStatus = () => {\n  const b3Lang = useB3Lang();\n\n  return (submitShoppingListPermission: boolean) => {\n    const draftStatus = { value: 30, label: b3Lang('global.shoppingLists.status.draft') };\n    const rejectedStatus = { value: 20, label: b3Lang('global.shoppingLists.status.rejected') };\n\n    return [\n      { value: 99, label: b3Lang('global.shoppingLists.status.all') },\n      { value: 0, label: b3Lang('global.shoppingLists.status.approved') },\n      ...(submitShoppingListPermission ? [draftStatus] : []),\n      { value: 40, label: b3Lang('global.shoppingLists.status.readyForApproval') },\n      ...(submitShoppingListPermission ? [rejectedStatus] : []),\n    ];\n  };\n};\n\ninterface CreatedByUsers {\n  createdByUser?: {\n    results: Array<{ firstName: string; lastName: string; email: string }>;\n  };\n}\n\nexport const useGetFilterMoreList = () => {\n  const b3Lang = useB3Lang();\n  const getFilterShoppingListStatus = useGetFilterShoppingListStatus();\n\n  return (submitShoppingListPermission: boolean, createdByUsers: CreatedByUsers) => {\n    const newCreatedByUsers =\n      createdByUsers?.createdByUser?.results.map((item) => ({\n        createdBy: `${item.firstName} ${item.lastName} (${item.email})`,\n      })) || [];\n\n    return [\n      {\n        name: 'createdBy',\n        required: false,\n        default: '',\n        fieldType: 'dropdown',\n        options: newCreatedByUsers,\n        replaceOptions: {\n          label: 'createdBy',\n          value: 'createdBy',\n        },\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n        label: b3Lang('global.shoppingLists.filter.createdBy'),\n      },\n      {\n        name: 'status',\n        required: false,\n        default: '',\n        fieldType: 'dropdown',\n        options: getFilterShoppingListStatus(submitShoppingListPermission),\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n        label: b3Lang('global.shoppingLists.filter.status'),\n      },\n    ];\n  };\n};\n\nexport const getCreatedShoppingListFiles = (\n  b3Lang: LangFormatFunction,\n): GetFilterMoreListProps[] => [\n  {\n    name: 'name',\n    label: b3Lang('shoppingLists.name'),\n    required: true,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    maxLength: 200,\n  },\n  {\n    name: 'description',\n    label: b3Lang('shoppingLists.description'),\n    required: false,\n    default: '',\n    fieldType: 'multiline',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    rows: 4,\n    maxLength: 200,\n  },\n];\n"],"names":["status","submitShoppingListPermission","useAppSelector","rolePermissionSelector","getStatus","useGetStatus","statusItem","find","item","Number","value","jsx","B3Tag","color","textColor","children","label","useGetFilterShoppingListStatus","b3Lang","useB3Lang","draftStatus","rejectedStatus","getFilterShoppingListStatus","createdByUsers","name","required","default","fieldType","options","createdByUser","results","map","createdBy","firstName","lastName","email","replaceOptions","xs","variant","size","exports","maxLength","rows"],"mappings":"oWAkDgB,UAAeA,OAAEA,IAC/B,MAAMC,6BAAEA,GAAiCC,EAAeC,GAClDC,EAAYC,IAGZC,EADaF,EAAUH,GACCM,MAAMC,GAASC,OAAOD,EAAKE,SAAWD,OAAOT,KAE3E,OAAIM,EAEAK,EAAAA,IAACC,GAAMC,MAAOP,EAAWO,MAAOC,UAAWR,EAAWQ,UACnDC,SAAAT,EAAWU,QAKX,IACT,ICPO,MAAMC,EAAiCA,KAC5C,MAAMC,EAASC,IAEf,OAAQlB,IACN,MAAMmB,EAAc,CAAEV,MAAO,GAAIM,MAAOE,EAAO,sCACzCG,EAAiB,CAAEX,MAAO,GAAIM,MAAOE,EAAO,yCAE3C,MAAA,CACL,CAAER,MAAO,GAAIM,MAAOE,EAAO,oCAC3B,CAAER,MAAO,EAAGM,MAAOE,EAAO,4CACtBjB,EAA+B,CAACmB,GAAe,GACnD,CAAEV,MAAO,GAAIM,MAAOE,EAAO,oDACvBjB,EAA+B,CAACoB,GAAkB,GACxD,CACF,EDpEWhB,UC6EuB,KAClC,MAAMa,EAASC,IACTG,EAA8BL,IAE7B,MAAA,CAAChB,EAAuCsB,IAMtC,CACL,CACEC,KAAM,YACNC,UAAU,EACVC,QAAS,GACTC,UAAW,WACXC,QAVFL,GAAgBM,eAAeC,QAAQC,KAAKvB,KAC1CwB,UAAW,GAAGxB,EAAKyB,aAAazB,EAAK0B,aAAa1B,EAAK2B,cAClD,GASLC,eAAgB,CACdpB,MAAO,YACPN,MAAO,aAET2B,GAAI,GACJC,QAAS,SACTC,KAAM,QACNvB,MAAOE,EAAO,0CAEhB,CACEM,KAAM,SACNC,UAAU,EACVC,QAAS,GACTC,UAAW,WACXC,QAASN,EAA4BrB,GACrCoC,GAAI,GACJC,QAAS,SACTC,KAAM,QACNvB,MAAOE,EAAO,uCAGpB,IAGWsB,EAAA,KACXtB,GAC6B,CAC7B,CACEM,KAAM,OACNR,MAAOE,EAAO,sBACdO,UAAU,EACVC,QAAS,GACTC,UAAW,OACXU,GAAI,GACJC,QAAS,SACTC,KAAM,QACNE,UAAW,KAEb,CACEjB,KAAM,cACNR,MAAOE,EAAO,6BACdO,UAAU,EACVC,QAAS,GACTC,UAAW,YACXU,GAAI,GACJC,QAAS,SACTC,KAAM,QACNG,KAAM,EACND,UAAW,QD9IapC,KAC1B,MAAMiB,EAA8BL,IAEpC,OAAQhB,GACYqB,EAA4BrB,GAElB8B,KAAKvB,GACJ,IAAvBC,OAAOD,EAAKE,OACP,CACLG,MAAO,UACPC,UAAW,WACRN,GAIoB,KAAvBC,OAAOD,EAAKE,OACP,CACLG,MAAO,UACPC,UAAW,WACRN,GAIoB,KAAvBC,OAAOD,EAAKE,OACP,CACLG,MAAO,UACPC,UAAW,aACRN,GAGA,CACLK,MAAO,UACPC,UAAW,aACRN,IAKT"}