{"version":3,"file":"b3TriggerCartNumber-6ZWpUTGT.js","sources":["../../src/utils/b3TriggerCartNumber.ts"],"sourcesContent":["import { getCart } from '@/shared/service/bc/graphql/cart';\nimport { setCartNumber, store } from '@/store';\n\nimport b2bLogger from './b3Logger';\n\nconst productTypeKey = ['customItems', 'digitalItems', 'giftCertificates', 'physicalItems'];\n\nconst b3TriggerCartNumber = async () => {\n  let number = 0;\n\n  try {\n    const cartInfo = await getCart();\n\n    if (cartInfo.data.site.cart) {\n      const items = cartInfo.data.site.cart.lineItems;\n      productTypeKey.forEach((key: string) => {\n        const productItem = items[key];\n        if (productItem && productItem.length > 0) {\n          if (key === 'giftCertificates') {\n            number += productItem.length;\n          } else {\n            productItem.forEach((item: CustomFieldItems) => {\n              number += Number(item.quantity);\n            });\n          }\n        }\n      });\n    }\n  } catch (err) {\n    b2bLogger.error(err);\n  }\n\n  store.dispatch(setCartNumber(number));\n};\n\nexport default b3TriggerCartNumber;\n"],"names":["productTypeKey","b3TriggerCartNumber","number","cartInfo","getCart","items","key","productItem","item","err","b2bLogger","store","setCartNumber"],"mappings":"sGAKA,MAAMA,EAAiB,CAAC,cAAe,eAAgB,mBAAoB,eAAe,EAEpFC,EAAsB,SAAY,CACtC,IAAIC,EAAS,EAET,GAAA,CACI,MAAAC,EAAW,MAAMC,EAAQ,EAE3B,GAAAD,EAAS,KAAK,KAAK,KAAM,CAC3B,MAAME,EAAQF,EAAS,KAAK,KAAK,KAAK,UACvBH,EAAA,QAASM,GAAgB,CAChC,MAAAC,EAAcF,EAAMC,CAAG,EACzBC,GAAeA,EAAY,OAAS,IAClCD,IAAQ,mBACVJ,GAAUK,EAAY,OAEVA,EAAA,QAASC,GAA2B,CACpCN,GAAA,OAAOM,EAAK,QAAQ,CAAA,CAC/B,EAEL,CACD,CAAA,QAEIC,EAAK,CACZC,EAAU,MAAMD,CAAG,CAAA,CAGfE,EAAA,SAASC,EAAcV,CAAM,CAAC,CACtC"}