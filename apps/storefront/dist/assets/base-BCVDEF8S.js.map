{"version":3,"file":"base-BCVDEF8S.js","sources":["../../src/utils/b3Logger.ts","../../src/shared/service/request/base.ts"],"sourcesContent":["type B2BLoggerType = Pick<Console, 'error'>;\n\nconst b2bLogger: B2BLoggerType = {\n  error: console.error,\n};\n\nexport default b2bLogger;\n","import { Environment, EnvSpecificConfig } from '@/types';\n\nconst ENVIRONMENT_B2B_API_URL: EnvSpecificConfig<string> = {\n  local: import.meta.env.VITE_B2B_URL ?? 'http://localhost:9000',\n  integration: 'https://api-b2b.integration.zone',\n  staging: 'https://api-b2b.staging.zone',\n  production: 'https://api-b2b.bigcommerce.com',\n};\n\n// cspell:disable\nconst ENVIRONMENT_B2B_APP_CLIENT_ID: EnvSpecificConfig<string> = {\n  local: import.meta.env.VITE_LOCAL_APP_CLIENT_ID ?? 'dl7c39mdpul6hyc489yk0vzxl6jesyx',\n  integration: '28cflecujxmsbsuhn2ua0rhefvciowp',\n  staging: 'r2x8j3tn54wduq47b4efct5tqxio5z2',\n  production: 'dl7c39mdpul6hyc489yk0vzxl6jesyx',\n};\n// cspell:enable\n\nconst DEFAULT_ENVIRONMENT =\n  import.meta.env.VITE_IS_LOCAL_ENVIRONMENT === 'TRUE' ? Environment.Local : Environment.Production;\n\nexport function getAPIBaseURL(environment?: Environment) {\n  return ENVIRONMENT_B2B_API_URL[\n    environment ?? window.B3?.setting?.environment ?? DEFAULT_ENVIRONMENT\n  ];\n}\n\nexport function getAppClientId(environment?: Environment) {\n  return ENVIRONMENT_B2B_APP_CLIENT_ID[\n    environment ?? window.B3?.setting?.environment ?? DEFAULT_ENVIRONMENT\n  ];\n}\n\nenum RequestType {\n  B2BGraphql = 'B2BGraphql',\n  BCGraphql = 'BCGraphql',\n  BCProxyGraphql = 'BCProxyGraphql',\n  B2BRest = 'B2BRest',\n  B2BEditionRest = 'B2BEditionRest',\n  BCRest = 'BCRest',\n  TranslationService = 'TranslationService',\n}\n\nexport type RequestTypeKeys = keyof typeof RequestType;\n\nconst queryParse = <T>(query: T): string => {\n  let queryText = '';\n\n  Object.keys(query || {}).forEach((key: string) => {\n    queryText += `${key}=${(query as any)[key]}&`;\n  });\n  return queryText.slice(0, -1);\n};\n\nexport { queryParse, RequestType };\n"],"names":["b2bLogger","ENVIRONMENT_B2B_API_URL","ENVIRONMENT_B2B_APP_CLIENT_ID","DEFAULT_ENVIRONMENT","Environment","getAPIBaseURL","environment","_c","_b","_a","getAppClientId","RequestType","queryParse","query","queryText","key"],"mappings":"yCAEA,MAAMA,EAA2B,CAC/B,MAAO,QAAQ,KACjB,ECFMC,EAAqD,CACzD,MAAO,kCACP,YAAa,mCACb,QAAS,+BACT,WAAY,iCACd,EAGMC,EAA2D,CAC/D,MAAO,kCACP,YAAa,kCACb,QAAS,kCACT,WAAY,iCACd,EAGMC,EACmDC,EAAY,MAE9D,SAASC,EAAcC,EAA2B,WACvD,OAAOL,GACLM,EAAAD,GAAA,KAAAA,GAAeE,GAAAC,EAAA,OAAO,KAAP,YAAAA,EAAW,UAAX,YAAAD,EAAoB,cAAnC,KAAAD,EAAkDJ,CACpD,CACF,CAEO,SAASO,EAAeJ,EAA2B,WACxD,OAAOJ,GACLK,EAAAD,GAAA,KAAAA,GAAeE,GAAAC,EAAA,OAAO,KAAP,YAAAA,EAAW,UAAX,YAAAD,EAAoB,cAAnC,KAAAD,EAAkDJ,CACpD,CACF,CAEK,IAAAQ,GAAAA,IACHA,EAAA,WAAa,aACbA,EAAA,UAAY,YACZA,EAAA,eAAiB,iBACjBA,EAAA,QAAU,UACVA,EAAA,eAAiB,iBACjBA,EAAA,OAAS,SACTA,EAAA,mBAAqB,qBAPlBA,IAAAA,GAAA,CAAA,CAAA,EAYC,MAAAC,EAAiBC,GAAqB,CAC1C,IAAIC,EAAY,GAEhB,cAAO,KAAKD,GAAS,CAAE,CAAA,EAAE,QAASE,GAAgB,CAChDD,GAAa,GAAG,OAAAC,EAAG,KAAK,OAAAF,EAAcE,CAAG,EAAC,IAAA,CAC3C,EACMD,EAAU,MAAM,EAAG,EAAE,CAC9B"}