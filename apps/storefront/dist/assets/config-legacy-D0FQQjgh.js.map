{"version":3,"file":"config-legacy-D0FQQjgh.js","sources":["../../src/hooks/useVerifyPermission.ts","../../src/pages/Address/shared/config.ts"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\n\nimport { permissionLevels } from '@/constants';\nimport { useAppSelector } from '@/store';\nimport {\n  levelComparison,\n  validateBasePermissionWithComparisonType,\n  ValidatePermissionWithComparisonTypeProps,\n  VerifyLevelPermissionProps,\n} from '@/utils';\n\nexport const useVerifyLevelPermission = ({\n  code,\n  companyId = 0,\n  userEmail = '',\n  userId = 0,\n}: VerifyLevelPermissionProps) => {\n  const [isVerified, setIsVerified] = useState(false);\n\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n  const { companyInfo, customer, permissions } = useAppSelector(({ company }) => company);\n\n  useEffect(() => {\n    const info = permissions.find((permission) => permission.code.includes(code));\n\n    if (!info) return;\n\n    const { permissionLevel } = info;\n\n    if (!permissionLevel) return;\n\n    setIsVerified(\n      levelComparison({\n        permissionLevel: Number(permissionLevel),\n        customer,\n        companyInfo,\n        params: {\n          companyId,\n          userEmail,\n          userId,\n        },\n      }),\n    );\n  }, [\n    selectCompanyHierarchyId,\n    code,\n    companyId,\n    userEmail,\n    userId,\n    companyInfo,\n    customer,\n    permissions,\n  ]);\n\n  return [isVerified];\n};\n\nexport const useValidatePermissionWithComparisonType = ({\n  level = 0,\n  code = '',\n  containOrEqual = 'equal',\n}: ValidatePermissionWithComparisonTypeProps) => {\n  const { permissions } = useAppSelector(({ company }) => company);\n\n  const [isValidate, setIsValidate] = useState(false);\n\n  useEffect(() => {\n    if (!permissions?.length) return;\n\n    const isPermissions = validateBasePermissionWithComparisonType({\n      level,\n      code,\n      containOrEqual,\n      permissions,\n    });\n    setIsValidate(isPermissions);\n  }, [permissions, level, code, containOrEqual]);\n\n  return [isValidate];\n};\n\nexport const useVerifyCreatePermission = (codes: string[]) => {\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const { permissions } = useAppSelector(({ company }) => company);\n  const level = useMemo(() => {\n    return selectCompanyHierarchyId ? permissionLevels.COMPANY_SUBSIDIARIES : permissionLevels.USER;\n  }, [selectCompanyHierarchyId]);\n\n  const [permissionInfo, setPermissionsInfo] = useState<boolean[]>([]);\n\n  useEffect(() => {\n    if (!permissions?.length) return;\n\n    const info = codes.map((code) => {\n      const isPermissions = validateBasePermissionWithComparisonType({\n        level,\n        code,\n        containOrEqual: 'contain',\n        permissions,\n      });\n\n      return isPermissions;\n    });\n\n    setPermissionsInfo(info);\n  }, [permissions, level, codes]);\n\n  return permissionInfo;\n};\n","import { AddressItemType, BCAddressItemType } from '../../../types/address';\n\nexport interface B2bShippingBillingChildProps {\n  name: string;\n  label: string;\n  default: string;\n  parent: string;\n  idLang: string;\n}\nexport interface B2bShippingBillingProps {\n  name: string;\n  label: string;\n  default: string;\n  child: B2bShippingBillingChildProps;\n  idLang: string;\n}\n\nexport const filterFormConfig = [\n  {\n    name: 'city',\n    label: 'City',\n    required: false,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.filter.city',\n  },\n  {\n    name: 'state',\n    label: 'State',\n    required: false,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.filter.state',\n  },\n  {\n    name: 'country',\n    label: 'Country',\n    required: false,\n    default: '',\n    fieldType: 'text',\n    xs: 12,\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.filter.country',\n  },\n];\n\nexport const b2bShippingBilling = [\n  {\n    name: 'isShipping',\n    label: 'Shipping',\n    default: '',\n    idLang: 'addresses.editAddress.shipping',\n    child: {\n      name: 'isDefaultShipping',\n      label: 'Default Shipping Address',\n      default: '',\n      parent: 'isShipping',\n      idLang: 'addresses.editAddress.defaultShippingAddress',\n    },\n  },\n  {\n    name: 'isBilling',\n    label: 'Billing',\n    default: '',\n    idLang: 'addresses.editAddress.billing',\n    child: {\n      name: 'isDefaultBilling',\n      label: 'Default Billing Address',\n      default: '',\n      parent: 'isBilling',\n      idLang: 'addresses.editAddress.defaultBillingAddress',\n    },\n  },\n];\n\nexport const b2bAddressFields = [\n  {\n    name: 'label',\n    label: 'Address label',\n    required: false,\n    fieldType: 'text',\n    xs: 12,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.addressLabel',\n  },\n  {\n    name: 'firstName',\n    label: 'First name',\n    required: true,\n    default: '',\n    fieldType: 'text',\n    xs: 6,\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.firstName',\n  },\n  {\n    name: 'lastName',\n    label: 'Last name',\n    required: true,\n    fieldType: 'text',\n    xs: 6,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.lastName',\n  },\n  {\n    name: 'company',\n    label: 'Company',\n    required: false,\n    fieldType: 'text',\n    xs: 12,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.company',\n  },\n  {\n    name: 'country',\n    label: 'Country',\n    required: true,\n    fieldType: 'dropdown',\n    xs: 12,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    replaceOptions: {\n      label: 'countryName',\n      value: 'countryCode',\n    },\n    options: [],\n    idLang: 'addresses.editAddress.country',\n  },\n  {\n    name: 'addressLine1',\n    label: 'Address line 1',\n    required: true,\n    fieldType: 'text',\n    xs: 12,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.addressLine1',\n  },\n  {\n    name: 'addressLine2',\n    label: 'Address line 2',\n    required: false,\n    fieldType: 'text',\n    xs: 12,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.addressLine2',\n  },\n  {\n    name: 'city',\n    label: 'City',\n    required: true,\n    fieldType: 'text',\n    xs: 12,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.city',\n  },\n  {\n    name: 'state',\n    label: 'State',\n    required: true,\n    fieldType: 'text',\n    xs: 8,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    replaceOptions: {\n      label: 'stateName',\n      value: 'stateCode',\n    },\n    idLang: 'addresses.editAddress.state',\n  },\n  {\n    name: 'zipCode',\n    label: 'ZIP code',\n    required: true,\n    fieldType: 'text',\n    xs: 4,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.zipCode',\n  },\n  {\n    name: 'phoneNumber',\n    label: 'Phone number',\n    required: false,\n    fieldType: 'text',\n    xs: 12,\n    default: '',\n    variant: 'filled',\n    size: 'small',\n    idLang: 'addresses.editAddress.phoneNumber',\n  },\n];\n\nexport const convertBCToB2BAddress: (data: BCAddressItemType) => AddressItemType = (data) => {\n  const extraFields = (data.formFields || []).map((item) => ({\n    fieldName: item.name,\n    fieldValue: item.value,\n  }));\n\n  return {\n    id: data.id,\n    createdAt: data.createdAt,\n    updatedAt: data.updatedAt,\n    firstName: data.firstName,\n    lastName: data.lastName,\n    addressLine1: data.address1,\n    addressLine2: data.address2 || '',\n    address1: data.address1,\n    address2: data.address2 || '',\n    address: '',\n    city: data.city,\n    state: data.stateOrProvince,\n    stateCode: '',\n    country: data.country,\n    countryCode: data.countryCode,\n    zipCode: data.postalCode,\n    postalCode: data.postalCode,\n    phoneNumber: data.phone,\n    phone: data.phone,\n    isActive: 1,\n    label: '',\n    extraFields,\n    company: data.company,\n    bcAddressId: data.bcAddressId,\n  };\n};\n"],"names":["level","code","containOrEqual","permissions","useAppSelector","company","isValidate","setIsValidate","useState","useEffect","length","isPermissions","validateBasePermissionWithComparisonType","exports","codes","selectCompanyHierarchyId","companyHierarchyInfo","useMemo","permissionLevels","COMPANY_SUBSIDIARIES","USER","permissionInfo","setPermissionsInfo","info","map","name","label","required","default","fieldType","xs","variant","size","idLang","child","parent","replaceOptions","value","options","data","extraFields","formFields","item","fieldName","fieldValue","id","createdAt","updatedAt","firstName","lastName","addressLine1","address1","addressLine2","address2","address","city","state","stateOrProvince","stateCode","country","countryCode","zipCode","postalCode","phoneNumber","phone","isActive","bcAddressId"],"mappings":"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"}