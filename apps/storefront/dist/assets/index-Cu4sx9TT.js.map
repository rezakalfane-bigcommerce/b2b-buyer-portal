{"version":3,"file":"index-Cu4sx9TT.js","sources":["../../src/pages/Login/component/LoginWidget.tsx","../../src/pages/Login/CatalystLogin.tsx","../../src/pages/Login/LoginForm.tsx","../../src/pages/Login/LoginPanel.tsx","../../src/pages/Login/useLogout.tsx","../../src/pages/Login/index.tsx"],"sourcesContent":["import { Box, SxProps } from '@mui/material';\n\ninterface LoginWidgetProps {\n  sx: SxProps;\n  html: string;\n}\n\nfunction LoginWidget(props: LoginWidgetProps) {\n  const { html, sx } = props;\n\n  return (\n    <Box\n      sx={{\n        ...sx,\n      }}\n      dangerouslySetInnerHTML={{\n        __html: html,\n      }}\n    />\n  );\n}\n\nexport default LoginWidget;\n","import { useCallback, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { Loading } from '@/components';\nimport { endUserMasqueradingCompany, superAdminEndMasquerade } from '@/shared/service/b2b';\nimport { bcLogoutLogin } from '@/shared/service/bc';\nimport { isLoggedInSelector, store, useAppSelector } from '@/store';\nimport { clearCompanySlice } from '@/store/slices/company';\n\nconst logout = () => {\n  return bcLogoutLogin().then((res) => {\n    if (res.data.logout.result !== 'success') {\n      throw new Error('Failed to logout');\n    }\n  });\n};\n\nconst useEndMasquerade = () => {\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n\n  return useCallback(async () => {\n    if (isAgenting) {\n      superAdminEndMasquerade(Number(salesRepCompanyId));\n    }\n  }, [isAgenting, salesRepCompanyId]);\n};\n\nconst useEndCompanyMasquerade = () => {\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  return useCallback(async () => {\n    if (selectCompanyHierarchyId) {\n      await endUserMasqueradingCompany();\n    }\n  }, [selectCompanyHierarchyId]);\n};\n\nexport function CatalystLogin() {\n  const navigate = useNavigate();\n  const endMasquerade = useEndMasquerade();\n  const endCompanyMasquerading = useEndCompanyMasquerade();\n  const isLoggedIn = useAppSelector(isLoggedInSelector);\n  const B2BToken = useAppSelector(({ company }) => company.tokens.B2BToken);\n  const [searchParams] = useSearchParams();\n\n  const loginFlag = searchParams.get('loginFlag');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      window.location.href = '/login';\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [B2BToken]);\n\n  useEffect(() => {\n    if (loginFlag === 'loggedOutLogin' || !B2BToken) {\n      Promise.all([logout(), endMasquerade(), endCompanyMasquerading()])\n        .catch(() => {\n          navigate('/orders');\n        })\n        .then(() => {\n          window.sessionStorage.clear();\n          store.dispatch(clearCompanySlice());\n          window.b2b.callbacks.dispatchEvent('on-logout');\n        });\n    } else if (isLoggedIn) {\n      navigate('/orders');\n    }\n  }, [endCompanyMasquerading, endMasquerade, isLoggedIn, loginFlag, navigate, B2BToken]);\n\n  return <Loading />;\n}\n","import { SubmitHandler, useForm } from 'react-hook-form';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, Button, Link, Typography, useTheme } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport { getContrastColor } from '@/components/outSideComponents/utils/b3CustomStyles';\n\nimport { getLoginFields, LoginConfig } from './config';\n\ninterface LoginFormProps {\n  loginBtn: string;\n  handleLoginSubmit: (data: LoginConfig) => void;\n  backgroundColor: string;\n}\n\nfunction LoginForm(props: LoginFormProps) {\n  const { loginBtn, handleLoginSubmit, backgroundColor } = props;\n\n  const b3Lang = useB3Lang();\n  const theme = useTheme();\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setValue,\n  } = useForm<LoginConfig>({\n    mode: 'onSubmit',\n  });\n\n  const handleLoginClick: SubmitHandler<LoginConfig> = (data) => {\n    handleLoginSubmit(data);\n  };\n\n  const loginFields = getLoginFields(b3Lang, handleSubmit(handleLoginClick));\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <Typography\n        variant=\"h5\"\n        sx={{\n          margin: '20px 0',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {b3Lang('login.loginText.signInHeader')}\n      </Typography>\n      <Box\n        sx={{\n          width: '100%',\n          '& input': {\n            bgcolor: '#F5F5F5',\n            borderRadius: '4px',\n            borderBottomLeftRadius: '0',\n            borderBottomRightRadius: '0',\n          },\n        }}\n      >\n        <form onSubmit={handleSubmit(handleLoginClick)}>\n          <B3CustomForm\n            formFields={loginFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-start ',\n              alignItems: 'center',\n              mt: 2,\n              gap: 2,\n            }}\n          >\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{\n                backgroundColor: theme.palette.primary.main,\n              }}\n            >\n              {loginBtn}\n            </Button>\n            <Link\n              component={RouterLink}\n              color={getContrastColor(backgroundColor)}\n              to=\"/forgotPassword\"\n            >\n              {b3Lang('login.loginText.forgotPasswordText')}\n            </Link>\n          </Box>\n        </form>\n      </Box>\n    </Box>\n  );\n}\n\nexport default LoginForm;\n","import { Link } from 'react-router-dom';\nimport { Box, Button, useTheme } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\n\nimport LoginWidget from './component/LoginWidget';\n\ninterface LoginPanelProps {\n  widgetBodyText: string;\n  createAccountButtonText: string;\n}\n\nfunction LoginPanel(props: LoginPanelProps) {\n  const { widgetBodyText, createAccountButtonText } = props;\n\n  const theme = useTheme();\n  const [isMobile] = useMobile();\n\n  return (\n    <Box\n      sx={{\n        padding: isMobile ? '16px' : '20px',\n        borderRadius: '4px',\n        mt: isMobile ? '0' : '-25px',\n      }}\n    >\n      <LoginWidget\n        sx={{\n          minHeight: '250px',\n          '& .panel': {\n            '.panel-title': {\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n              fontWeight: 400,\n              fontSize: '24px',\n            },\n          },\n        }}\n        html={widgetBodyText}\n      />\n      <Box\n        sx={{\n          marginTop: '5px',\n        }}\n      >\n        <Button\n          component={Link}\n          to=\"/register\"\n          variant=\"contained\"\n          sx={{\n            ml: isMobile ? 0 : 1,\n            backgroundColor: theme.palette.primary.main,\n          }}\n        >\n          {createAccountButtonText}\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default LoginPanel;\n","import { useCallback } from 'react';\nimport { dispatchEvent } from '@b3/hooks';\n\nimport { endUserMasqueradingCompany, superAdminEndMasquerade } from '@/shared/service/b2b';\nimport { bcLogoutLogin } from '@/shared/service/bc';\nimport { clearMasqueradeCompany, useAppDispatch, useAppSelector } from '@/store';\nimport b2bLogger from '@/utils/b3Logger';\nimport { logoutSession } from '@/utils/b3logout';\n\nconst useEndMasquerade = () => {\n  const isMasquerading = useAppSelector(\n    ({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting,\n  );\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const storeDispatch = useAppDispatch();\n\n  return useCallback(async () => {\n    if (isMasquerading) {\n      await superAdminEndMasquerade(Number(salesRepCompanyId));\n      storeDispatch(clearMasqueradeCompany());\n    }\n  }, [salesRepCompanyId, storeDispatch, isMasquerading]);\n};\n\nconst useEndCompanyMasquerading = () => {\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  return useCallback(async () => {\n    if (selectCompanyHierarchyId) {\n      await endUserMasqueradingCompany();\n    }\n  }, [selectCompanyHierarchyId]);\n};\n\nexport const useLogout = () => {\n  const endMasquerade = useEndMasquerade();\n  const endCompanyMasquerading = useEndCompanyMasquerading();\n\n  return async () => {\n    try {\n      const { result } = (await bcLogoutLogin()).data.logout;\n\n      if (result !== 'success') {\n        return;\n      }\n\n      await Promise.all([endCompanyMasquerading(), endMasquerade()]);\n    } catch (e) {\n      b2bLogger.error(e);\n    } finally {\n      // SUP-1282 Clear sessionStorage to allow visitors to display the checkout page\n      window.sessionStorage.clear();\n      logoutSession();\n      dispatchEvent('on-logout');\n    }\n  };\n};\n","import { useContext, useEffect, useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { dispatchEvent } from '@b3/hooks';\nimport { useB3Lang } from '@b3/lang';\nimport { Alert, Box, ImageListItem } from '@mui/material';\n\nimport { B3Card } from '@/components';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { CHECKOUT_URL, PATH_ROUTES } from '@/constants';\nimport { useMobile } from '@/hooks';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { defaultCreateAccountPanel } from '@/shared/customStyleButton/context/config';\nimport { GlobalContext } from '@/shared/global';\nimport { getBCForcePasswordReset } from '@/shared/service/b2b';\nimport { b2bLogin, bcLogin, customerLoginAPI } from '@/shared/service/bc';\nimport { isLoggedInSelector, useAppDispatch, useAppSelector } from '@/store';\nimport { setB2BToken } from '@/store/slices/company';\nimport { CustomerRole, UserTypes } from '@/types';\nimport { LoginFlagType } from '@/types/login';\nimport { b2bJumpPath, channelId, loginJump, platform, snackbar, storeHash } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport { getCurrentCustomerInfo } from '@/utils/loginInfo';\n\nimport { type PageProps } from '../PageProps';\n\nimport LoginWidget from './component/LoginWidget';\nimport { CatalystLogin } from './CatalystLogin';\nimport { isLoginFlagType, loginCheckout, LoginConfig, loginType } from './config';\nimport LoginForm from './LoginForm';\nimport LoginPanel from './LoginPanel';\nimport { LoginContainer, LoginImage } from './styled';\nimport { useLogout } from './useLogout';\n\nfunction Login(props: PageProps) {\n  const { setOpenPage } = props;\n  const storeDispatch = useAppDispatch();\n  const logout = useLogout();\n\n  const isLoggedIn = useAppSelector(isLoggedInSelector);\n\n  const quoteDetailToCheckoutUrl = useAppSelector(\n    ({ quoteInfo }) => quoteInfo.quoteDetailToCheckoutUrl,\n  );\n\n  const [isLoading, setLoading] = useState(true);\n  const [isMobile] = useMobile();\n\n  const [showTipInfo, setShowTipInfo] = useState<boolean>(true);\n  const [flag, setLoginFlag] = useState<LoginFlagType>();\n  const [loginAccount, setLoginAccount] = useState<LoginConfig>({\n    emailAddress: '',\n    password: '',\n  });\n  const navigate = useNavigate();\n  const b3Lang = useB3Lang();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const {\n    state: { isCheckout, logo, registerEnabled },\n  } = useContext(GlobalContext);\n\n  const {\n    state: {\n      loginPageButton,\n      loginPageDisplay,\n      loginPageHtml,\n      portalStyle: { backgroundColor = 'FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const { createAccountButtonText, primaryButtonColor, signInButtonText } = loginPageButton;\n  const { displayStoreLogo, pageTitle } = loginPageDisplay;\n\n  const {\n    bottomHtmlRegionEnabled,\n    bottomHtmlRegionHtml,\n    createAccountPanelHtml,\n    topHtmlRegionEnabled,\n    topHtmlRegionHtml,\n  } = loginPageHtml;\n\n  const loginInfo = {\n    loginTitle: pageTitle || b3Lang('login.button.signIn'),\n    loginBtn: signInButtonText || b3Lang('login.button.signInUppercase'),\n    createAccountButtonText: createAccountButtonText || b3Lang('login.button.createAccount'),\n    btnColor: primaryButtonColor || '',\n    widgetHeadText: topHtmlRegionEnabled ? topHtmlRegionHtml : undefined,\n    widgetBodyText: createAccountPanelHtml || defaultCreateAccountPanel,\n    widgetFooterText: bottomHtmlRegionEnabled ? bottomHtmlRegionHtml : undefined,\n    logo: displayStoreLogo ? logo : undefined,\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const loginFlag = searchParams.get('loginFlag');\n        const showTipInfo = searchParams.get('showTip') !== 'false';\n\n        setShowTipInfo(showTipInfo);\n\n        if (isLoginFlagType(loginFlag)) {\n          setLoginFlag(loginFlag);\n        }\n\n        if (loginFlag === 'invoiceErrorTip') {\n          const { tip } = loginType[loginFlag];\n          snackbar.error(b3Lang(tip));\n        }\n\n        if (loginFlag === 'loggedOutLogin' && isLoggedIn) {\n          await logout();\n        }\n\n        setLoading(false);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [b3Lang, isLoggedIn, logout, searchParams]);\n\n  const tipInfo = (loginFlag: LoginFlagType, email = '') => {\n    const { tip, alertType } = loginType[loginFlag];\n\n    return {\n      message: b3Lang(tip, { email }),\n      severity: alertType,\n    };\n  };\n\n  const getForcePasswordReset = async (email: string) => {\n    const forcePasswordReset = await getBCForcePasswordReset(email);\n\n    if (forcePasswordReset) {\n      setLoginFlag('resetPassword');\n    } else {\n      setLoginFlag('accountIncorrect');\n    }\n  };\n\n  const forcePasswordReset = async (email: string, password: string) => {\n    const { errors: bcErrors } = await bcLogin({\n      email,\n      pass: password,\n    });\n\n    if (bcErrors?.[0]) {\n      const { message } = bcErrors[0];\n\n      if (message === 'Reset password') {\n        getForcePasswordReset(email);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const handleLoginSubmit = async (data: LoginConfig) => {\n    setLoading(true);\n    setLoginAccount(data);\n    setSearchParams((prevURLSearchParams) => {\n      prevURLSearchParams.delete('loginFlag');\n      return prevURLSearchParams;\n    });\n\n    if (isCheckout) {\n      try {\n        const response = await loginCheckout(data);\n\n        if (response.status === 400 && response.type === 'reset_password_before_login') {\n          setLoginFlag('resetPassword');\n        } else if (response.type === 'invalid_login') {\n          setLoginFlag('accountIncorrect');\n        } else {\n          window.location.href = CHECKOUT_URL;\n        }\n      } catch (error) {\n        b2bLogger.error(error);\n        await getForcePasswordReset(data.emailAddress);\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      try {\n        const loginData = {\n          email: data.emailAddress,\n          password: data.password,\n          storeHash,\n          channelId,\n        };\n\n        const isForcePasswordReset = await forcePasswordReset(data.emailAddress, data.password);\n        if (isForcePasswordReset) return;\n\n        const {\n          login: {\n            result: { token, storefrontLoginToken },\n            errors,\n          },\n        } = await b2bLogin({ loginData });\n\n        storeDispatch(setB2BToken(token));\n        customerLoginAPI(storefrontLoginToken);\n\n        dispatchEvent('on-login', { storefrontToken: storefrontLoginToken });\n\n        if (errors?.[0] || !token) {\n          if (errors?.[0]) {\n            const { message } = errors[0];\n            if (message === 'Operation cannot be performed as the storefront channel is not live') {\n              setLoginFlag('accountPrelaunch');\n              setLoading(false);\n              return;\n            }\n          }\n          getForcePasswordReset(data.emailAddress);\n        } else {\n          const info = await getCurrentCustomerInfo(token);\n\n          if (quoteDetailToCheckoutUrl) {\n            navigate(quoteDetailToCheckoutUrl);\n            return;\n          }\n\n          if (\n            info?.userType === UserTypes.MULTIPLE_B2C &&\n            info?.role === CustomerRole.SUPER_ADMIN\n          ) {\n            navigate('/dashboard');\n            return;\n          }\n          const isLoginLandLocation = loginJump(navigate);\n\n          if (!isLoginLandLocation) return;\n\n          if (info?.userType === UserTypes.B2C) {\n            navigate(PATH_ROUTES.ORDERS);\n          }\n\n          const path = b2bJumpPath(Number(info?.role));\n\n          navigate(path);\n        }\n      } catch (error) {\n        snackbar.error(b3Lang('login.loginTipInfo.accountIncorrect'));\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const loginAndRegisterContainerWidth = registerEnabled ? '100%' : '50%';\n  const loginContainerWidth = registerEnabled ? '50%' : 'auto';\n\n  const tip = flag && tipInfo(flag, loginAccount?.emailAddress);\n\n  return (\n    <B3Card setOpenPage={setOpenPage}>\n      <LoginContainer paddings={isMobile ? '0' : '20px 20px'}>\n        <B3Spin isSpinning={isLoading} tip={b3Lang('global.tips.loading')} background=\"transparent\">\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              width: '100%',\n              minHeight: '400px',\n              minWidth: '343px',\n            }}\n          >\n            {loginInfo && (\n              <>\n                {flag && showTipInfo && (\n                  <Box\n                    sx={{\n                      padding: isMobile ? 0 : '0 5%',\n                      margin: '30px 0 0 0',\n                    }}\n                  >\n                    {tip && (\n                      <Alert severity={tip.severity} variant=\"filled\">\n                        {tip.message}\n                      </Alert>\n                    )}\n                  </Box>\n                )}\n                {quoteDetailToCheckoutUrl && (\n                  <Alert severity=\"error\" variant=\"filled\">\n                    {b3Lang('login.loginText.quoteDetailToCheckoutUrl')}\n                  </Alert>\n                )}\n                {loginInfo.logo && (\n                  <Box sx={{ margin: '20px 0', minHeight: '150px' }}>\n                    <LoginImage>\n                      <ImageListItem\n                        sx={{\n                          maxWidth: isMobile ? '70%' : '250px',\n                        }}\n                        onClick={() => {\n                          window.location.href = '/';\n                        }}\n                      >\n                        <img\n                          src={loginInfo.logo}\n                          alt={b3Lang('login.registerLogo')}\n                          loading=\"lazy\"\n                        />\n                      </ImageListItem>\n                    </LoginImage>\n                  </Box>\n                )}\n                {loginInfo.widgetHeadText && (\n                  <LoginWidget\n                    sx={{\n                      minHeight: '48px',\n                      width: registerEnabled || isMobile ? '100%' : '50%',\n                    }}\n                    html={loginInfo.widgetHeadText}\n                  />\n                )}\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <Box\n                    sx={{\n                      bgcolor: '#FFFFFF',\n                      borderRadius: '4px',\n                      margin: '20px 0',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center',\n                      width: isMobile ? 'auto' : loginAndRegisterContainerWidth,\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        mb: '20px',\n                        display: 'flex',\n                        flexDirection: isMobile ? 'column' : 'row',\n                        justifyContent: 'center',\n                        width: isMobile ? 'auto' : '100%',\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          width: isMobile ? 'auto' : loginContainerWidth,\n                          paddingRight: isMobile ? 0 : '2%',\n                          ml: '16px',\n                          mr: isMobile ? '16px' : '',\n                          pb: registerEnabled ? '' : '36px',\n                        }}\n                      >\n                        <LoginForm\n                          loginBtn={loginInfo.loginBtn}\n                          handleLoginSubmit={handleLoginSubmit}\n                          backgroundColor={backgroundColor}\n                        />\n                      </Box>\n\n                      {registerEnabled && (\n                        <Box\n                          sx={{\n                            flex: '1',\n                            paddingLeft: isMobile ? 0 : '2%',\n                          }}\n                        >\n                          <LoginPanel\n                            createAccountButtonText={loginInfo.createAccountButtonText}\n                            widgetBodyText={loginInfo.widgetBodyText}\n                          />\n                        </Box>\n                      )}\n                    </Box>\n                  </Box>\n                </Box>\n                {loginInfo.widgetFooterText && (\n                  <LoginWidget\n                    sx={{\n                      minHeight: '48px',\n                      width: registerEnabled || isMobile ? '100%' : '50%',\n                    }}\n                    html={loginInfo.widgetFooterText}\n                  />\n                )}\n              </>\n            )}\n          </Box>\n        </B3Spin>\n      </LoginContainer>\n    </B3Card>\n  );\n}\n\nexport default function LoginPage(props: PageProps) {\n  if (platform === 'catalyst') {\n    return <CatalystLogin />;\n  }\n\n  return <Login {...props} />;\n}\n"],"names":["LoginWidget","props","html","sx","jsx","Box","logout","bcLogoutLogin","res","useEndMasquerade","isAgenting","useAppSelector","b2bFeatures","salesRepCompanyId","useCallback","superAdminEndMasquerade","useEndCompanyMasquerade","selectCompanyHierarchyId","company","endUserMasqueradingCompany","CatalystLogin","navigate","useNavigate","endMasquerade","endCompanyMasquerading","isLoggedIn","isLoggedInSelector","B2BToken","searchParams","useSearchParams","loginFlag","useEffect","timeout","store","clearCompanySlice","Loading","LoginForm","loginBtn","handleLoginSubmit","backgroundColor","b3Lang","useB3Lang","theme","useTheme","control","handleSubmit","getValues","errors","setValue","useForm","handleLoginClick","data","loginFields","getLoginFields","jsxs","Typography","B3CustomForm","Button","Link","RouterLink","getContrastColor","LoginPanel","widgetBodyText","createAccountButtonText","isMobile","useMobile","isMasquerading","storeDispatch","useAppDispatch","clearMasqueradeCompany","useEndCompanyMasquerading","useLogout","result","e","b2bLogger","logoutSession","dispatchEvent","Login","setOpenPage","quoteDetailToCheckoutUrl","quoteInfo","isLoading","setLoading","useState","showTipInfo","setShowTipInfo","flag","setLoginFlag","loginAccount","setLoginAccount","setSearchParams","isCheckout","logo","registerEnabled","useContext","GlobalContext","loginPageButton","loginPageDisplay","loginPageHtml","CustomStyleContext","primaryButtonColor","signInButtonText","displayStoreLogo","pageTitle","bottomHtmlRegionEnabled","bottomHtmlRegionHtml","createAccountPanelHtml","topHtmlRegionEnabled","topHtmlRegionHtml","loginInfo","defaultCreateAccountPanel","isLoginFlagType","tip","loginType","snackbar","tipInfo","email","alertType","getForcePasswordReset","forcePasswordReset","getBCForcePasswordReset","password","bcErrors","bcLogin","message","prevURLSearchParams","response","loginCheckout","CHECKOUT_URL","error","loginData","storeHash","channelId","token","storefrontLoginToken","b2bLogin","setB2BToken","customerLoginAPI","info","getCurrentCustomerInfo","UserTypes","CustomerRole","loginJump","PATH_ROUTES","path","b2bJumpPath","loginAndRegisterContainerWidth","loginContainerWidth","B3Card","LoginContainer","B3Spin","Fragment","Alert","LoginImage","ImageListItem","LoginPage","platform"],"mappings":"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"}