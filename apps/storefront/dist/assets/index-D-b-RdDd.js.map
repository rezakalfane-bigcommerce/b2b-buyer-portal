{"version":3,"file":"index-D-b-RdDd.js","sources":["../../src/utils/b3Price.ts","../../src/shared/service/b2b/graphql/quickOrder.ts","../../src/pages/QuickOrder/components/QuickOrderCard.tsx","../../src/pages/QuickOrder/components/QuickOrderB2BTable.tsx","../../src/pages/QuickOrder/utils.ts","../../src/pages/QuickOrder/components/QuickOrderFooter.tsx","../../src/pages/QuickOrder/components/QuickAdd.tsx","../../src/pages/QuickOrder/components/QuickOrderPad.tsx","../../src/pages/QuickOrder/index.tsx"],"sourcesContent":["import isEmpty from 'lodash-es/isEmpty';\n\nimport { store } from '@/store';\nimport { Variant } from '@/types/products';\n\nconst getProductPriceIncTaxOrExTaxBySetting = (\n  variants: Variant[],\n  variantId?: number,\n  variantSku?: string,\n) => {\n  const {\n    global: { showInclusiveTaxPrice },\n  } = store.getState();\n  const currentVariantInfo: Variant | undefined = variants.find(\n    (item: Variant) => Number(item.variant_id) === variantId || variantSku === item.sku,\n  );\n\n  if (currentVariantInfo && !isEmpty(currentVariantInfo)) {\n    const bcCalculatedPrice: {\n      tax_inclusive: number | string;\n      tax_exclusive: number | string;\n    } = currentVariantInfo.bc_calculated_price;\n\n    const priceIncTax = showInclusiveTaxPrice\n      ? Number(bcCalculatedPrice.tax_inclusive)\n      : Number(bcCalculatedPrice.tax_exclusive);\n\n    return priceIncTax;\n  }\n\n  return false;\n};\n\nconst getProductPriceIncTax = (\n  variants: CustomFieldItems,\n  variantId?: number,\n  variantSku?: string,\n) => {\n  const currentVariantInfo =\n    variants.find(\n      (item: CustomFieldItems) => Number(item.variant_id) === variantId || variantSku === item.sku,\n    ) || {};\n\n  if (!isEmpty(currentVariantInfo)) {\n    const bcCalculatedPrice: {\n      tax_inclusive: number | string;\n    } = currentVariantInfo.bc_calculated_price;\n\n    const priceIncTax = Number(bcCalculatedPrice.tax_inclusive);\n\n    return priceIncTax;\n  }\n\n  return false;\n};\n\nexport { getProductPriceIncTax, getProductPriceIncTaxOrExTaxBySetting };\n","import B3Request from '../../request/b3Fetch';\n\n// import {\n//   convertArrayToGraphql,\n//   storeHash,\n// } from '../../../../utils'\n\nconst orderedProducts = (data: CustomFieldItems) => `{\n  orderedProducts (\n    q: \"${data.q || ''}\"\n    first: ${data.first}\n    offset: ${data.offset}\n    beginDateAt: \"${data.beginDateAt}\"\n    endDateAt: \"${data.endDateAt}\"\n    orderBy: \"${data?.orderBy || ''}\"\n  ){\n    totalCount,\n    pageInfo{\n      hasNextPage,\n      hasPreviousPage,\n    },\n    edges{\n      node {\n        id,\n        createdAt,\n        updatedAt,\n        productName,\n        productBrandName,\n        variantSku,\n        productId,\n        variantId,\n        optionList,\n        orderedTimes,\n        firstOrderedAt,\n        lastOrderedAt,\n        lastOrderedItems,\n        sku,\n        lastOrdered,\n        imageUrl,\n        baseSku,\n        basePrice,\n        discount,\n        tax,\n        enteredInclusive,\n        productUrl,\n        optionSelections,\n      }\n    }\n  }\n}`;\n\nexport const getOrderedProducts = (data: CustomFieldItems) =>\n  B3Request.graphqlB2B({\n    query: orderedProducts(data),\n  });\n\nexport const getBcOrderedProducts = (data: CustomFieldItems) =>\n  B3Request.graphqlB2B({\n    query: orderedProducts(data),\n  });\n","import { ReactElement } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, CardContent, styled, TextField, Typography } from '@mui/material';\n\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { currencyFormat, displayFormat } from '@/utils';\nimport b2bGetVariantImageByVariantInfo from '@/utils/b2bGetVariantImageByVariantInfo';\n\ninterface QuickOrderCardProps {\n  item: any;\n  checkBox?: () => ReactElement;\n  handleUpdateProductQty: (id: number, val: string) => void;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nfunction QuickOrderCard(props: QuickOrderCardProps) {\n  const { item: shoppingDetail, checkBox, handleUpdateProductQty } = props;\n  const b3Lang = useB3Lang();\n\n  const {\n    quantity,\n    imageUrl,\n    productName,\n    variantSku,\n    optionList,\n    basePrice,\n    lastOrderedAt,\n    variantId,\n    productsSearch,\n  } = shoppingDetail;\n\n  const price = Number(basePrice) * Number(quantity);\n  const currentVariants = productsSearch.variants || [];\n  const currentImage = b2bGetVariantImageByVariantInfo(currentVariants, { variantId }) || imageUrl;\n\n  return (\n    <Box\n      key={shoppingDetail.id}\n      sx={{\n        borderTop: '1px solid #D9DCE9',\n      }}\n    >\n      <CardContent\n        sx={{\n          color: '#313440',\n          display: 'flex',\n          pl: 0,\n        }}\n      >\n        <Box>{checkBox && checkBox()}</Box>\n        <Box>\n          <StyledImage\n            src={currentImage || PRODUCT_DEFAULT_IMAGE}\n            alt=\"Product-img\"\n            loading=\"lazy\"\n          />\n        </Box>\n        <Box\n          sx={{\n            flex: 1,\n          }}\n        >\n          <Typography variant=\"body1\" color=\"#212121\">\n            {productName}\n          </Typography>\n          <Typography variant=\"body1\" color=\"#616161\">\n            {variantSku}\n          </Typography>\n          <Box\n            sx={{\n              margin: '1rem 0',\n            }}\n          >\n            {optionList.length > 0 && (\n              <Box>\n                {optionList.map((option: CustomFieldItems) => (\n                  <Typography\n                    sx={{\n                      fontSize: '0.75rem',\n                      lineHeight: '1.5',\n                      color: '#455A64',\n                    }}\n                    key={option.display_name}\n                  >\n                    {`${option.display_name}: ${option.display_value}`}\n                  </Typography>\n                ))}\n              </Box>\n            )}\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>\n            {b3Lang('purchasedProducts.quickOrderCard.price', {\n              price: currencyFormat(price),\n            })}\n          </Typography>\n          <Box\n            sx={{\n              '& label': {\n                zIndex: 0,\n              },\n            }}\n          >\n            <TextField\n              size=\"small\"\n              type=\"number\"\n              variant=\"filled\"\n              label=\"Qty\"\n              inputProps={{\n                inputMode: 'numeric',\n                pattern: '[0-9]*',\n              }}\n              value={quantity}\n              sx={{\n                margin: '1rem 0',\n                width: '60%',\n                maxWidth: '100px',\n                '& label': {\n                  fontSize: '14px',\n                },\n                '& input': {\n                  fontSize: '14px',\n                },\n              }}\n              onChange={(e) => {\n                handleUpdateProductQty(shoppingDetail.id, e.target.value);\n              }}\n            />\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>\n            {b3Lang('purchasedProducts.quickOrderCard.lastOrdered', {\n              lastOrderedAt: displayFormat(lastOrderedAt),\n            })}\n          </Typography>\n        </Box>\n      </CardContent>\n    </Box>\n  );\n}\n\nexport default QuickOrderCard;\n","import { Dispatch, SetStateAction, useRef, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, styled, TextField, Typography } from '@mui/material';\n\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { TableColumnItem } from '@/components/table/B3Table';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useMobile, useSort } from '@/hooks';\nimport {\n  getBcOrderedProducts,\n  getOrderedProducts,\n  searchB2BProducts,\n  searchBcProducts,\n} from '@/shared/service/b2b';\nimport { activeCurrencyInfoSelector, isB2BUserSelector, useAppSelector } from '@/store';\nimport { ProductInfoType } from '@/types/gql/graphql';\nimport {\n  currencyFormat,\n  displayFormat,\n  distanceDay,\n  getProductPriceIncTaxOrExTaxBySetting,\n  snackbar,\n} from '@/utils';\nimport b2bGetVariantImageByVariantInfo from '@/utils/b2bGetVariantImageByVariantInfo';\nimport { getDisplayPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport B3FilterMore from '../../../components/filter/B3FilterMore';\nimport B3FilterPicker from '../../../components/filter/B3FilterPicker';\nimport B3FilterSearch from '../../../components/filter/B3FilterSearch';\nimport { CheckedProduct } from '../utils';\n\nimport QuickOrderCard from './QuickOrderCard';\n\ninterface ProductInfoProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: string;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  taxPrice: number;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: ProductInfoType;\n}\n\ninterface ListItemProps {\n  node: ProductInfoProps;\n}\n\ninterface SearchProps {\n  q: string;\n  first?: number;\n  offset?: number;\n  beginDateAt?: Date | string | number;\n  endDateAt?: Date | string | number;\n  orderBy: string;\n}\n\ninterface PaginationTableRefProps extends HTMLInputElement {\n  getList: () => void;\n  getCacheList: () => void;\n  setCacheAllList: (items?: ListItemProps[]) => void;\n  setList: (items?: ListItemProps[]) => void;\n  getSelectedValue: () => void;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nconst StyleQuickOrderTable = styled(Box)(() => ({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n\n  '& tbody': {\n    '& tr': {\n      '& td': {\n        verticalAlign: 'top',\n      },\n      '& td: first-of-type': {\n        paddingTop: '25px',\n      },\n    },\n  },\n}));\n\ninterface QuickOrderTableProps {\n  setIsRequestLoading: Dispatch<SetStateAction<boolean>>;\n  setCheckedArr: (values: CheckedProduct[]) => void;\n  isRequestLoading: boolean;\n}\n\nconst StyledTextField = styled(TextField)(() => ({\n  '& input': {\n    paddingTop: '12px',\n    paddingRight: '6px',\n  },\n}));\n\nexport const defaultSortKey = 'lastOrderedAt';\n\nexport const sortKeys = {\n  product: 'productName',\n  lastOrderedAt: 'lastOrderedAt',\n};\n\nfunction QuickOrderTable({\n  setIsRequestLoading,\n  setCheckedArr,\n  isRequestLoading,\n}: QuickOrderTableProps) {\n  const paginationTableRef = useRef<PaginationTableRefProps | null>(null);\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector(({ company }) => company.customer.customerGroupId);\n\n  const [search, setSearch] = useState<SearchProps>({\n    q: '',\n    beginDateAt: distanceDay(90),\n    endDateAt: distanceDay(0),\n    orderBy: `-${sortKeys[defaultSortKey]}`,\n  });\n\n  const [handleSetOrderBy, order, orderBy] = useSort(sortKeys, defaultSortKey, search, setSearch);\n\n  const [total, setTotalCount] = useState<number>(0);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n\n  const handleGetProductsById = async (listProducts: ListItemProps[]) => {\n    if (listProducts.length > 0) {\n      const productIds: number[] = [];\n      listProducts.forEach((item) => {\n        const { node } = item;\n        node.quantity = 1;\n        if (!productIds.includes(node.productId)) {\n          productIds.push(node.productId);\n        }\n      });\n\n      const getProducts = isB2BUser ? searchB2BProducts : searchBcProducts;\n\n      try {\n        const { productsSearch } = await getProducts({\n          productIds,\n          currencyCode,\n          companyId: companyInfoId,\n          customerGroupId,\n        });\n\n        const newProductsSearch = conversionProductsList(productsSearch);\n\n        listProducts.forEach((item) => {\n          const { node } = item;\n\n          const productInfo = newProductsSearch.find((search: CustomFieldItems) => {\n            const { id: productId } = search;\n\n            return Number(node.productId) === Number(productId);\n          });\n\n          node.productsSearch = productInfo || {};\n        });\n\n        return listProducts;\n      } catch (err: any) {\n        snackbar.error(err);\n      }\n    }\n    return [];\n  };\n\n  const getList: GetRequestList<SearchProps, ProductInfoProps> = async (params) => {\n    const {\n      orderedProducts: { edges, totalCount },\n    } = isB2BUser ? await getOrderedProducts(params) : await getBcOrderedProducts(params);\n\n    const listProducts = await handleGetProductsById(edges);\n\n    setTotalCount(totalCount);\n\n    return {\n      edges: listProducts,\n      totalCount,\n    };\n  };\n\n  const handleSearchProduct = async (q: string) => {\n    setSearch({\n      ...search,\n      q,\n    });\n  };\n\n  const getSelectCheckbox = (selectCheckbox: Array<string | number>) => {\n    if (selectCheckbox.length > 0) {\n      const productList = paginationTableRef.current?.getCacheList() || [];\n      const checkedItems = selectCheckbox.reduce((pre, item: number | string) => {\n        const newItems = productList.find((product: ListItemProps) => {\n          const { node } = product;\n\n          return node.id === item;\n        });\n\n        if (newItems) pre.push(newItems);\n\n        return pre;\n      }, []);\n\n      setCheckedArr([...checkedItems]);\n    } else {\n      setCheckedArr([]);\n    }\n  };\n\n  const handlePickerChange = (key: string, value: Date | string | number) => {\n    const params = {\n      ...search,\n    };\n    if (key === 'start') {\n      params.beginDateAt = value || distanceDay(90);\n    } else {\n      params.endDateAt = value || distanceDay(0);\n    }\n\n    setSearch(params);\n  };\n\n  const handleFilterChange = (data: any) => {\n    const params = {\n      ...search,\n    };\n\n    params.beginDateAt = data.startValue;\n\n    params.endDateAt = data.endValue;\n\n    setSearch(params);\n  };\n\n  const handleUpdateProductQty = (id: number | string, value: number | string) => {\n    if (value !== '' && Number(value) <= 0) return;\n    const listItems = paginationTableRef.current?.getList() || [];\n    const listCacheItems = paginationTableRef.current?.getCacheList() || [];\n\n    const newListItems = listItems?.map((item: ListItemProps) => {\n      const { node } = item;\n      if (node?.id === id) {\n        node.quantity = Number(value) || '';\n      }\n\n      return item;\n    });\n    const newListCacheItems = listCacheItems?.map((item: ListItemProps) => {\n      const { node } = item;\n      if (node?.id === id) {\n        node.quantity = Number(value) || '';\n      }\n\n      return item;\n    });\n    paginationTableRef.current?.setList([...newListItems]);\n    paginationTableRef.current?.setCacheAllList([...newListCacheItems]);\n  };\n\n  const showPrice = (price: string, row: CustomFieldItems): string | number => {\n    const {\n      productsSearch: { isPriceHidden },\n    } = row;\n    if (isPriceHidden) return '';\n    return getDisplayPrice({\n      price,\n      productInfo: row,\n      showText: isPriceHidden ? '' : price,\n      forcedSkip: true,\n    });\n  };\n\n  const handleSetCheckedQty = (row: CustomFieldItems) => {\n    const cacheProductList: CustomFieldItems = paginationTableRef.current?.getCacheList() || [];\n\n    let qty = row.quantity;\n    if (cacheProductList.length > 0) {\n      const currentProduct = cacheProductList.find(\n        (item: CustomFieldItems) =>\n          item.node.variantId === row.variantId &&\n          item.node.productId === row.productId &&\n          item.node.id === row.id,\n      );\n\n      if (currentProduct && currentProduct.node) {\n        qty = currentProduct.node.quantity || qty;\n      }\n    }\n\n    return qty;\n  };\n\n  const columnItems: TableColumnItem<ProductInfoProps>[] = [\n    {\n      key: 'product',\n      title: b3Lang('purchasedProducts.product'),\n      render: (row: CustomFieldItems) => {\n        const { optionList, productsSearch, variantId } = row;\n        const currentVariants = productsSearch.variants || [];\n\n        const currentImage =\n          b2bGetVariantImageByVariantInfo(currentVariants, { variantId }) || row.imageUrl;\n        return (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'flex-start',\n            }}\n          >\n            <StyledImage\n              src={currentImage || PRODUCT_DEFAULT_IMAGE}\n              alt=\"Product-img\"\n              loading=\"lazy\"\n            />\n            <Box>\n              <Typography variant=\"body1\" color=\"#212121\">\n                {row.productName}\n              </Typography>\n              <Typography variant=\"body1\" color=\"#616161\">\n                {row.variantSku}\n              </Typography>\n              {optionList.length > 0 && (\n                <Box>\n                  {optionList.map((option: any) => (\n                    <Typography\n                      sx={{\n                        fontSize: '0.75rem',\n                        lineHeight: '1.5',\n                        color: '#455A64',\n                      }}\n                      key={option.id}\n                    >\n                      {`${option.display_name}: ${option.display_value}`}\n                    </Typography>\n                  ))}\n                </Box>\n              )}\n            </Box>\n          </Box>\n        );\n      },\n      width: '40%',\n      isSortable: true,\n    },\n    {\n      key: 'price',\n      title: b3Lang('purchasedProducts.price'),\n      render: (row: CustomFieldItems) => {\n        const {\n          productsSearch: { variants },\n          variantId,\n          basePrice,\n        } = row;\n        let priceIncTax = Number(basePrice);\n        if (variants?.length) {\n          priceIncTax =\n            getProductPriceIncTaxOrExTaxBySetting(variants, Number(variantId)) || Number(basePrice);\n        }\n\n        const qty = handleSetCheckedQty(row);\n        const withTaxPrice = priceIncTax || Number(basePrice);\n        const price = withTaxPrice * Number(qty);\n\n        return (\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {`${showPrice(currencyFormat(price), row)}`}\n          </Typography>\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'qty',\n      title: b3Lang('purchasedProducts.qty'),\n      render: (row) => {\n        const qty = handleSetCheckedQty(row);\n\n        return (\n          <StyledTextField\n            size=\"small\"\n            type=\"number\"\n            variant=\"filled\"\n            value={qty}\n            inputProps={{\n              inputMode: 'numeric',\n              pattern: '[0-9]*',\n            }}\n            onChange={(e) => {\n              handleUpdateProductQty(row.id, e.target.value);\n            }}\n          />\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'lastOrderedAt',\n      title: b3Lang('purchasedProducts.lastOrdered'),\n      render: (row: CustomFieldItems) => (\n        <Box>\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {`${displayFormat(Number(row.lastOrderedAt))}`}\n          </Typography>\n        </Box>\n      ),\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n      isSortable: true,\n    },\n  ];\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <StyleQuickOrderTable>\n        <Typography\n          sx={{\n            fontSize: '24px',\n            height: '50px',\n          }}\n        >\n          {b3Lang('purchasedProducts.totalProducts', { total })}\n        </Typography>\n        <Box\n          sx={{\n            marginBottom: '5px',\n            display: 'flex',\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <Box\n            sx={{\n              width: isMobile ? '100%' : '40%',\n              mr: '20px',\n              display: 'flex',\n              justifyContent: isMobile ? 'space-between' : 'flex-start',\n            }}\n          >\n            <B3FilterSearch\n              h=\"48px\"\n              searchBGColor=\"rgba(0, 0, 0, 0.06)\"\n              handleChange={(e) => {\n                handleSearchProduct(e);\n              }}\n            />\n\n            {isMobile && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <B3FilterMore\n                  filterMoreInfo={[]}\n                  startPicker={{\n                    isEnabled: true,\n                    label: b3Lang('purchasedProducts.from'),\n                    defaultValue: search?.beginDateAt || '',\n                    pickerKey: 'start',\n                  }}\n                  endPicker={{\n                    isEnabled: true,\n                    label: b3Lang('purchasedProducts.to'),\n                    defaultValue: search?.endDateAt || '',\n                    pickerKey: 'end',\n                  }}\n                  isShowMore\n                  onChange={handleFilterChange}\n                />\n              </Box>\n            )}\n          </Box>\n\n          {!isMobile && (\n            <B3FilterPicker\n              handleChange={handlePickerChange}\n              xs={{\n                mt: 0,\n                height: '50px',\n              }}\n              startPicker={{\n                isEnabled: true,\n                label: b3Lang('purchasedProducts.from'),\n                defaultValue: distanceDay(90),\n                pickerKey: 'start',\n              }}\n              endPicker={{\n                isEnabled: true,\n                label: b3Lang('purchasedProducts.to'),\n                defaultValue: distanceDay(),\n                pickerKey: 'end',\n              }}\n              customWidth=\"58%\"\n            />\n          )}\n        </Box>\n\n        <B3PaginationTable\n          ref={paginationTableRef}\n          columnItems={columnItems}\n          rowsPerPageOptions={[12, 24, 36]}\n          getRequestList={getList}\n          searchParams={search}\n          isCustomRender={false}\n          showCheckbox\n          showSelectAllCheckbox\n          disableCheckbox={false}\n          hover\n          labelRowsPerPage={b3Lang('purchasedProducts.itemsPerPage')}\n          showBorder={false}\n          requestLoading={setIsRequestLoading}\n          getSelectCheckbox={getSelectCheckbox}\n          itemIsMobileSpacing={0}\n          isSelectOtherPageCheckbox\n          noDataText={b3Lang('purchasedProducts.noProductsFound')}\n          sortDirection={order}\n          orderBy={orderBy}\n          sortByFn={handleSetOrderBy}\n          renderItem={(row, _, checkBox) => (\n            <QuickOrderCard\n              item={row}\n              checkBox={checkBox}\n              handleUpdateProductQty={handleUpdateProductQty}\n            />\n          )}\n        />\n      </StyleQuickOrderTable>\n    </B3Spin>\n  );\n}\n\nexport default QuickOrderTable;\n","import { LangFormatFunction } from '@b3/lang';\n\nimport { getCart } from '@/shared/service/bc/graphql/cart';\nimport { store } from '@/store';\nimport { OrderedProductType, ProductInfoType } from '@/types/gql/graphql';\nimport { snackbar } from '@/utils';\nimport { LineItems } from '@/utils/b3Product/b3Product';\n\nexport interface ProductInfo extends OrderedProductType {\n  productsSearch: ProductInfoType;\n  quantity: number;\n}\n\nexport interface CommonProducts extends ProductInfoType {\n  quantity: number;\n  variantId?: string;\n}\n\nexport interface CheckedProduct {\n  node: ProductInfo;\n}\n\nexport const handleVerifyProduct = (products: CustomFieldItems, b3Lang: LangFormatFunction) => {\n  const {\n    variantId,\n    variants,\n    inventoryLevel,\n    inventoryTracking,\n    orderQuantityMaximum,\n    orderQuantityMinimum,\n    quantity,\n    sku,\n  } = products;\n\n  const isEnableProduct =\n    store.getState().global?.blockPendingQuoteNonPurchasableOOS?.isEnableProduct || false;\n\n  const isStock = inventoryTracking !== 'none';\n  let purchasingDisabled = false;\n  let stock = inventoryLevel;\n  let productSku = sku;\n\n  const currentVariant = variants.find(\n    (variant: CustomFieldItems) => Number(variant.variant_id) === Number(variantId),\n  );\n  if (currentVariant) {\n    purchasingDisabled = currentVariant.purchasing_disabled;\n    stock = inventoryTracking === 'variant' ? currentVariant.inventory_level : stock;\n    productSku = currentVariant.sku || sku;\n  }\n\n  if (purchasingDisabled && !isEnableProduct) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.notPurchaseableSku', {\n        notPurchaseSku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'notPurchaseableSku',\n    };\n  }\n\n  if (isStock && Number(quantity) > Number(stock)) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.insufficientStockSku', {\n        sku: productSku,\n      }),\n      {\n        isClose: true,\n      },\n    );\n\n    return {\n      isVerify: false,\n      type: 'insufficientStockSku',\n    };\n  }\n\n  if (Number(orderQuantityMinimum) > 0 && Number(quantity) < orderQuantityMinimum) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.minQuantityMessage', {\n        minQuantity: orderQuantityMinimum,\n        sku: productSku,\n      }),\n      {\n        isClose: true,\n      },\n    );\n\n    return {\n      isVerify: false,\n      type: 'minQuantity',\n    };\n  }\n\n  if (Number(orderQuantityMaximum) > 0 && Number(quantity) > Number(orderQuantityMaximum)) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.maxQuantityMessage', {\n        maxQuantity: orderQuantityMaximum,\n        sku: productSku,\n      }),\n      {\n        isClose: true,\n      },\n    );\n\n    return {\n      isVerify: false,\n      type: 'maxQuantity',\n    };\n  }\n\n  return {\n    isVerify: true,\n  };\n};\n\nexport const getCartProductInfo = async () => {\n  const {\n    data: {\n      site: { cart },\n    },\n  } = await getCart();\n\n  if (cart) {\n    const { lineItems } = cart;\n    return Object.keys(lineItems).reduce((pre, cru) => {\n      lineItems[cru].forEach((item: LineItems) => {\n        pre.push(item);\n      });\n\n      return pre;\n    }, [] as LineItems[]);\n  }\n\n  return [];\n};\n\nexport const addCartProductToVerify = async (\n  checkedArr: Partial<CheckedProduct>[],\n  b3lang: LangFormatFunction,\n) => {\n  const cartProducts: LineItems[] = await getCartProductInfo();\n\n  const addCommonProducts = checkedArr.reduce((pre, checkItem) => {\n    const { node } = checkItem;\n\n    const num =\n      cartProducts.find(\n        (item: LineItems) =>\n          item.sku === node?.sku &&\n          Number(item?.variantEntityId || 0) === Number(node?.variantId || 0),\n      )?.quantity || 0;\n\n    pre.push({\n      ...node?.productsSearch,\n      variantId: node?.variantId,\n      quantity: (node?.quantity || 0) + num,\n    });\n\n    return pre;\n  }, [] as CommonProducts[]);\n\n  return addCommonProducts.every((product) => {\n    return handleVerifyProduct(product, b3lang).isVerify;\n  });\n};\n","import { Dispatch, SetStateAction, useContext, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { ArrowDropDown } from '@mui/icons-material';\nimport {\n  Box,\n  Button,\n  Grid,\n  Menu,\n  MenuItem,\n  SxProps,\n  Typography,\n  useMediaQuery,\n} from '@mui/material';\nimport { v1 as uuid } from 'uuid';\n\nimport { successTip } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { CART_URL, PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useMobile } from '@/hooks';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  addProductToBcShoppingList,\n  addProductToShoppingList,\n  searchB2BProducts,\n  searchBcProducts,\n} from '@/shared/service/b2b';\nimport { activeCurrencyInfoSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport { currencyFormat, getProductPriceIncTaxOrExTaxBySetting, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport {\n  addQuoteDraftProducts,\n  calculateProductListPrice,\n  getValidOptionsList,\n  validProductQty,\n} from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\nimport { callCart } from '@/utils/cartUtils';\n\nimport CreateShoppingList from '../../OrderDetail/components/CreateShoppingList';\nimport OrderShoppingList from '../../OrderDetail/components/OrderShoppingList';\nimport { addCartProductToVerify, CheckedProduct } from '../utils';\n\nexport interface ProductInfoProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: CustomFieldItems;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  tax: number | string;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: CustomFieldItems;\n}\n\nexport interface ListItemProps {\n  node: ProductInfoProps;\n}\n\ninterface NodeProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: CustomFieldItems;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  tax: number | string;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: CustomFieldItems;\n  optionSelections: CustomFieldItems;\n}\n\ninterface ProductsProps {\n  maxQuantity?: number;\n  minQuantity?: number;\n  stock?: number;\n  isStock?: string;\n  node: NodeProps;\n  isValid?: boolean;\n}\n\ninterface QuickOrderFooterProps {\n  checkedArr: CheckedProduct[];\n  isAgenting: boolean;\n  setIsRequestLoading: Dispatch<SetStateAction<boolean>>;\n  isB2BUser: boolean;\n}\n\nfunction QuickOrderFooter(props: QuickOrderFooterProps) {\n  const { checkedArr, isAgenting, setIsRequestLoading, isB2BUser } = props;\n  const {\n    state: { productQuoteEnabled = false, shoppingListEnabled = false },\n  } = useContext(GlobalContext);\n  const b3Lang = useB3Lang();\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const isShowCartAction = isB2BUser ? purchasabilityPermission : true;\n\n  const isDesktopLimit = useMediaQuery('(min-width:1775px)');\n  const [isMobile] = useMobile();\n  const ref = useRef<HTMLButtonElement | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSubTotal, setSelectedSubTotal] = useState(0.0);\n  const [openShoppingList, setOpenShoppingList] = useState(false);\n  const [isOpenCreateShopping, setIsOpenCreateShopping] = useState(false);\n  const [isShoppingListLoading, setIisShoppingListLoading] = useState(false);\n\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n\n  const navigate = useNavigate();\n\n  const containerStyle = isMobile\n    ? {\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n      }\n    : {\n        alignItems: 'center',\n      };\n\n  const handleOpenBtnList = () => {\n    if (checkedArr.length === 0) {\n      snackbar.error(b3Lang('purchasedProducts.error.selectOneItem'));\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  // Add selected to cart\n  const handleSetCartLineItems = (inventoryInfos: ProductsProps[]) => {\n    const lineItems: CustomFieldItems[] = [];\n\n    checkedArr.forEach((item: CheckedProduct) => {\n      const { node } = item;\n\n      const currentProduct: CustomFieldItems | undefined = inventoryInfos.find(\n        (inventory: CustomFieldItems) => Number(node.productId) === inventory.id,\n      );\n      if (currentProduct) {\n        const { variants }: CustomFieldItems = currentProduct;\n\n        if (variants.length > 0) {\n          const currentInventoryInfo: CustomFieldItems | undefined = variants.find(\n            (variant: CustomFieldItems) =>\n              node.variantSku === variant.sku &&\n              Number(node.variantId) === Number(variant.variant_id),\n          );\n\n          if (currentInventoryInfo) {\n            const { optionList, quantity } = node;\n\n            const options = optionList.map((option: CustomFieldItems) => ({\n              optionId: option.product_option_id,\n              optionValue: option.value,\n            }));\n\n            lineItems.push({\n              optionSelections: options,\n              allOptions: optionList,\n              productId: parseInt(currentInventoryInfo.product_id, 10) || 0,\n              quantity,\n              variantId: parseInt(currentInventoryInfo.variant_id, 10) || 0,\n            });\n          }\n        }\n      }\n    });\n\n    return lineItems;\n  };\n\n  const handleAddSelectedToCart = async () => {\n    setIsRequestLoading(true);\n    handleClose();\n    try {\n      const productIds: number[] = [];\n\n      checkedArr.forEach((item: CheckedProduct) => {\n        const { node } = item;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      if (productIds.length === 0) {\n        snackbar.error(b3Lang('purchasedProducts.footer.selectOneItemToAdd'));\n        return;\n      }\n\n      const isPassVerify = await addCartProductToVerify(checkedArr, b3Lang);\n\n      if (!isPassVerify) return;\n\n      const companyId = companyInfoId;\n\n      const getVariantInfoByProductId = isB2BUser ? searchB2BProducts : searchBcProducts;\n      const { productsSearch: getInventoryInfos } = await getVariantInfoByProductId({\n        productIds,\n        companyId,\n        customerGroupId,\n      });\n\n      const lineItems = handleSetCartLineItems(getInventoryInfos || []);\n\n      const res = await callCart(lineItems);\n\n      if (res && !res.errors) {\n        snackbar.success('', {\n          jsx: successTip({\n            message: b3Lang('purchasedProducts.footer.productsAdded'),\n            link: CART_URL,\n            linkText: b3Lang('purchasedProducts.footer.viewCart'),\n            isOutLink: true,\n            isCustomEvent: true,\n          }),\n          isClose: true,\n        });\n      } else if (res && res.errors) {\n        snackbar.error(res.errors[0].message, {\n          isClose: true,\n        });\n      } else {\n        snackbar.error('Error has occurred', {\n          isClose: true,\n        });\n      }\n    } finally {\n      b3TriggerCartNumber();\n      setIsRequestLoading(false);\n    }\n  };\n\n  // Add selected to quote\n  const getOptionsList = (options: CustomFieldItems) => {\n    if (options?.length === 0) return [];\n\n    const option = options.map(\n      ({\n        product_option_id: optionId,\n        value,\n      }: {\n        product_option_id: number | string;\n        value: string | number;\n      }) => ({\n        optionId: `attribute[${optionId}]`,\n        optionValue: value,\n      }),\n    );\n\n    return option;\n  };\n\n  const handleAddSelectedToQuote = async () => {\n    setIsRequestLoading(true);\n    handleClose();\n    try {\n      const productsWithSku = checkedArr.filter((checkedItem: CheckedProduct) => {\n        const {\n          node: { variantSku },\n        } = checkedItem;\n\n        return variantSku !== '' && variantSku !== null && variantSku !== undefined;\n      });\n\n      const noSkuProducts = checkedArr.filter((checkedItem: CheckedProduct) => {\n        const {\n          node: { variantSku },\n        } = checkedItem;\n\n        return !variantSku;\n      });\n      if (noSkuProducts.length > 0) {\n        snackbar.error(b3Lang('purchasedProducts.footer.cantAddProductsNoSku'), {\n          isClose: true,\n        });\n      }\n      if (noSkuProducts.length === checkedArr.length) return;\n\n      const productIds: number[] = [];\n      productsWithSku.forEach((product: CheckedProduct) => {\n        const { node } = product;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      const getProducts = isB2BUser ? searchB2BProducts : searchBcProducts;\n      const { productsSearch } = await getProducts({\n        productIds,\n        companyId: companyInfoId,\n        customerGroupId,\n        currencyCode,\n      });\n\n      const newProductInfo: CustomFieldItems = conversionProductsList(productsSearch);\n      let isSuccess = false;\n      let errorMessage = '';\n      let isFondVariant = true;\n\n      const newProducts: CustomFieldItems[] = [];\n      productsWithSku.forEach((product: CheckedProduct) => {\n        const {\n          node: {\n            basePrice,\n            optionList,\n            variantSku,\n            productId,\n            productName,\n            quantity,\n            variantId,\n            tax,\n          },\n        } = product;\n\n        const optionsList = getOptionsList(optionList);\n\n        const currentProductSearch = newProductInfo.find(\n          (product: CustomFieldItems) => Number(product.id) === Number(productId),\n        );\n\n        const variantItem = currentProductSearch?.variants.find(\n          (item: CustomFieldItems) => item.sku === variantSku,\n        );\n\n        if (!variantItem) {\n          errorMessage = b3Lang('purchasedProducts.footer.notFoundSku', {\n            sku: variantSku as string,\n          });\n          isFondVariant = false;\n        }\n\n        const quoteListitem = {\n          node: {\n            id: uuid(),\n            variantSku: variantItem?.sku || variantSku,\n            variantId,\n            productsSearch: currentProductSearch,\n            primaryImage: variantItem?.image_url || PRODUCT_DEFAULT_IMAGE,\n            productName,\n            quantity: Number(quantity) || 1,\n            optionList: JSON.stringify(optionsList),\n            productId,\n            basePrice,\n            tax,\n          },\n        };\n\n        newProducts.push(quoteListitem);\n\n        isSuccess = true;\n      });\n\n      isSuccess = validProductQty(newProducts);\n\n      if (!isFondVariant) {\n        snackbar.error('', {\n          jsx: successTip({\n            message: errorMessage,\n            link: '',\n            linkText: '',\n            isOutLink: false,\n          }),\n          isClose: true,\n        });\n\n        return;\n      }\n\n      if (isSuccess) {\n        await calculateProductListPrice(newProducts, '2');\n        addQuoteDraftProducts(newProducts);\n        snackbar.success('', {\n          jsx: successTip({\n            message: b3Lang('purchasedProducts.footer.productsAddedToQuote'),\n            link: '/quoteDraft',\n            linkText: b3Lang('purchasedProducts.footer.viewQuote'),\n            isOutLink: false,\n          }),\n          isClose: true,\n        });\n      } else {\n        snackbar.error('', {\n          jsx: successTip({\n            message: b3Lang('purchasedProducts.footer.productsLimit'),\n            link: '/quoteDraft',\n            linkText: b3Lang('purchasedProducts.footer.viewQuote'),\n            isOutLink: false,\n          }),\n          isClose: true,\n        });\n      }\n    } catch (e) {\n      b2bLogger.error(e);\n    } finally {\n      setIsRequestLoading(false);\n    }\n  };\n\n  // Add selected to shopping list\n  const gotoShoppingDetail = (id: string | number) => {\n    navigate(`/shoppingList/${id}`);\n  };\n\n  const tip = (id: string | number) => (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          mr: '15px',\n        }}\n      >\n        {b3Lang('purchasedProducts.footer.productsAddedToShoppingList')}\n      </Box>\n      <Button\n        onClick={() => gotoShoppingDetail(id)}\n        variant=\"text\"\n        sx={{\n          color: '#ffffff',\n          padding: 0,\n        }}\n      >\n        view shopping list\n      </Button>\n    </Box>\n  );\n\n  const handleShoppingClose = (isTrue?: boolean) => {\n    if (isTrue) {\n      setOpenShoppingList(false);\n      setIsOpenCreateShopping(false);\n    } else {\n      setOpenShoppingList(false);\n      setIsOpenCreateShopping(false);\n    }\n  };\n\n  const handleOpenCreateDialog = () => {\n    setOpenShoppingList(false);\n    setIsOpenCreateShopping(true);\n  };\n\n  const handleCloseShoppingClick = () => {\n    setIsOpenCreateShopping(false);\n    setOpenShoppingList(true);\n  };\n\n  const handleCreateShoppingClick = () => {\n    handleClose();\n    handleCloseShoppingClick();\n    setOpenShoppingList(true);\n  };\n\n  const handleAddSelectedToShoppingList = async (shoppingListId: string | number) => {\n    setIisShoppingListLoading(true);\n    try {\n      const productIds: number[] = [];\n      checkedArr.forEach((product: CheckedProduct) => {\n        const { node } = product;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      const items: CustomFieldItems = [];\n\n      checkedArr.forEach((product: CheckedProduct) => {\n        const {\n          node: { optionList, productId, quantity, variantId, productsSearch },\n        } = product;\n\n        const optionsList = getOptionsList(optionList);\n\n        const newOptionLists = getValidOptionsList(optionsList, productsSearch);\n        items.push({\n          productId: Number(productId),\n          variantId: Number(variantId),\n          quantity: Number(quantity),\n          optionList: newOptionLists,\n        });\n      });\n\n      const addToShoppingList = isB2BUser ? addProductToShoppingList : addProductToBcShoppingList;\n      await addToShoppingList({\n        shoppingListId: Number(shoppingListId),\n        items,\n      });\n\n      snackbar.success(b3Lang('purchasedProducts.footer.productsAddedToShoppingList'), {\n        jsx: () => tip(shoppingListId),\n        isClose: true,\n      });\n      handleShoppingClose(true);\n    } catch (err) {\n      b2bLogger.error(err);\n    } finally {\n      setIisShoppingListLoading(false);\n    }\n  };\n\n  const buttonList = [\n    {\n      name: b3Lang('purchasedProducts.footer.addToCart'),\n      key: 'add-selected-to-cart',\n      handleClick: handleAddSelectedToCart,\n      isDisabled: !isShowCartAction,\n    },\n    {\n      name: b3Lang('purchasedProducts.footer.addToQuote'),\n      key: 'add-selected-to-quote',\n      handleClick: handleAddSelectedToQuote,\n      isDisabled: !productQuoteEnabled,\n    },\n    {\n      name: b3Lang('purchasedProducts.footer.addSelectedProductsToShoppingList'),\n      key: 'add-selected-to-shoppingList',\n      handleClick: handleCreateShoppingClick,\n      isDisabled: !shoppingListEnabled,\n    },\n  ];\n\n  useEffect(() => {\n    if (checkedArr.length > 0) {\n      let total = 0.0;\n\n      checkedArr.forEach((item: CheckedProduct) => {\n        const {\n          node: {\n            variantId,\n            productsSearch: { variants },\n            quantity,\n            basePrice,\n          },\n        } = item;\n\n        if (variants?.length) {\n          const priceIncTax =\n            getProductPriceIncTaxOrExTaxBySetting(variants, Number(variantId)) ||\n            Number(basePrice || 0);\n          total += priceIncTax * Number(quantity);\n        } else {\n          total += Number(basePrice || 0) * Number(quantity);\n        }\n      });\n\n      setSelectedSubTotal((1000 * total) / 1000);\n    } else {\n      setSelectedSubTotal(0.0);\n    }\n  }, [checkedArr]);\n\n  let gridBarStyles: SxProps = {\n    display: isMobile ? 'initial' : 'flex',\n    flexBasis: '100%',\n  };\n\n  if (isDesktopLimit) {\n    gridBarStyles = {\n      display: 'flex',\n      flexGrow: 1,\n      maxWidth: 1775,\n      margin: 'auto',\n    };\n  }\n\n  return (\n    <>\n      {isShowCartAction || productQuoteEnabled || shoppingListEnabled ? (\n        <Grid\n          sx={{\n            position: 'fixed',\n            bottom: isMobile && isAgenting ? '52px' : 0,\n            left: 0,\n            backgroundColor: '#fff',\n            width: '100%',\n            padding: isMobile ? '0 0 1rem 0' : '16px 0 16px',\n            height: isMobile ? '8rem' : 'auto',\n            marginLeft: 0,\n            display: 'flex',\n            flexWrap: 'nowrap',\n            zIndex: '1000',\n          }}\n          container\n          spacing={2}\n        >\n          <Grid item={isMobile} sx={gridBarStyles}>\n            <Box\n              sx={{\n                width: 263,\n                display: isMobile ? 'none' : 'block',\n              }}\n            />\n            <Box\n              sx={{\n                flex: 1,\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: isMobile ? 0 : '50px',\n                paddingRight: isMobile ? 0 : '80px',\n              }}\n            >\n              <Box\n                sx={{\n                  width: isMobile ? '100%' : 'calc(66.6667% + 32px)',\n                  display: 'flex',\n                  zIndex: '999',\n                  justifyContent: 'space-between',\n                  ...containerStyle,\n                }}\n              >\n                <Typography\n                  sx={{\n                    color: '#000000',\n                    fontSize: '16px',\n                    fontWeight: '400',\n                  }}\n                >\n                  {b3Lang('purchasedProducts.footer.selectedProducts', {\n                    quantity: checkedArr.length,\n                  })}\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexWrap: isMobile ? 'wrap' : 'nowrap',\n                    width: isMobile ? '100%' : 'auto',\n                  }}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    sx={{\n                      fontSize: '16px',\n                      fontWeight: '700',\n                      color: '#000000',\n                    }}\n                  >\n                    {b3Lang('purchasedProducts.footer.subtotal', {\n                      subtotal: currencyFormat(selectedSubTotal),\n                    })}\n                  </Typography>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      marginTop: isMobile ? '0.5rem' : 0,\n                      marginLeft: isMobile ? 0 : '20px',\n                      width: isMobile ? '100%' : 'auto',\n                    }}\n                  >\n                    <CustomButton\n                      variant=\"contained\"\n                      ref={ref}\n                      onClick={handleOpenBtnList}\n                      sx={{\n                        marginRight: isMobile ? '1rem' : 0,\n                        width: isMobile ? '100%' : 'auto',\n                      }}\n                      endIcon={<ArrowDropDown />}\n                    >\n                      {b3Lang('purchasedProducts.footer.addSelectedTo')}\n                    </CustomButton>\n\n                    <Menu\n                      id=\"basic-menu\"\n                      anchorEl={ref.current}\n                      open={isOpen}\n                      onClose={handleClose}\n                      MenuListProps={{\n                        'aria-labelledby': 'basic-button',\n                      }}\n                    >\n                      {buttonList.length > 0 &&\n                        buttonList.map((button) => {\n                          if (button.isDisabled) return null;\n\n                          return (\n                            <MenuItem\n                              key={button.key}\n                              onClick={() => {\n                                button.handleClick();\n                              }}\n                            >\n                              {button.name}\n                            </MenuItem>\n                          );\n                        })}\n                    </Menu>\n                  </Box>\n                </Box>\n              </Box>\n              <Box\n                sx={{\n                  width: '33.3333%',\n                  display: !isMobile ? 'block' : 'none',\n                }}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      ) : null}\n\n      <OrderShoppingList\n        isOpen={openShoppingList}\n        dialogTitle={b3Lang('purchasedProducts.footer.addToShoppingList')}\n        onClose={handleShoppingClose}\n        onConfirm={handleAddSelectedToShoppingList}\n        onCreate={handleOpenCreateDialog}\n        isLoading={isShoppingListLoading}\n        setLoading={setIisShoppingListLoading}\n      />\n\n      <CreateShoppingList\n        open={isOpenCreateShopping}\n        onChange={handleCreateShoppingClick}\n        onClose={handleCloseShoppingClick}\n      />\n    </>\n  );\n}\n\nexport default QuickOrderFooter;\n","import { KeyboardEventHandler, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, Grid, Typography } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { LineItems } from '@/utils/b3Product/b3Product';\nimport { getQuickAddRowFields } from '@/utils/b3Product/shared/config';\n\nimport { getB2BVariantInfoBySkus, getBcVariantInfoBySkus } from '../../../shared/service/b2b';\nimport { ShoppingListAddProductOption, SimpleObject } from '../../../types';\nimport { getCartProductInfo } from '../utils';\n\ninterface AddToListContentProps {\n  updateList?: () => void;\n  quickAddToList: (products: CustomFieldItems[]) => CustomFieldItems;\n  level?: number;\n  buttonText?: string;\n}\n\nexport default function QuickAdd(props: AddToListContentProps) {\n  const b3Lang = useB3Lang();\n  const {\n    updateList = () => {},\n    quickAddToList,\n    level = 3,\n    buttonText = b3Lang('purchasedProducts.quickAdd.addProductToList'),\n  } = props;\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const [rows, setRows] = useState(level);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loopRows = (rows: number, fn: (index: number) => void) => {\n    new Array(rows).fill(1).forEach((_, index) => fn(index));\n  };\n\n  useEffect(() => {\n    let formFields: CustomFieldItems[] = [];\n    loopRows(rows, (index) => {\n      formFields = [...formFields, ...getQuickAddRowFields(index, b3Lang)];\n    });\n    setFormFields(formFields);\n    // disabling since b3Lang since it has rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rows]);\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleAddRowsClick = () => {\n    setRows(rows + level);\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setError,\n    setValue,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const validateSkuInput = (index: number, sku: string, qty: string) => {\n    if (!sku && !qty) {\n      return true;\n    }\n\n    let isValid = true;\n    const quantity = parseInt(qty, 10) || 0;\n\n    if (!sku) {\n      setError(`sku-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.sku'),\n        }),\n      });\n      isValid = false;\n    }\n\n    if (!qty) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.qty'),\n        }),\n      });\n      isValid = false;\n    } else if (quantity <= 0) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: 'incorrect number',\n      });\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const getProductData = (value: CustomFieldItems) => {\n    const skuValue: SimpleObject = {};\n    let isValid = true;\n    loopRows(rows, (index) => {\n      const sku = value[`sku-${index}`];\n      const qty = value[`qty-${index}`];\n\n      isValid = validateSkuInput(index, sku, qty) === false ? false : isValid;\n\n      if (isValid && sku) {\n        const quantity = parseInt(qty, 10) || 0;\n        skuValue[sku] = skuValue[sku] ? (skuValue[sku] as number) + quantity : quantity;\n      }\n    });\n\n    return {\n      skuValue,\n      isValid,\n      skus: Object.keys(skuValue),\n    };\n  };\n\n  const getProductItems = async (\n    variantInfoList: CustomFieldItems,\n    skuValue: SimpleObject,\n    skus: string[],\n  ) => {\n    const notFoundSku: string[] = [];\n    const notPurchaseSku: string[] = [];\n    const productItems: CustomFieldItems[] = [];\n    const passSku: string[] = [];\n    const notStockSku: {\n      sku: string;\n      stock: number;\n    }[] = [];\n    const orderLimitSku: {\n      sku: string;\n      min: number;\n      max: number;\n    }[] = [];\n\n    const cartProducts = await getCartProductInfo();\n\n    skus.forEach((sku) => {\n      const variantInfo: CustomFieldItems | null = (variantInfoList || []).find(\n        (variant: CustomFieldItems) => variant.variantSku.toUpperCase() === sku.toUpperCase(),\n      );\n\n      if (!variantInfo) {\n        notFoundSku.push(sku);\n        return;\n      }\n\n      const {\n        productId,\n        variantId,\n        option: options,\n        purchasingDisabled = '1',\n        stock,\n        isStock,\n        maxQuantity,\n        minQuantity,\n        variantSku,\n      } = variantInfo;\n\n      const num =\n        cartProducts.find(\n          (item: LineItems) =>\n            item.sku === variantSku &&\n            Number(item?.variantEntityId || 0) === Number(variantId || 0),\n        )?.quantity || 0;\n\n      const quantity = (skuValue[sku] as number) || 0;\n\n      const allQuantity = (skuValue[sku] as number) + num || 0;\n\n      if (purchasingDisabled === '1') {\n        notPurchaseSku.push(sku);\n        return;\n      }\n\n      if (isStock === '1' && quantity > Number(stock)) {\n        notStockSku.push({\n          sku,\n          stock: Number(stock),\n        });\n\n        return;\n      }\n\n      if (\n        maxQuantity !== 0 &&\n        minQuantity !== 0 &&\n        allQuantity > 0 &&\n        (allQuantity > maxQuantity || allQuantity < minQuantity)\n      ) {\n        orderLimitSku.push({\n          sku,\n          min: allQuantity < minQuantity ? minQuantity : 0,\n          max: allQuantity > maxQuantity ? maxQuantity : 0,\n        });\n\n        return;\n      }\n\n      const optionList = (options || []).reduce(\n        (arr: ShoppingListAddProductOption[], optionStr: string) => {\n          try {\n            const option = typeof optionStr === 'string' ? JSON.parse(optionStr) : optionStr;\n            arr.push({\n              optionId: `attribute[${option.option_id}]`,\n              optionValue: `${option.id}`,\n            });\n            return arr;\n          } catch (error) {\n            return arr;\n          }\n        },\n        [],\n      );\n\n      passSku.push(sku);\n\n      productItems.push({\n        ...variantInfo,\n        newSelectOptionList: optionList,\n        productId: parseInt(productId, 10) || 0,\n        quantity,\n        variantId: parseInt(variantId, 10) || 0,\n      });\n    });\n\n    return {\n      notFoundSku,\n      notPurchaseSku,\n      notStockSku,\n      productItems,\n      passSku,\n      orderLimitSku,\n    };\n  };\n\n  const showErrors = (\n    value: CustomFieldItems,\n    skus: string[],\n    inputType: 'sku' | 'qty',\n    message: string,\n  ) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setError(skuFieldName.replace('sku', inputType), {\n          type: 'manual',\n          message,\n        });\n      }\n    });\n  };\n\n  const clearInputValue = (value: CustomFieldItems, skus: string[]) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setValue(skuFieldName, '');\n        setValue(skuFieldName.replace('sku', 'qty'), '');\n      }\n    });\n  };\n\n  const getVariantList = async (skus: string[]) => {\n    const getVariantInfoBySku = isB2BUser ? getB2BVariantInfoBySkus : getBcVariantInfoBySkus;\n    try {\n      const { variantSku: variantInfoList } = await getVariantInfoBySku(\n        {\n          skus,\n        },\n        true,\n      );\n\n      return variantInfoList;\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const handleAddToList = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(\n        'Your business account is pending approval. This feature is currently disabled.',\n      );\n      return;\n    }\n\n    handleSubmit(async (value) => {\n      try {\n        setIsLoading(true);\n        const { skuValue, isValid, skus } = getProductData(value);\n\n        if (!isValid || skus.length <= 0) {\n          return;\n        }\n\n        const variantInfoList = await getVariantList(skus);\n\n        const { notFoundSku, notPurchaseSku, productItems, passSku, notStockSku, orderLimitSku } =\n          await getProductItems(variantInfoList, skuValue, skus);\n\n        if (notFoundSku.length > 0) {\n          showErrors(value, notFoundSku, 'sku', '');\n          snackbar.error(\n            b3Lang('purchasedProducts.quickAdd.notFoundSku', {\n              notFoundSku: notFoundSku.join(','),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (notPurchaseSku.length > 0) {\n          showErrors(value, notPurchaseSku, 'sku', '');\n          snackbar.error(\n            b3Lang('purchasedProducts.quickAdd.notPurchaseableSku', {\n              notPurchaseSku: notPurchaseSku.join(','),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (notStockSku.length > 0) {\n          const stockSku = notStockSku.map((item) => item.sku);\n\n          notStockSku.forEach((item) => {\n            const { sku, stock } = item;\n\n            showErrors(value, [sku], 'qty', `${stock} in stock`);\n          });\n\n          snackbar.error(\n            b3Lang('purchasedProducts.quickAdd.insufficientStockSku', {\n              stockSku: stockSku.join(','),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (orderLimitSku.length > 0) {\n          orderLimitSku.forEach((item) => {\n            const { min, max, sku } = item;\n\n            const type = min === 0 ? 'Max' : 'Min';\n            const limit = min === 0 ? max : min;\n            showErrors(value, [sku], 'qty', `${type} is ${limit}`);\n\n            const typeText = min === 0 ? 'maximum' : 'minimum';\n            snackbar.error(\n              b3Lang('purchasedProducts.quickAdd.purchaseQuantityLimitMessage', {\n                typeText,\n                limit,\n                sku,\n              }),\n              {\n                isClose: true,\n              },\n            );\n          });\n        }\n\n        if (productItems.length > 0) {\n          await quickAddToList(productItems);\n          clearInputValue(value, passSku);\n\n          updateList();\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLDivElement> = (e) => {\n    if (e.key === 'Enter') {\n      handleAddToList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isLoading} spinningHeight=\"auto\">\n      <Box sx={{ width: '100%' }}>\n        <Grid\n          container\n          sx={{\n            margin: '16px 0',\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              flex: 1,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              sx={{\n                color: '#000',\n              }}\n              variant=\"body1\"\n            >\n              {b3Lang('purchasedProducts.quickAdd.title')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <CustomButton\n              variant=\"text\"\n              sx={{\n                textTransform: 'initial',\n                ml: '-8px',\n              }}\n              onClick={handleAddRowsClick}\n            >\n              {b3Lang('purchasedProducts.quickAdd.showMoreRowsButton')}\n            </CustomButton>\n          </Grid>\n        </Grid>\n\n        <Box\n          onKeyDown={handleKeyDown}\n          sx={{\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <B3CustomForm\n            formFields={formFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n\n        <CustomButton\n          variant=\"outlined\"\n          fullWidth\n          disabled={isLoading}\n          onClick={handleAddToList}\n          sx={{\n            margin: '20px 0',\n          }}\n        >\n          <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n            <Box\n              sx={{\n                flex: 1,\n                textAlign: 'center',\n              }}\n            >\n              {buttonText}\n            </Box>\n          </B3Spin>\n        </CustomButton>\n      </Box>\n    </B3Spin>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport { Box, Card, CardContent, Divider, Link, Typography } from '@mui/material';\n\nimport { B3Upload, successTip } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { CART_URL } from '@/constants';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport useMobile from '@/hooks/useMobile';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\nimport { callCart } from '@/utils/cartUtils';\n\nimport SearchProduct from '../../ShoppingListDetails/components/SearchProduct';\nimport { addCartProductToVerify } from '../utils';\n\nimport QuickAdd from './QuickAdd';\n\ninterface QuickOrderPadProps {\n  isB2BUser: boolean;\n}\n\nexport default function QuickOrderPad(props: QuickOrderPadProps) {\n  const { isB2BUser } = props;\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const [isOpenBulkLoadCSV, setIsOpenBulkLoadCSV] = useState(false);\n  const [productData, setProductData] = useState<CustomFieldItems>([]);\n  const [addBtnText, setAddBtnText] = useState<string>('Add to cart');\n  const [isLoading, setIsLoading] = useState(false);\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n\n  const getSnackbarMessage = (res: any) => {\n    if (res && !res.errors) {\n      snackbar.success('', {\n        jsx: successTip({\n          message: b3Lang('purchasedProducts.quickOrderPad.productsAdded'),\n          link: CART_URL,\n          linkText: b3Lang('purchasedProducts.quickOrderPad.viewCart'),\n          isOutLink: true,\n          isCustomEvent: true,\n        }),\n        isClose: true,\n      });\n    } else {\n      snackbar.error('Error has occurred', {\n        isClose: true,\n      });\n    }\n  };\n\n  const quickAddToList = async (products: CustomFieldItems[]) => {\n    const res = await callCart(products);\n\n    if (res && res.errors) {\n      snackbar.error(res.errors[0].message, {\n        isClose: true,\n      });\n    } else {\n      snackbar.success('', {\n        jsx: successTip({\n          message: b3Lang('purchasedProducts.quickOrderPad.productsAdded'),\n          link: CART_URL,\n          linkText: b3Lang('purchasedProducts.quickOrderPad.viewCart'),\n          isOutLink: true,\n          isCustomEvent: true,\n        }),\n        isClose: true,\n      });\n    }\n\n    b3TriggerCartNumber();\n\n    return res;\n  };\n\n  const limitProductTips = (data: CustomFieldItems) => (\n    <>\n      <p\n        style={{\n          margin: 0,\n        }}\n      >\n        {b3Lang('purchasedProducts.quickOrderPad.notEnoughStock', {\n          variantSku: data.variantSku,\n        })}\n      </p>\n      <p\n        style={{\n          margin: 0,\n        }}\n      >\n        {b3Lang('purchasedProducts.quickOrderPad.availableAmount', {\n          availableAmount: data.AvailableAmount,\n        })}\n      </p>\n    </>\n  );\n\n  const outOfStockProductTips = (outOfStock: string[], fileErrorsCSV: string) => (\n    <>\n      <p\n        style={{\n          margin: 0,\n        }}\n      >\n        {b3Lang('purchasedProducts.quickOrderPad.outOfStockSku', {\n          outOfStock: outOfStock.join(','),\n        })}\n      </p>\n      <Link\n        href={fileErrorsCSV}\n        sx={{\n          color: '#FFFFFF',\n        }}\n      >\n        {b3Lang('purchasedProducts.quickOrderPad.downloadErrorsCSV')}\n      </Link>\n    </>\n  );\n\n  const getValidProducts = (products: CustomFieldItems) => {\n    const notPurchaseSku: string[] = [];\n    const productItems: CustomFieldItems[] = [];\n    const limitProduct: CustomFieldItems[] = [];\n    const minLimitQuantity: CustomFieldItems[] = [];\n    const maxLimitQuantity: CustomFieldItems[] = [];\n    const outOfStock: string[] = [];\n\n    products.forEach((item: CustomFieldItems) => {\n      const { products: currentProduct, qty } = item;\n      const {\n        option,\n        isStock,\n        stock,\n        purchasingDisabled,\n        maxQuantity,\n        minQuantity,\n        variantSku,\n        variantId,\n        productId,\n        modifiers,\n      } = currentProduct;\n      if (purchasingDisabled === '1' || purchasingDisabled) {\n        notPurchaseSku.push(variantSku);\n        return;\n      }\n\n      if (isStock === '1' && stock === 0) {\n        outOfStock.push(variantSku);\n        return;\n      }\n\n      if (isStock === '1' && stock > 0 && stock < Number(qty)) {\n        limitProduct.push({\n          variantSku,\n          AvailableAmount: stock,\n        });\n        return;\n      }\n\n      if (Number(minQuantity) > 0 && Number(qty) < Number(minQuantity)) {\n        minLimitQuantity.push({\n          variantSku,\n          minQuantity,\n        });\n\n        return;\n      }\n\n      if (Number(maxQuantity) > 0 && Number(qty) > Number(maxQuantity)) {\n        maxLimitQuantity.push({\n          variantSku,\n          maxQuantity,\n        });\n\n        return;\n      }\n\n      const optionsList = option.map((item: CustomFieldItems) => ({\n        optionId: item.option_id,\n        optionValue: item.id,\n      }));\n\n      productItems.push({\n        productId: parseInt(productId, 10) || 0,\n        variantId: parseInt(variantId, 10) || 0,\n        quantity: Number(qty),\n        optionSelections: optionsList,\n        allOptions: modifiers,\n      });\n    });\n\n    return {\n      notPurchaseSku,\n      productItems,\n      limitProduct,\n      minLimitQuantity,\n      maxLimitQuantity,\n      outOfStock,\n    };\n  };\n\n  const handleAddToCart = async (productsData: CustomFieldItems) => {\n    setIsLoading(true);\n    try {\n      const { stockErrorFile, validProduct } = productsData;\n\n      const {\n        notPurchaseSku,\n        productItems,\n        limitProduct,\n        minLimitQuantity,\n        maxLimitQuantity,\n        outOfStock,\n      } = getValidProducts(validProduct);\n\n      if (productItems.length > 0) {\n        const res = await callCart(productItems);\n\n        getSnackbarMessage(res);\n        b3TriggerCartNumber();\n      }\n\n      if (limitProduct.length > 0) {\n        limitProduct.forEach((data: CustomFieldItems) => {\n          snackbar.warning('', {\n            jsx: () => limitProductTips(data),\n          });\n        });\n      }\n\n      if (notPurchaseSku.length > 0) {\n        snackbar.error(\n          b3Lang('purchasedProducts.quickOrderPad.notPurchaseableSku', {\n            notPurchaseSku: notPurchaseSku.join(','),\n          }),\n          {\n            isClose: true,\n          },\n        );\n      }\n\n      if (outOfStock.length > 0 && stockErrorFile) {\n        snackbar.error('', {\n          jsx: () => outOfStockProductTips(outOfStock, stockErrorFile),\n          isClose: true,\n        });\n      }\n\n      if (minLimitQuantity.length > 0) {\n        minLimitQuantity.forEach((data: CustomFieldItems) => {\n          snackbar.error(\n            b3Lang('purchasedProducts.quickOrderPad.minQuantityMessage', {\n              minQuantity: data.minQuantity,\n              sku: data.variantSku,\n            }),\n            {\n              isClose: true,\n            },\n          );\n        });\n      }\n\n      if (maxLimitQuantity.length > 0) {\n        maxLimitQuantity.forEach((data: CustomFieldItems) => {\n          snackbar.error(\n            b3Lang('purchasedProducts.quickOrderPad.maxQuantityMessage', {\n              maxQuantity: data.maxQuantity,\n              sku: data.variantSku,\n            }),\n            {\n              isClose: true,\n            },\n          );\n        });\n      }\n\n      setIsOpenBulkLoadCSV(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuickSearchAddCart = async (productData: CustomFieldItems[]) => {\n    const currentProducts = productData.map((item) => {\n      return {\n        node: {\n          ...item,\n          productsSearch: item,\n        },\n      };\n    });\n    const isPassVerify = await addCartProductToVerify(\n      currentProducts as CustomFieldItems[],\n      b3Lang,\n    );\n    try {\n      if (isPassVerify) {\n        await quickAddToList(productData);\n      }\n    } catch (error) {\n      b2bLogger.error(error);\n    }\n\n    return productData;\n  };\n\n  const handleOpenUploadDiag = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('purchasedProducts.quickOrderPad.addNProductsToCart'));\n    } else {\n      setIsOpenBulkLoadCSV(true);\n    }\n  };\n\n  useEffect(() => {\n    if (productData?.length > 0) {\n      setAddBtnText(\n        b3Lang('purchasedProducts.quickOrderPad.addNProductsToCart', {\n          quantity: productData.length,\n        }),\n      );\n    }\n    // disabling this rule as b3Lang has rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productData]);\n\n  return (\n    <Card\n      sx={{\n        marginBottom: isMobile ? '8.5rem' : '50px',\n      }}\n    >\n      <CardContent>\n        <Box>\n          <Typography\n            variant=\"h5\"\n            sx={{\n              marginBottom: '1rem',\n            }}\n          >\n            {b3Lang('purchasedProducts.quickOrderPad.quickOrderPad')}\n          </Typography>\n\n          <SearchProduct\n            addToList={handleQuickSearchAddCart}\n            searchDialogTitle={b3Lang('purchasedProducts.quickOrderPad.quickOrderPad')}\n            type=\"quickOrder\"\n            addButtonText={b3Lang('purchasedProducts.quickOrderPad.addToCart')}\n            isB2BUser={isB2BUser}\n          />\n\n          <Divider />\n\n          <QuickAdd\n            quickAddToList={quickAddToList}\n            buttonText={b3Lang('purchasedProducts.quickOrderPad.addProductsToCart')}\n          />\n\n          <Divider />\n\n          <Box\n            sx={{\n              margin: '20px 0 0',\n            }}\n          >\n            <CustomButton variant=\"text\" onClick={() => handleOpenUploadDiag()}>\n              <UploadFileIcon\n                sx={{\n                  marginRight: '8px',\n                }}\n              />\n              {b3Lang('purchasedProducts.quickOrderPad.bulkUploadCSV')}\n            </CustomButton>\n          </Box>\n        </Box>\n      </CardContent>\n\n      <B3Upload\n        isOpen={isOpenBulkLoadCSV}\n        setIsOpen={setIsOpenBulkLoadCSV}\n        handleAddToList={handleAddToCart}\n        setProductData={setProductData}\n        addBtnText={addBtnText}\n        isLoading={isLoading}\n        isToCart\n      />\n    </Card>\n  );\n}\n","import { useState } from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\n\nimport QuickOrderTable from './components/QuickOrderB2BTable';\nimport QuickOrderFooter from './components/QuickOrderFooter';\nimport QuickOrderPad from './components/QuickOrderPad';\nimport { CheckedProduct } from './utils';\n\nfunction QuickOrder() {\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n\n  const [isMobile] = useMobile();\n\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n  const [checkedArr, setCheckedArr] = useState<CheckedProduct[]>([]);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const isShowQuickOrderPad = isB2BUser ? purchasabilityPermission : true;\n\n  return (\n    <Box\n      sx={{\n        width: '100%',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <Grid\n          sx={{\n            m: 0,\n            width: '100%',\n          }}\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={isMobile ? 12 : 8}\n            sx={{\n              backgroundColor: '#ffffff',\n              boxShadow:\n                '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n              borderRadius: '4px',\n              pr: '16px',\n            }}\n          >\n            <QuickOrderTable\n              setCheckedArr={setCheckedArr}\n              setIsRequestLoading={setIsRequestLoading}\n              isRequestLoading={isRequestLoading}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={isMobile ? 12 : 4}\n            sx={{\n              pt: !isMobile ? '0px !important' : '16px',\n              pl: isMobile ? '0px !important' : '16px',\n            }}\n          >\n            {isShowQuickOrderPad && <QuickOrderPad isB2BUser={isB2BUser} />}\n          </Grid>\n        </Grid>\n      </Box>\n      <Box\n        sx={{\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          width: '100%',\n          zIndex: '999',\n        }}\n      >\n        <QuickOrderFooter\n          checkedArr={checkedArr}\n          isAgenting={isAgenting}\n          setIsRequestLoading={setIsRequestLoading}\n          isB2BUser={isB2BUser}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default QuickOrder;\n"],"names":["getProductPriceIncTaxOrExTaxBySetting","variants","variantId","variantSku","showInclusiveTaxPrice","store","currentVariantInfo","item","isEmpty","bcCalculatedPrice","orderedProducts","data","getOrderedProducts","B3Request","getBcOrderedProducts","StyledImage","styled","QuickOrderCard","props","shoppingDetail","checkBox","handleUpdateProductQty","b3Lang","useB3Lang","quantity","imageUrl","productName","optionList","basePrice","lastOrderedAt","productsSearch","price","currentVariants","currentImage","b2bGetVariantImageByVariantInfo","jsx","Box","jsxs","CardContent","PRODUCT_DEFAULT_IMAGE","Typography","option","currencyFormat","TextField","e","displayFormat","StyleQuickOrderTable","StyledTextField","defaultSortKey","sortKeys","QuickOrderTable","setIsRequestLoading","setCheckedArr","isRequestLoading","paginationTableRef","useRef","isB2BUser","useAppSelector","isB2BUserSelector","companyInfoId","company","customerGroupId","search","setSearch","useState","distanceDay","handleSetOrderBy","order","orderBy","useSort","total","setTotalCount","isMobile","useMobile","currencyCode","activeCurrencyInfoSelector","handleGetProductsById","listProducts","productIds","node","getProducts","searchB2BProducts","searchBcProducts","newProductsSearch","conversionProductsList","productInfo","productId","err","snackbar","getList","params","edges","totalCount","handleSearchProduct","q","getSelectCheckbox","selectCheckbox","productList","_a","checkedItems","pre","newItems","product","handlePickerChange","key","value","handleFilterChange","id","listItems","listCacheItems","_b","newListItems","newListCacheItems","_c","_d","showPrice","row","isPriceHidden","getDisplayPrice","handleSetCheckedQty","cacheProductList","qty","currentProduct","columnItems","priceIncTax","B3Spin","B3FilterSearch","B3FilterMore","B3FilterPicker","B3PaginationTable","_","handleVerifyProduct","products","inventoryLevel","inventoryTracking","orderQuantityMaximum","orderQuantityMinimum","sku","isEnableProduct","isStock","purchasingDisabled","stock","productSku","currentVariant","variant","getCartProductInfo","cart","getCart","lineItems","cru","addCartProductToVerify","checkedArr","b3lang","cartProducts","checkItem","num","QuickOrderFooter","isAgenting","productQuoteEnabled","shoppingListEnabled","useContext","GlobalContext","state","purchasabilityPermission","rolePermissionSelector","isShowCartAction","isDesktopLimit","useMediaQuery","ref","isOpen","setIsOpen","selectedSubTotal","setSelectedSubTotal","openShoppingList","setOpenShoppingList","isOpenCreateShopping","setIsOpenCreateShopping","isShoppingListLoading","setIisShoppingListLoading","navigate","useNavigate","containerStyle","handleOpenBtnList","handleClose","handleSetCartLineItems","inventoryInfos","inventory","currentInventoryInfo","options","handleAddSelectedToCart","companyId","getVariantInfoByProductId","getInventoryInfos","res","callCart","successTip","CART_URL","b3TriggerCartNumber","getOptionsList","optionId","handleAddSelectedToQuote","productsWithSku","checkedItem","noSkuProducts","newProductInfo","isSuccess","errorMessage","isFondVariant","newProducts","tax","optionsList","currentProductSearch","variantItem","quoteListitem","uuid","validProductQty","calculateProductListPrice","addQuoteDraftProducts","b2bLogger","gotoShoppingDetail","tip","Button","handleShoppingClose","isTrue","handleOpenCreateDialog","handleCloseShoppingClick","handleCreateShoppingClick","handleAddSelectedToShoppingList","shoppingListId","items","newOptionLists","getValidOptionsList","addProductToShoppingList","addProductToBcShoppingList","buttonList","useEffect","gridBarStyles","Fragment","Grid","CustomButton","ArrowDropDown","Menu","button","MenuItem","OrderShoppingList","CreateShoppingList","QuickAdd","updateList","quickAddToList","level","buttonText","companyStatus","rows","setRows","formFields","setFormFields","isLoading","setIsLoading","loopRows","fn","index","getQuickAddRowFields","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","handleAddRowsClick","control","handleSubmit","getValues","errors","setError","setValue","useForm","validateSkuInput","isValid","getProductData","skuValue","getProductItems","variantInfoList","skus","notFoundSku","notPurchaseSku","productItems","passSku","notStockSku","orderLimitSku","variantInfo","maxQuantity","minQuantity","allQuantity","arr","optionStr","error","showErrors","inputType","message","skuFieldName","name","clearInputValue","getVariantList","getVariantInfoBySku","getB2BVariantInfoBySkus","getBcVariantInfoBySkus","handleAddToList","stockSku","min","max","type","limit","typeText","handleKeyDown","B3CustomForm","QuickOrderPad","isOpenBulkLoadCSV","setIsOpenBulkLoadCSV","productData","setProductData","addBtnText","setAddBtnText","getSnackbarMessage","limitProductTips","outOfStockProductTips","outOfStock","fileErrorsCSV","Link","getValidProducts","limitProduct","minLimitQuantity","maxLimitQuantity","modifiers","handleAddToCart","productsData","stockErrorFile","validProduct","handleQuickSearchAddCart","currentProducts","isPassVerify","handleOpenUploadDiag","Card","SearchProduct","Divider","UploadFileIcon","B3Upload","QuickOrder","b2bFeatures","isShowQuickOrderPad"],"mappings":"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"}