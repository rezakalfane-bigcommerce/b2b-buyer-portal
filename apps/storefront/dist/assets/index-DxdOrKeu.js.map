{"version":3,"file":"index-DxdOrKeu.js","sources":["../../src/pages/UserManagement/config.ts","../../src/pages/UserManagement/getUserExtraFields.ts","../../src/pages/UserManagement/AddEditUser.tsx","../../src/pages/UserManagement/UserItemCard.tsx","../../src/pages/UserManagement/index.tsx"],"sourcesContent":["import { LangFormatFunction } from '@b3/lang';\n\nimport { CompanyInfoTypes } from '@/types';\n\ninterface ExtraFieldsProps {\n  fieldName: string;\n  fieldValue: string | number;\n}\n\ninterface UsersListItems {\n  createdAt: number;\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  phone: string;\n  role: number;\n  companyRoleName: string;\n  companyRoleId: number | string;\n  updatedAt: number;\n  extraFields: ExtraFieldsProps[];\n  masqueradingCompanyId: number | string | null;\n  companyInfo: CompanyInfoTypes | null;\n  [key: string]: string | null | number | ExtraFieldsProps[] | CompanyInfoTypes;\n}\n\ninterface FilterProps {\n  first: number;\n  offset: number;\n  search: string;\n  role: number | string;\n  companyId: number | string;\n  addChannel: boolean;\n  [key: string]: string | null | number | boolean | ExtraFieldsProps[];\n}\n\ntype UsersList = UsersListItems;\n\ninterface UsersFilesProps {\n  [key: string]: string | boolean | number | Array<any> | boolean | undefined;\n  name: string;\n}\n\ninterface UserRoleProps {\n  label: string;\n  value: number;\n  idLang: string;\n  name: string;\n}\n\ninterface RoleCompanyInfoProps {\n  id: number;\n  name: string;\n}\n\ninterface RoleProps {\n  id: string;\n  name: string;\n  roleLevel: number;\n  roleType: number;\n  companyInfo: RoleCompanyInfoProps;\n}\n\ninterface UserRoleListProps {\n  node: RoleProps;\n}\n\nconst getUserRole = () => {\n  const userRole: Array<UserRoleProps> = [\n    {\n      label: 'Admin',\n      name: 'Admin',\n      value: 0,\n      idLang: 'userManagement.userRole.admin',\n    },\n    {\n      label: 'Senior buyer',\n      name: 'Senior Buyer',\n      value: 1,\n      idLang: 'userManagement.userRole.seniorBuyer',\n    },\n    {\n      label: 'Junior buyer',\n      name: 'Junior Buyer',\n      value: 2,\n      idLang: 'userManagement.userRole.juniorBuyer',\n    },\n  ];\n\n  return userRole;\n};\n\nconst getFilterMoreList = (b3Lang: LangFormatFunction) => {\n  return [\n    {\n      name: 'companyRoleId',\n      label: b3Lang('userManagement.config.userRole'),\n      required: false,\n      default: '',\n      defaultName: '',\n      fieldType: 'roleAutocomplete',\n      xs: 12,\n      disabled: false,\n      variant: 'filled',\n      size: 'small',\n    },\n  ] satisfies [unknown];\n};\n\nconst getUsersFiles = (type: string, b3Lang: LangFormatFunction, disabledUserRole = false) => {\n  const roleArr = getFilterMoreList(b3Lang);\n  roleArr[0].required = true;\n  roleArr[0].disabled = disabledUserRole;\n\n  const usersFiles = [\n    ...roleArr,\n    {\n      name: 'email',\n      label: b3Lang('userManagement.config.email'),\n      required: true,\n      fieldType: 'text',\n      xs: 12,\n      disabled: type === 'edit',\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'firstName',\n      label: b3Lang('userManagement.config.firstName'),\n      required: true,\n      default: '',\n      fieldType: 'text',\n      xs: 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'lastName',\n      label: b3Lang('userManagement.config.lastName'),\n      required: true,\n      fieldType: 'text',\n      xs: 6,\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'phone',\n      label: b3Lang('userManagement.config.phoneNumber'),\n      required: false,\n      fieldType: 'text',\n      xs: 12,\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n  ];\n\n  return usersFiles;\n};\n\ntype EmailError = {\n  [k: number]: string;\n};\n\nconst emailError: EmailError = {\n  3: 'global.emailValidate.multipleCustomer',\n  4: 'global.emailValidate.companyUsed',\n  5: 'global.emailValidate.alreadyExits',\n  6: 'global.emailValidate.usedSuperAdmin',\n};\n\nexport { emailError, getFilterMoreList, getUserRole, getUsersFiles };\n\nexport type {\n  FilterProps,\n  UserRoleProps,\n  UsersFilesProps,\n  UsersList,\n  ExtraFieldsProps,\n  UserRoleListProps,\n  RoleCompanyInfoProps,\n  RoleProps,\n};\n","import { getUsersExtraFieldsInfo } from '@/shared/service/b2b';\nimport b2bLogger from '@/utils/b3Logger';\n\ninterface B2bExtraFieldsProps {\n  defaultValue: string;\n  fieldName: string;\n  fieldType: 0 | 1 | 2 | 3;\n  isRequired: boolean;\n  labelName: string;\n  listOfValue: null | Array<string>;\n  maximumLength: string | number | null;\n  maximumValue: string | number | null;\n  numberOfRows: string | number | null;\n  visibleToEnduser: boolean;\n}\n\ninterface FieldsOptionProps {\n  label: string;\n  value: string | number;\n}\n\ninterface FormattedItemsProps {\n  [key: string]: string | boolean | number | Array<any> | boolean | undefined;\n  name: string;\n}\n\nconst FIELD_TYPE = {\n  0: 'text',\n  1: 'multiline',\n  2: 'number',\n  3: 'dropdown',\n};\n\nconst handleConversionExtraItemFormat = (userExtraFields: B2bExtraFieldsProps[]) => {\n  const formattedUserExtraFields: FormattedItemsProps[] = userExtraFields.map(\n    (item: B2bExtraFieldsProps) => {\n      const { listOfValue } = item;\n      const type = FIELD_TYPE[item.fieldType];\n\n      const currentItems: FormattedItemsProps = {\n        isExtraFields: true,\n        name: item.fieldName,\n        label: item.labelName,\n        required: item.isRequired,\n        default: item.defaultValue || '',\n        fieldType: type,\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n      };\n\n      switch (type) {\n        case 'dropdown':\n          if (listOfValue) {\n            const options: FieldsOptionProps[] = listOfValue?.map((option: string) => ({\n              label: option,\n              value: option,\n            }));\n\n            if (options.length > 0) {\n              currentItems.options = options;\n            }\n          }\n\n          break;\n        case 'number':\n          currentItems.max = item.maximumValue || '';\n          break;\n        case 'mutiline':\n          currentItems.rows = item.numberOfRows || '';\n          break;\n        default:\n          currentItems.maxLength = item.maximumLength || '';\n          break;\n      }\n\n      return currentItems;\n    },\n  );\n\n  return formattedUserExtraFields;\n};\n\nconst getB2BUserExtraFields = async () => {\n  let userExtraFieldsList: FormattedItemsProps[] = [];\n  try {\n    const { userExtraFields } = await getUsersExtraFieldsInfo();\n    const visibleFields = userExtraFields.filter(\n      (item: B2bExtraFieldsProps) => item.visibleToEnduser,\n    );\n\n    const formattedUserExtraFields = handleConversionExtraItemFormat(visibleFields);\n\n    userExtraFieldsList = formattedUserExtraFields;\n  } catch (err) {\n    b2bLogger.error(err);\n  }\n\n  return userExtraFieldsList;\n};\n\nexport default getB2BUserExtraFields;\n","import { forwardRef, Ref, useEffect, useImperativeHandle, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useB3Lang } from '@b3/lang';\nimport concat from 'lodash-es/concat';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport { addOrUpdateUsers, checkUserEmail } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { UserTypes } from '@/types';\nimport { channelId, snackbar } from '@/utils';\n\nimport {\n  emailError,\n  ExtraFieldsProps,\n  FilterProps,\n  getUsersFiles,\n  UsersFilesProps,\n  UsersList,\n} from './config';\nimport getB2BUserExtraFields from './getUserExtraFields';\n\ninterface AddEditUserProps {\n  companyId: string | number;\n  renderList: () => void;\n}\n\ninterface SelectedDataProps {\n  [key: string]: string | number;\n}\n\nfunction AddEditUser({ companyId, renderList }: AddEditUserProps, ref: Ref<unknown> | undefined) {\n  const b2bId = useAppSelector(({ company }) => company.customer.b2bId);\n\n  const [open, setOpen] = useState<boolean>(false);\n  const [type, setType] = useState<string>('');\n\n  const [editData, setEditData] = useState<UsersList | null>(null);\n\n  const [addUpdateLoading, setAddUpdateLoading] = useState<boolean>(false);\n\n  const [usersFiles, setUsersFiles] = useState<Array<UsersFilesProps>>([]);\n  const [userExtrafields, setUserExtrafields] = useState<UsersFilesProps[] | []>([]);\n\n  const b3Lang = useB3Lang();\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    clearErrors,\n    setValue,\n    setError,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  const handleGetUsersFiles = async () => {\n    const userExtrafields = await getB2BUserExtraFields();\n    setUserExtrafields(userExtrafields);\n  };\n\n  useEffect(() => {\n    if (userExtrafields.length === 0) {\n      handleGetUsersFiles();\n    }\n  }, [userExtrafields.length]);\n\n  const handleGetExtrafieldsInfo = (selectedData: SelectedDataProps) => {\n    const keyValue = Object.keys(selectedData);\n\n    const extrafields: ExtraFieldsProps[] = [];\n    userExtrafields.forEach((item: UsersFilesProps) => {\n      if (keyValue.includes(item.name)) {\n        const extraField = {\n          fieldName: item.name || '',\n          fieldValue: selectedData[item.name] || '',\n        };\n\n        extrafields.push(extraField);\n      }\n    });\n\n    return extrafields;\n  };\n\n  useEffect(() => {\n    if (open) {\n      const newUsersFiles = usersFiles.map((item: UsersFilesProps) => {\n        const newItem = item;\n\n        if (type === 'edit' && editData) {\n          setValue(item.name, editData[item.name]);\n        }\n\n        return newItem;\n      });\n\n      setUsersFiles(newUsersFiles);\n    }\n    // disabling because we don't want to run this effect on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editData, open, type]);\n\n  const handleCancelClick = () => {\n    usersFiles.forEach((item: UsersFilesProps) => {\n      setValue(item.name, '');\n      if (item.isExtraFields) {\n        setValue(item.name, item.default || '');\n      }\n    });\n    clearErrors();\n    setOpen(false);\n  };\n\n  const validateEmailValue = async (emailValue: string) => {\n    const {\n      userType,\n      userInfo: { companyName },\n    } = await checkUserEmail({\n      email: emailValue,\n      companyId,\n      channelId,\n    });\n\n    const isValid = [\n      UserTypes.DOES_NOT_EXIST,\n      UserTypes.B2C,\n      UserTypes.CURRENT_B2B_COMPANY_DIFFERENT_CHANNEL,\n    ].includes(userType);\n\n    if (!isValid) {\n      setError('email', {\n        type: 'custom',\n        message: b3Lang(emailError[userType], {\n          companyName: companyName ? `(${companyName})` : '',\n          email: emailValue,\n        }),\n      });\n    }\n\n    return {\n      isValid,\n      userType,\n    };\n  };\n\n  const handleAddUserClick = () => {\n    handleSubmit(async (data) => {\n      setAddUpdateLoading(true);\n      const extraFieldsInfo = handleGetExtrafieldsInfo(data);\n      let message = b3Lang('userManagement.addUserSuccessfully');\n\n      try {\n        const params: Partial<FilterProps> = {\n          companyId,\n          companyRoleId: Number(data.companyRoleId),\n          ...data,\n          extraFields: extraFieldsInfo,\n        };\n\n        if (type !== 'edit') {\n          const { isValid, userType } = await validateEmailValue(data.email);\n\n          if (!isValid) {\n            setAddUpdateLoading(false);\n            return;\n          }\n\n          if (userType === UserTypes.CURRENT_B2B_COMPANY_DIFFERENT_CHANNEL) {\n            params.addChannel = true;\n            message = b3Lang('userManagement.userDetected', {\n              email: data.email,\n            });\n          }\n        }\n\n        if (type === 'edit') {\n          params.userId = editData?.id || '';\n          message = b3Lang('userManagement.updateUserSuccessfully');\n          delete params.email;\n        }\n\n        await addOrUpdateUsers(params);\n        handleCancelClick();\n\n        snackbar.success(message);\n\n        renderList();\n      } finally {\n        setAddUpdateLoading(false);\n      }\n    })();\n  };\n\n  const handleOpenAddEditUserClick = (type: string, data: UsersList) => {\n    const usersFiles = getUsersFiles(\n      type,\n      b3Lang,\n      type === 'edit' ? b2bId === Number(data.id) : false,\n    );\n\n    if (type === 'edit') {\n      const extrafieldsInfo: ExtraFieldsProps[] = data.extraFields || [];\n      let newData = data;\n      if (extrafieldsInfo && extrafieldsInfo.length > 0) {\n        const extrafieldsData: CustomFieldItems = {};\n\n        extrafieldsInfo.forEach((item) => {\n          extrafieldsData[item.fieldName] = item.fieldValue;\n        });\n\n        newData = {\n          ...data,\n          ...extrafieldsData,\n        };\n      }\n\n      setEditData(newData);\n\n      const companyRoleItem: UsersFilesProps | null =\n        usersFiles.find((item) => item.name === 'companyRoleId') || null;\n      if (companyRoleItem) {\n        companyRoleItem.defaultName = data?.companyRoleName || '';\n        companyRoleItem.default = data?.companyRoleId || '';\n      }\n    }\n    const allUsersFiles = concat(usersFiles, userExtrafields);\n    setUsersFiles(allUsersFiles);\n\n    setType(type);\n    setOpen(true);\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleOpenAddEditUserClick,\n  }));\n\n  return (\n    <B3Dialog\n      isOpen={open}\n      title={\n        type === 'edit' ? b3Lang('userManagement.editUser') : b3Lang('userManagement.addNewUser')\n      }\n      leftSizeBtn={b3Lang('userManagement.cancel')}\n      rightSizeBtn={b3Lang('userManagement.saveUser')}\n      handleLeftClick={handleCancelClick}\n      handRightClick={handleAddUserClick}\n      loading={addUpdateLoading}\n      isShowBordered\n    >\n      <B3CustomForm\n        formFields={usersFiles}\n        errors={errors}\n        control={control}\n        getValues={getValues}\n        setValue={setValue}\n      />\n    </B3Dialog>\n  );\n}\n\nconst B3AddEditUser = forwardRef(AddEditUser);\n\nexport default B3AddEditUser;\n","import styled from '@emotion/styled';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { B3Tag } from '@/components';\nimport { verifyLevelPermission } from '@/utils';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\n\nimport { getUserRole, UsersList } from './config';\n\ninterface RoleListProps {\n  label: string;\n  value: string | number;\n  color: string;\n  textColor: string;\n  idLang: string;\n  name: string;\n}\n\nexport interface OrderItemCardProps {\n  item: UsersList;\n  onEdit: (data: UsersList) => void;\n  onDelete: (data: UsersList) => void;\n}\n\nconst Flex = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\nexport function UserItemCard(props: OrderItemCardProps) {\n  const { item: userInfo, onEdit, onDelete } = props;\n  const { companyInfo, id, companyRoleName, firstName, lastName, email } = userInfo;\n\n  const { userUpdateActionsPermission, userDeleteActionsPermission } = b2bPermissionsMap;\n\n  const updateActionsPermission = verifyLevelPermission({\n    code: userUpdateActionsPermission,\n    companyId: Number(companyInfo?.companyId || 0),\n    userId: Number(id),\n  });\n  const deleteActionsPermission = verifyLevelPermission({\n    code: userDeleteActionsPermission,\n    companyId: Number(companyInfo?.companyId || 0),\n    userId: Number(id),\n  });\n\n  const getNewRoleList = () => {\n    const userRole = getUserRole();\n    const newRoleList: Array<RoleListProps> = userRole.map((item) => {\n      if (Number(item.value) === 2) {\n        if (companyRoleName !== 'Junior Buyer') {\n          return {\n            color: '#ce93d8',\n            textColor: 'black',\n            ...item,\n            label: companyRoleName,\n            name: companyRoleName,\n          };\n        }\n        return {\n          color: '#D9DCE9',\n          textColor: 'black',\n          ...item,\n        };\n      }\n      if (Number(item.value) === 1) {\n        return {\n          color: 'rgba(237, 108, 2, 0.3)',\n          textColor: 'black',\n          ...item,\n        };\n      }\n      return {\n        color: '#C4DD6C',\n        textColor: 'black',\n        ...item,\n      };\n    });\n\n    return newRoleList;\n  };\n\n  const statusRender = (name: string) => {\n    const newRoleList = getNewRoleList();\n    const roleItem = newRoleList.find((item: RoleListProps) => item.name === name);\n\n    if (!roleItem) return null;\n    return (\n      <B3Tag color={roleItem.color} textColor={roleItem.textColor}>\n        {roleItem.label}\n      </B3Tag>\n    );\n  };\n\n  return (\n    <Card key={id}>\n      <CardContent\n        sx={{\n          color: '#313440',\n        }}\n      >\n        <Typography\n          variant=\"h5\"\n          sx={{\n            color: 'rgba(0, 0, 0, 0.87)',\n          }}\n        >\n          {firstName} {lastName}\n        </Typography>\n\n        <Typography\n          sx={{\n            p: '15px 0',\n          }}\n          variant=\"body1\"\n        >\n          {email}\n        </Typography>\n        <Flex>\n          {statusRender(companyRoleName)}\n          <Box>\n            {updateActionsPermission && (\n              <IconButton\n                aria-label=\"edit\"\n                size=\"small\"\n                sx={{\n                  marginRight: '8px',\n                }}\n                onClick={() => {\n                  onEdit(userInfo);\n                }}\n              >\n                <EditIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n            {deleteActionsPermission && (\n              <IconButton\n                aria-label=\"delete\"\n                size=\"small\"\n                onClick={() => {\n                  onDelete(userInfo);\n                }}\n              >\n                <DeleteIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n          </Box>\n        </Flex>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Box } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Filter from '@/components/filter/B3Filter';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { useCardListColumn, useMobile, useTableRef } from '@/hooks';\nimport { deleteUsers, getUsers } from '@/shared/service/b2b';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\nimport { CustomerRole } from '@/types';\nimport { snackbar } from '@/utils';\nimport { verifyCreatePermission } from '@/utils/b3CheckPermissions';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\n\nimport B3AddEditUser from './AddEditUser';\nimport { FilterProps, getFilterMoreList, UsersList } from './config';\nimport { UserItemCard } from './UserItemCard';\n\ninterface RefCurrentProps extends HTMLInputElement {\n  handleOpenAddEditUserClick: (type: string, data?: UsersList) => void;\n}\n\ninterface RoleProps {\n  role: string;\n  companyRoleId: string | number;\n}\nfunction UserManagement() {\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  const [userItem, setUserItem] = useState<UsersList>({\n    createdAt: 0,\n    email: '',\n    firstName: '',\n    id: '',\n    lastName: '',\n    phone: '',\n    role: 0,\n    updatedAt: 0,\n    extraFields: [],\n    companyRoleName: '',\n    companyRoleId: '',\n    masqueradingCompanyId: '',\n    companyInfo: null,\n  });\n  const b3Lang = useB3Lang();\n\n  const [isMobile] = useMobile();\n\n  const isExtraLarge = useCardListColumn();\n\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const companyInfo = useAppSelector(({ company }) => company.companyInfo);\n\n  const companyId = Number(role) === CustomerRole.SUPER_ADMIN ? salesRepCompanyId : companyInfo?.id;\n\n  const b2bPermissions = useAppSelector(rolePermissionSelector);\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const isEnableBtnPermissions = b2bPermissions.userCreateActionsPermission;\n\n  const customItem = useMemo(() => {\n    const { userCreateActionsPermission } = b2bPermissionsMap;\n\n    const isCreatePermission = verifyCreatePermission(\n      userCreateActionsPermission,\n      Number(selectCompanyHierarchyId),\n    );\n    return {\n      isEnabled: isEnableBtnPermissions && isCreatePermission,\n      customLabel: b3Lang('userManagement.addUser'),\n    };\n\n    // ignore b3Lang due it's function that doesn't not depend on any reactive value\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEnableBtnPermissions, selectCompanyHierarchyId]);\n\n  const addEditUserRef = useRef<RefCurrentProps | null>(null);\n  const [paginationTableRef] = useTableRef();\n\n  const initSearch = {\n    search: '',\n    companyRoleId: '',\n    companyId,\n    q: '',\n  };\n  const filterMoreInfo = getFilterMoreList(b3Lang);\n\n  const [filterSearch, setFilterSearch] = useState<Partial<FilterProps>>(initSearch);\n\n  const [translatedFilterInfo, setTranslatedFilterInfo] =\n    useState<CustomFieldItems[]>(filterMoreInfo);\n  const [valueName, setValueName] = useState<string>('');\n\n  const fetchList: GetRequestList<Partial<FilterProps>, UsersList> = async (params) => {\n    const data = await getUsers(params);\n\n    const {\n      users: { edges, totalCount },\n    } = data;\n\n    return {\n      edges,\n      totalCount,\n    };\n  };\n\n  const initSearchList = () => {\n    paginationTableRef.current?.refresh();\n  };\n\n  const handleGetTranslatedFilterInfo = () => {\n    const translatedFilterInfo = filterMoreInfo.map((element: CustomFieldItems) => {\n      const translatedItem = element;\n      const translatedOptions = element.options?.map((option: CustomFieldItems) => {\n        const elementOption = option;\n        elementOption.label = b3Lang(option.idLang);\n        return option;\n      });\n\n      translatedItem.options = translatedOptions;\n      translatedItem.setValueName = setValueName;\n      translatedItem.default = filterSearch.companyRoleId;\n      translatedItem.defaultName = filterSearch.companyRoleId ? valueName : '';\n\n      return element;\n    });\n\n    setTranslatedFilterInfo(translatedFilterInfo);\n\n    return translatedFilterInfo;\n  };\n\n  const handleChange = (_: string, value: string) => {\n    const search = {\n      ...filterSearch,\n      q: value,\n    };\n    setFilterSearch(search);\n  };\n\n  const handleFilterChange = (value: RoleProps) => {\n    const search = {\n      ...filterSearch,\n      companyRoleId: value.companyRoleId,\n      offset: 0,\n    };\n    setFilterSearch(search);\n  };\n\n  const handleAddUserClick = () => {\n    addEditUserRef.current?.handleOpenAddEditUserClick('add');\n  };\n\n  const handleEdit = (userInfo: UsersList) => {\n    addEditUserRef.current?.handleOpenAddEditUserClick('edit', userInfo);\n  };\n\n  const handleDelete = (row: UsersList) => {\n    setUserItem(row);\n    setDeleteOpen(true);\n  };\n\n  const handleCancelClick = () => {\n    setDeleteOpen(false);\n  };\n\n  const handleDeleteUserClick = async (row: UsersList | undefined) => {\n    if (!row) return;\n    try {\n      setIsRequestLoading(true);\n      handleCancelClick();\n      await deleteUsers({\n        userId: row.id || '',\n        companyId: selectCompanyHierarchyId || companyId,\n      });\n      snackbar.success(b3Lang('userManagement.deleteUserSuccessfully'));\n    } finally {\n      setIsRequestLoading(false);\n      initSearchList();\n    }\n  };\n\n  useEffect(() => {\n    handleGetTranslatedFilterInfo();\n\n    // disabling because we don't want to run this effect on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterSearch, filterSearch.companyRoleId]);\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n        }}\n      >\n        <B3Filter\n          filterMoreInfo={translatedFilterInfo}\n          handleChange={handleChange}\n          handleFilterChange={handleFilterChange}\n          customButtonConfig={customItem}\n          handleFilterCustomButtonClick={handleAddUserClick}\n        />\n        <B3PaginationTable\n          ref={paginationTableRef}\n          columnItems={[]}\n          rowsPerPageOptions={[12, 24, 36]}\n          getRequestList={fetchList}\n          searchParams={filterSearch || {}}\n          isCustomRender\n          itemXs={isExtraLarge ? 3 : 4}\n          requestLoading={setIsRequestLoading}\n          renderItem={(row) => (\n            <UserItemCard\n              key={row.id || ''}\n              item={row}\n              onEdit={handleEdit}\n              onDelete={handleDelete}\n            />\n          )}\n        />\n        <B3AddEditUser\n          companyId={selectCompanyHierarchyId || companyId}\n          renderList={initSearchList}\n          ref={addEditUserRef}\n        />\n        <B3Dialog\n          isOpen={deleteOpen}\n          title={b3Lang('userManagement.deleteUser')}\n          leftSizeBtn={b3Lang('userManagement.cancel')}\n          rightSizeBtn={b3Lang('userManagement.delete')}\n          handleLeftClick={handleCancelClick}\n          handRightClick={handleDeleteUserClick}\n          row={userItem}\n          rightStyleBtn={{\n            color: '#D32F2F',\n          }}\n          isShowBordered={false}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: isMobile ? 'center%' : 'start',\n              width: isMobile ? '100%' : '450px',\n              height: '100%',\n            }}\n          >\n            {b3Lang('userManagement.confirmDelete')}\n          </Box>\n        </B3Dialog>\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default UserManagement;\n"],"names":["getUserRole","getFilterMoreList","b3Lang","getUsersFiles","type","disabledUserRole","roleArr","emailError","FIELD_TYPE","handleConversionExtraItemFormat","userExtraFields","item","listOfValue","currentItems","options","option","getB2BUserExtraFields","userExtraFieldsList","getUsersExtraFieldsInfo","visibleFields","err","b2bLogger","AddEditUser","companyId","renderList","ref","b2bId","useAppSelector","company","open","setOpen","useState","setType","editData","setEditData","addUpdateLoading","setAddUpdateLoading","usersFiles","setUsersFiles","userExtrafields","setUserExtrafields","useB3Lang","control","handleSubmit","getValues","errors","clearErrors","setValue","setError","useForm","handleGetUsersFiles","useEffect","handleGetExtrafieldsInfo","selectedData","keyValue","extrafields","extraField","newUsersFiles","newItem","handleCancelClick","validateEmailValue","emailValue","userType","companyName","checkUserEmail","channelId","isValid","UserTypes","handleAddUserClick","data","extraFieldsInfo","message","params","addOrUpdateUsers","snackbar","handleOpenAddEditUserClick","extrafieldsInfo","newData","extrafieldsData","companyRoleItem","allUsersFiles","concat","useImperativeHandle","jsx","B3Dialog","B3CustomForm","B3AddEditUser","forwardRef","Flex","styled","UserItemCard","props","userInfo","onEdit","onDelete","companyInfo","id","companyRoleName","firstName","lastName","email","userUpdateActionsPermission","userDeleteActionsPermission","b2bPermissionsMap","updateActionsPermission","verifyLevelPermission","deleteActionsPermission","getNewRoleList","statusRender","name","roleItem","B3Tag","Card","jsxs","CardContent","Typography","Box","IconButton","EditIcon","DeleteIcon","UserManagement","isRequestLoading","setIsRequestLoading","deleteOpen","setDeleteOpen","userItem","setUserItem","isMobile","useMobile","isExtraLarge","useCardListColumn","salesRepCompanyId","b2bFeatures","role","CustomerRole","b2bPermissions","rolePermissionSelector","selectCompanyHierarchyId","isEnableBtnPermissions","customItem","useMemo","userCreateActionsPermission","isCreatePermission","verifyCreatePermission","addEditUserRef","useRef","paginationTableRef","useTableRef","initSearch","filterMoreInfo","filterSearch","setFilterSearch","translatedFilterInfo","setTranslatedFilterInfo","valueName","setValueName","fetchList","getUsers","edges","totalCount","initSearchList","_a","handleGetTranslatedFilterInfo","element","translatedItem","translatedOptions","elementOption","handleChange","_","value","search","handleFilterChange","handleEdit","handleDelete","row","handleDeleteUserClick","deleteUsers","B3Spin","B3Filter","B3PaginationTable"],"mappings":"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"}