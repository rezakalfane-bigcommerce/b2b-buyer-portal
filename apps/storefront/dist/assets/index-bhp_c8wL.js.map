{"version":3,"file":"index-bhp_c8wL.js","sources":["../../../../node_modules/toggle-selection/index.js","../../../../node_modules/copy-to-clipboard/index.js","../../../../node_modules/@mui/icons-material/ArrowUpward.js","../../src/pages/quote/components/Message.tsx","../../src/pages/quote/utils/quoteCheckout.ts","../../src/pages/quote/components/QuoteDetailFooter.tsx","../../src/pages/quote/components/QuoteDetailHeader.tsx","../../src/pages/quote/components/QuoteDetailSummary.tsx","../../src/pages/quote/components/QuoteDetailTableCard.tsx","../../src/pages/quote/components/QuoteDetailTable.tsx","../../src/pages/quote/components/QuoteTermsAndConditions.tsx","../../src/pages/QuoteDetail/index.tsx"],"sourcesContent":["\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8z\"\n}), 'ArrowUpward');","import {\n  KeyboardEvent,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport { Box, Card, CardContent, TextField, Tooltip, useTheme } from '@mui/material';\nimport { format, formatDistanceStrict } from 'date-fns';\n\nimport { B3CollapseContainer } from '@/components';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { GlobalContext } from '@/shared/global';\nimport { updateB2BQuote, updateBCQuote } from '@/shared/service/b2b';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\nimport { displayExtendedFormat, storeHash } from '@/utils';\n\ninterface MessageProps {\n  date?: number;\n  message?: string;\n  role?: string;\n  isCustomer?: boolean;\n  key?: number | string;\n  read?: number;\n  sendTime?: number;\n}\n\ninterface MsgsProps {\n  msgs: MessageProps[];\n  id: string | number;\n  email: string;\n  isB2BUser: boolean;\n  status: number;\n}\n\ninterface CustomerMessageProps {\n  msg: MessageProps;\n  isEndMessage?: boolean;\n  isCustomer?: boolean;\n}\n\nfunction ChatMessage({ msg, isEndMessage, isCustomer }: CustomerMessageProps) {\n  const b3Lang = useB3Lang();\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: isCustomer ? 'flex-end' : 'flex-start',\n        paddingTop: '5px',\n      }}\n    >\n      {msg?.role && (\n        <Box\n          sx={{\n            height: '14px',\n            fontWeight: 400,\n            lineHeight: '14px',\n            fontSize: '10px',\n            letterSpacing: '0.17px',\n            color: 'rgba(0, 0, 0, 0.38)',\n          }}\n        >\n          {msg.role}\n        </Box>\n      )}\n      {msg?.message && (\n        <Box\n          sx={{\n            display: 'inline-block',\n            lineHeight: '34px',\n            padding: '0 10px',\n            background: isCustomer ? 'rgba(25, 118, 210, 0.3)' : 'rgba(0, 0, 0, 0.12)',\n            borderRadius: '18px',\n            m: '1px',\n          }}\n        >\n          <Tooltip title={format((msg.sendTime || 0) * 1000, 'K:m aa')} placement=\"top\" arrow>\n            <Box\n              sx={{\n                wordBreak: 'break-word',\n              }}\n            >\n              {msg.message}\n            </Box>\n          </Tooltip>\n          {isEndMessage && (\n            <Box\n              sx={{\n                height: '14px',\n                fontWeight: 400,\n                lineHeight: '14px',\n                fontSize: '10px',\n                letterSpacing: '0.17px',\n                color: 'rgba(0, 0, 0, 0.38)',\n              }}\n            >\n              {`${b3Lang('quoteDetail.message.sent')} ${formatDistanceStrict(\n                new Date((msg.sendTime || 0) * 1000),\n                new Date(),\n                {\n                  addSuffix: true,\n                },\n              )}`}\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\ninterface DateMessageProps {\n  msg: MessageProps;\n}\n\nfunction DateMessage({ msg }: DateMessageProps) {\n  return (\n    <Box\n      sx={{\n        color: 'rgba(0, 0, 0, 0.6)',\n        textAlign: 'center',\n        height: '21px',\n        mb: '5px',\n      }}\n    >\n      {`${displayExtendedFormat(msg?.date || 0)}`}\n    </Box>\n  );\n}\n\nfunction Message({ msgs, id, isB2BUser, email, status }: MsgsProps) {\n  const { dispatch: globalDispatch } = useContext(GlobalContext);\n\n  const theme = useTheme();\n  const primaryColor = theme.palette.primary.main;\n  const b3Lang = useB3Lang();\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const changeReadRef = useRef(0);\n\n  const [messages, setMessages] = useState<MessageProps[]>([]);\n\n  const [read, setRead] = useState<number>(0);\n\n  const [message, setMessage] = useState<string>('');\n\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const { quotesUpdateMessageActionsPermission } = useAppSelector(rolePermissionSelector);\n  const quotesUpdateMessagePermission = isB2BUser ? quotesUpdateMessageActionsPermission : true;\n\n  const convertedMsgs = (msgs: MessageProps[]) => {\n    let nextMsg: MessageProps = {};\n    const getNewMsgs: MessageProps[] = [];\n    let readNum = 0;\n    msgs.forEach((msg: MessageProps, index: number) => {\n      if (index === 0) {\n        getNewMsgs.push({\n          isCustomer: !msg.role?.includes('Sales rep:'),\n          date: msg?.date,\n          key: `${msg?.date}date`,\n        });\n        getNewMsgs.push({\n          isCustomer: !msg.role?.includes('Sales rep:'),\n          message: msg.message,\n          sendTime: msg.date,\n          role: msg.role,\n          key: msg?.date,\n        });\n        nextMsg = msg;\n        nextMsg.isCustomer = !msg.role?.includes('Sales rep:');\n      } else {\n        if ((msg?.date || 0) - (nextMsg?.date || 0) > 60 * 60) {\n          getNewMsgs.push({\n            isCustomer: !msg.role?.includes('Sales rep:'),\n            date: msg?.date,\n            key: `${msg?.date}date`,\n          });\n        }\n\n        if (nextMsg.isCustomer === !msg.role?.includes('Sales rep:')) {\n          getNewMsgs.push({\n            isCustomer: !msg.role?.includes('Sales rep:'),\n            message: msg.message,\n            sendTime: msg.date,\n            key: msg?.date,\n          });\n        } else {\n          getNewMsgs.push({\n            isCustomer: !msg.role?.includes('Sales rep:'),\n            message: msg.message,\n            role: msg.role,\n            sendTime: msg.date,\n            key: msg?.date,\n          });\n        }\n        nextMsg = msg;\n        nextMsg.isCustomer = !msg.role?.includes('Sales rep:');\n      }\n\n      if (msg.role?.includes('Sales rep:') && !msg.read) {\n        readNum += 1;\n      }\n    });\n\n    setRead(readNum);\n\n    setMessages(getNewMsgs);\n  };\n\n  const title = useMemo(\n    () => (\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {`${b3Lang('quoteDetail.message.message')} `}\n        {read !== 0 && (\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              width: '20px',\n              height: '20px',\n              borderRadius: '50%',\n              background: primaryColor || '#1976D2',\n              color: '#fff',\n              fontSize: '12px',\n              ml: '8px',\n            }}\n          >\n            {read}\n          </Box>\n        )}\n      </Box>\n    ),\n    // disabling this rule as b3Lang will cause rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [primaryColor, read],\n  );\n\n  useEffect(() => {\n    convertedMsgs(msgs);\n  }, [msgs]);\n\n  useEffect(() => {\n    if (messagesEndRef.current && messages.length) {\n      messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const updateMsgs = async (msg: string) => {\n    try {\n      const fn = isB2BUser ? updateB2BQuote : updateBCQuote;\n      setLoading(true);\n      const {\n        quoteUpdate: {\n          quote: { trackingHistory },\n        },\n      } = await fn({\n        id: Number(id),\n        quoteData: {\n          message: msg,\n          lastMessage: parseInt(`${new Date().getTime() / 1000}`, 10),\n          userEmail: email || '',\n          storeHash,\n        },\n      });\n      setMessage('');\n      setRead(0);\n      convertedMsgs(trackingHistory);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateMessage = (e: KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      updateMsgs((e.target as HTMLInputElement).value || '');\n    }\n  };\n\n  const handleOnChange = useCallback(\n    (open: boolean) => {\n      if (open) {\n        if (!quotesUpdateMessagePermission && isB2BUser) return;\n        const fn = isB2BUser ? updateB2BQuote : updateBCQuote;\n        if (changeReadRef.current === 0 && msgs.length) {\n          fn({\n            id: Number(id),\n            quoteData: {\n              lastMessage: msgs[msgs.length - 1]?.date,\n              userEmail: email || '',\n              storeHash,\n            },\n          });\n        }\n        setRead(0);\n        if (messagesEndRef.current) {\n          messagesEndRef.current.scrollTop = messagesEndRef.current.scrollHeight;\n        }\n        changeReadRef.current += 1;\n      }\n    },\n    [email, id, isB2BUser, msgs, quotesUpdateMessagePermission],\n  );\n\n  useEffect(() => {\n    globalDispatch({\n      type: 'common',\n      payload: {\n        quoteDetailHasNewMessages: read !== 0,\n      },\n    });\n    // Disabling this rule as dispatcher dep globalDispatch is the same between renders\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [read]);\n\n  return (\n    <Card>\n      <CardContent\n        sx={{\n          p: '16px !important',\n        }}\n      >\n        <B3CollapseContainer handleOnChange={handleOnChange} title={title}>\n          <Box\n            sx={{\n              padding: '16px 0',\n            }}\n          >\n            <Box\n              sx={{\n                position: 'relative',\n                color: 'rgba(0, 0, 0, 0.6)',\n                opacity: 0.6,\n                textAlign: 'left',\n                width: '100%',\n                fontSize: '14px',\n              }}\n            >\n              {b3Lang('quoteDetail.message.merchantAnswers')}\n            </Box>\n            <Box\n              ref={messagesEndRef}\n              sx={{\n                mt: '20px',\n                maxHeight: '280px',\n                overflowY: 'auto',\n                '&::-webkit-scrollbar': {\n                  display: 'none',\n                },\n              }}\n            >\n              {messages.map((item: MessageProps, index: number) => (\n                <Box key={item.key}>\n                  <ChatMessage\n                    msg={item}\n                    isEndMessage={index === messages.length - 1}\n                    isCustomer={!!item.isCustomer}\n                  />\n                  {item.date && <DateMessage msg={item} />}\n                </Box>\n              ))}\n            </Box>\n          </Box>\n\n          {status !== 4 && quotesUpdateMessagePermission && (\n            <B3Spin\n              isSpinning={loading}\n              spinningHeight={50}\n              size={10}\n              isCloseLoading\n              tip=\"waiting..\"\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  width: '100%',\n                }}\n              >\n                <TextField\n                  onKeyDown={updateMessage}\n                  sx={{\n                    width: '100%',\n                    '& .MuiFormLabel-root': {\n                      color: 'rgba(0, 0, 0, 0.38)',\n                    },\n                    '& input': {\n                      padding: '1.5rem 0.7rem 0.5rem',\n                    },\n                  }}\n                  value={message}\n                  onChange={(event) => {\n                    setMessage(event.target.value);\n                  }}\n                  size=\"small\"\n                  label={b3Lang('quoteDetail.message.typeMessage')}\n                  variant=\"filled\"\n                />\n                <Box\n                  onClick={() => updateMsgs(message)}\n                  sx={{\n                    width: '42px',\n                    height: '36px',\n                    margin: '10px 0 0 10px',\n                    background: '#BAD6F2',\n                    borderRadius: '50%',\n                  }}\n                >\n                  <ArrowUpwardIcon\n                    sx={{\n                      height: '18px',\n                      width: '18px',\n                      margin: '8px 0 0 9px',\n                      color: '#0000008A',\n                    }}\n                    fontSize=\"small\"\n                  />\n                </Box>\n              </Box>\n            </B3Spin>\n          )}\n        </B3CollapseContainer>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Message;\n","import { Location, NavigateFunction } from 'react-router-dom';\n\nimport {\n  b2bQuoteCheckout,\n  bcQuoteCheckout,\n  getBCStorefrontProductSettings,\n} from '@/shared/service/b2b';\nimport { setQuoteDetailToCheckoutUrl, store } from '@/store';\nimport { attemptCheckoutLoginAndRedirect, setQuoteToStorage } from '@/utils/b3checkout';\nimport b2bLogger from '@/utils/b3Logger';\nimport { platform } from '@/utils/basicConfig';\nimport { getSearchVal } from '@/utils/loginInfo';\n\ninterface QuoteCheckout {\n  role: string | number;\n  proceedingCheckoutFn: () => boolean;\n  location: Location;\n  quoteId: string;\n  navigate?: NavigateFunction;\n}\n\nexport const handleQuoteCheckout = async ({\n  role,\n  proceedingCheckoutFn,\n  location,\n  quoteId,\n  navigate,\n}: QuoteCheckout) => {\n  try {\n    store.dispatch(setQuoteDetailToCheckoutUrl(''));\n\n    const isHideQuoteCheckout = proceedingCheckoutFn();\n\n    if (isHideQuoteCheckout) return;\n\n    const {\n      storefrontProductSettings: { hidePriceFromGuests },\n    } = await getBCStorefrontProductSettings();\n\n    if (hidePriceFromGuests && Number(role) === 100 && navigate) {\n      store.dispatch(setQuoteDetailToCheckoutUrl(location.pathname + location.search));\n      navigate('/login');\n      return;\n    }\n\n    const fn = Number(role) === 99 ? bcQuoteCheckout : b2bQuoteCheckout;\n    const date = getSearchVal(location.search, 'date');\n\n    const res = await fn({\n      id: Number(quoteId),\n    });\n\n    setQuoteToStorage(quoteId, date);\n    const {\n      quoteCheckout: {\n        quoteCheckout: { checkoutUrl, cartId },\n      },\n    } = res;\n\n    if (platform === 'bigcommerce') {\n      window.location.href = checkoutUrl;\n      return;\n    }\n\n    await attemptCheckoutLoginAndRedirect(cartId, checkoutUrl as string);\n  } catch (err) {\n    b2bLogger.error(err);\n  }\n};\n\nexport default handleQuoteCheckout;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Box } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { useMobile } from '@/hooks';\n\nimport { handleQuoteCheckout } from '../utils/quoteCheckout';\n\ninterface QuoteDetailFooterProps {\n  quoteId: string;\n  role: string | number;\n  isAgenting: boolean;\n  status: number;\n  proceedingCheckoutFn: () => boolean;\n}\n\nfunction QuoteDetailFooter(props: QuoteDetailFooterProps) {\n  const { quoteId, role, isAgenting, status, proceedingCheckoutFn } = props;\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const containerStyle = isMobile\n    ? {\n        alignItems: 'flex-end',\n        flexDirection: 'column',\n      }\n    : {\n        alignItems: 'center',\n      };\n\n  return status !== 5 ? (\n    <Box\n      sx={{\n        position: 'fixed',\n        bottom: isMobile && isAgenting ? '52px' : 0,\n        left: 0,\n        backgroundColor: '#fff',\n        width: '100%',\n        padding: '0.8rem 1rem',\n        height: 'auto',\n        display: 'flex',\n        zIndex: '999',\n        justifyContent: isMobile ? 'center' : 'flex-end',\n        displayPrint: 'none',\n        ...containerStyle,\n      }}\n    >\n      <CustomButton\n        variant=\"contained\"\n        onClick={() => {\n          handleQuoteCheckout({\n            proceedingCheckoutFn,\n            role,\n            location,\n            quoteId,\n            navigate,\n          });\n        }}\n        sx={{\n          width: isMobile ? '100%' : 'auto',\n        }}\n      >\n        {b3Lang('quoteDetail.footer.proceedToCheckout')}\n      </CustomButton>\n    </Box>\n  ) : null;\n}\n\nexport default QuoteDetailFooter;\n","import { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { ArrowBackIosNew } from '@mui/icons-material';\nimport { Box, Grid, styled, Typography, useTheme } from '@mui/material';\n\nimport CustomButton from '@/components/button/CustomButton';\nimport { b3HexToRgb, getContrastColor } from '@/components/outSideComponents/utils/b3CustomStyles';\nimport { useMobile } from '@/hooks';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { displayFormat } from '@/utils';\n\nimport QuoteStatus from './QuoteStatus';\n\nconst StyledCreateName = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  marginTop: '0.5rem',\n}));\n\ninterface QuoteDetailHeaderProps {\n  status: string;\n  quoteNumber: string;\n  issuedAt: number;\n  expirationDate: number;\n  exportPdf: () => void;\n  printQuote: () => Promise<void>;\n  role: string | number;\n  salesRepInfo: { [key: string]: string };\n}\n\nfunction QuoteDetailHeader(props: QuoteDetailHeaderProps) {\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const {\n    status,\n    quoteNumber,\n    issuedAt,\n    expirationDate,\n    exportPdf,\n    printQuote,\n    role,\n    salesRepInfo,\n  } = props;\n\n  const {\n    state: {\n      portalStyle: { backgroundColor = '#FEF9F5' },\n    },\n  } = useContext(CustomStyleContext);\n\n  const customColor = getContrastColor(backgroundColor);\n\n  const theme = useTheme();\n\n  const primaryColor = theme.palette.primary.main;\n\n  const navigate = useNavigate();\n  const gridOptions = (xs: number) =>\n    isMobile\n      ? {}\n      : {\n          xs,\n        };\n\n  return (\n    <>\n      {Number(role) !== 100 && (\n        <Box\n          sx={{\n            marginBottom: '10px',\n            width: 'fit-content',\n            displayPrint: 'none',\n          }}\n        >\n          <Box\n            sx={{\n              color: '#1976d2',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n            }}\n            onClick={() => {\n              navigate('/quotes');\n            }}\n          >\n            <ArrowBackIosNew\n              fontSize=\"small\"\n              sx={{\n                fontSize: '12px',\n                marginRight: '0.5rem',\n                color: primaryColor,\n              }}\n            />\n            <p\n              style={{\n                color: primaryColor,\n                margin: '0',\n              }}\n            >\n              {b3Lang('quoteDetail.header.backToQuoteLists')}\n            </p>\n          </Box>\n        </Box>\n      )}\n\n      <Grid\n        container\n        spacing={2}\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexDirection: isMobile ? 'column' : 'row',\n          mb: isMobile ? '16px' : '',\n        }}\n      >\n        <Grid\n          item\n          {...gridOptions(8)}\n          sx={{\n            color: customColor,\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: isMobile ? 'start' : 'center',\n              flexDirection: isMobile ? 'column' : 'row',\n            }}\n          >\n            <Typography\n              sx={{\n                marginRight: '10px',\n                fontSize: '34px',\n                color: b3HexToRgb(customColor, 0.87),\n              }}\n            >\n              {b3Lang('quoteDetail.header.quoteNumber', {\n                quoteNumber: quoteNumber || '',\n              })}\n            </Typography>\n\n            <QuoteStatus code={status} />\n          </Box>\n          {(salesRepInfo?.salesRepName || salesRepInfo?.salesRepEmail) && (\n            <StyledCreateName>\n              <Typography\n                variant=\"subtitle2\"\n                sx={{\n                  marginRight: '0.5rem',\n                  fontSize: '16px',\n                }}\n              >\n                {b3Lang('quoteDetail.header.salesRep')}\n              </Typography>\n              <span>\n                {salesRepInfo?.salesRepEmail !== ''\n                  ? `${salesRepInfo?.salesRepName}(${salesRepInfo?.salesRepEmail})`\n                  : salesRepInfo?.salesRepName}\n              </span>\n            </StyledCreateName>\n          )}\n          <Box>\n            <StyledCreateName>\n              <Typography\n                variant=\"subtitle2\"\n                sx={{\n                  marginRight: '0.5rem',\n                  fontSize: '16px',\n                }}\n              >\n                {b3Lang('quoteDetail.header.issuedOn')}\n              </Typography>\n              <span>{`${issuedAt ? displayFormat(Number(issuedAt)) : ''}`}</span>\n            </StyledCreateName>\n            <StyledCreateName>\n              <Typography\n                variant=\"subtitle2\"\n                sx={{\n                  marginRight: '0.5rem',\n                  fontSize: '16px',\n                }}\n              >\n                {b3Lang('quoteDetail.header.expirationDate')}\n              </Typography>\n              <span>{`${expirationDate ? displayFormat(Number(expirationDate)) : ''}`}</span>\n            </StyledCreateName>\n          </Box>\n        </Grid>\n        {Number(role) !== 100 && (\n          <Grid\n            item\n            sx={{\n              textAlign: isMobile ? 'none' : 'end',\n              displayPrint: 'none',\n            }}\n            {...gridOptions(4)}\n          >\n            <Box>\n              <CustomButton\n                variant=\"outlined\"\n                sx={{\n                  marginRight: '1rem',\n                  displayPrint: 'none',\n                }}\n                onClick={printQuote}\n              >\n                {b3Lang('quoteDetail.header.print')}\n              </CustomButton>\n              <CustomButton variant=\"outlined\" onClick={exportPdf}>\n                {b3Lang('quoteDetail.header.downloadPDF')}\n              </CustomButton>\n            </Box>\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n}\n\nexport default QuoteDetailHeader;\n","import { useB3Lang } from '@b3/lang';\nimport { Box, Card, CardContent, Grid, Typography } from '@mui/material';\n\nimport { useAppSelector } from '@/store';\nimport { currencyFormatConvert } from '@/utils';\n\ninterface Summary {\n  originalSubtotal: string | number;\n  discount: string | number;\n  tax: string | number;\n  shipping: string | number;\n  totalAmount: string | number;\n}\n\ninterface QuoteDetailSummaryProps {\n  quoteSummary: Summary;\n  quoteDetailTax: number;\n  status: string;\n  quoteDetail: CustomFieldItems;\n  isHideQuoteCheckout: boolean;\n}\n\nexport default function QuoteDetailSummary({\n  quoteSummary: { originalSubtotal, discount, tax, shipping, totalAmount },\n  quoteDetailTax = 0,\n  status,\n  quoteDetail,\n  isHideQuoteCheckout,\n}: QuoteDetailSummaryProps) {\n  const b3Lang = useB3Lang();\n  const enteredInclusiveTax = useAppSelector(\n    ({ storeConfigs }) => storeConfigs.currencies.enteredInclusiveTax,\n  );\n  const showInclusiveTaxPrice = useAppSelector(({ global }) => global.showInclusiveTaxPrice);\n\n  const getCurrentPrice = (price: number, quoteDetailTax: number) => {\n    if (enteredInclusiveTax) {\n      return showInclusiveTaxPrice ? price : price - quoteDetailTax;\n    }\n    return showInclusiveTaxPrice ? price + quoteDetailTax : price;\n  };\n\n  const priceFormat = (price: number) =>\n    currencyFormatConvert(price, {\n      currency: quoteDetail.currency,\n      isConversionRate: false,\n      useCurrentCurrency: !!quoteDetail.currency,\n    });\n\n  const getShippingAndTax = () => {\n    if (quoteDetail?.shippingMethod?.id) {\n      return {\n        shippingText: `${b3Lang('quoteDetail.summary.shipping')}(${\n          quoteDetail?.shippingMethod?.description || ''\n        })`,\n        shippingVal: priceFormat(Number(shipping)),\n        taxText: b3Lang('quoteDetail.summary.tax'),\n        taxVal: priceFormat(Number(tax)),\n      };\n    }\n\n    if (!quoteDetail?.salesRepEmail && !quoteDetail?.shippingMethod?.id && Number(status) === 1) {\n      return {\n        shippingText: b3Lang('quoteDetail.summary.shipping'),\n        shippingVal: b3Lang('quoteDetail.summary.tbd'),\n        taxText: b3Lang('quoteDetail.summary.estimatedTax'),\n        taxVal: priceFormat(Number(tax)),\n      };\n    }\n\n    if (\n      quoteDetail?.salesRepEmail &&\n      !quoteDetail?.shippingMethod?.id &&\n      (Number(status) === 1 || Number(status) === 5)\n    ) {\n      return {\n        shippingText: `${b3Lang('quoteDetail.summary.shipping')}(${b3Lang(\n          'quoteDetail.summary.quoteCheckout',\n        )})`,\n        shippingVal: b3Lang('quoteDetail.summary.tbd'),\n        taxText: b3Lang('quoteDetail.summary.tax'),\n        taxVal: b3Lang('quoteDetail.summary.tbd'),\n      };\n    }\n\n    return null;\n  };\n\n  const shippingAndTax = getShippingAndTax();\n\n  const showPrice = (price: string | number): string | number => {\n    if (isHideQuoteCheckout) return b3Lang('quoteDraft.quoteSummary.tbd');\n\n    return price;\n  };\n\n  const subtotalPrice = Number(originalSubtotal);\n  const quotedSubtotal = Number(originalSubtotal) - Number(discount);\n  return (\n    <Card>\n      <CardContent>\n        <Box>\n          <Typography variant=\"h5\">{b3Lang('quoteDetail.summary.quoteSummary')}</Typography>\n          <Box\n            sx={{\n              marginTop: '20px',\n              color: '#212121',\n            }}\n          >\n            {quoteDetail?.displayDiscount && (\n              <Grid\n                container\n                justifyContent=\"space-between\"\n                sx={{\n                  margin: '4px 0',\n                }}\n              >\n                <Typography>{b3Lang('quoteDetail.summary.originalSubtotal')}</Typography>\n                <Typography>\n                  {showPrice(priceFormat(getCurrentPrice(subtotalPrice, quoteDetailTax)))}\n                </Typography>\n              </Grid>\n            )}\n\n            {!quoteDetail?.salesRepEmail && Number(status) === 1 ? null : (\n              <Grid\n                container\n                justifyContent=\"space-between\"\n                sx={{\n                  margin: '4px 0',\n                  display: quoteDetail?.displayDiscount ? '' : 'none',\n                }}\n              >\n                <Typography>{b3Lang('quoteDetail.summary.discountAmount')}</Typography>\n                <Typography>\n                  {Number(discount) > 0\n                    ? `-${priceFormat(Number(discount))}`\n                    : priceFormat(Number(discount))}\n                </Typography>\n              </Grid>\n            )}\n\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              sx={{\n                margin: '4px 0',\n              }}\n            >\n              <Typography\n                sx={{\n                  fontWeight: 'bold',\n                  color: '#212121',\n                }}\n              >\n                {b3Lang('quoteDetail.summary.quotedSubtotal')}\n              </Typography>\n              <Typography\n                sx={{\n                  fontWeight: 'bold',\n                  color: '#212121',\n                }}\n              >\n                {showPrice(priceFormat(getCurrentPrice(quotedSubtotal, quoteDetailTax)))}\n              </Typography>\n            </Grid>\n\n            {shippingAndTax && (\n              <>\n                <Grid\n                  container\n                  justifyContent=\"space-between\"\n                  sx={{\n                    margin: '4px 0',\n                  }}\n                >\n                  <Typography\n                    sx={{\n                      maxWidth: '70%',\n                      wordBreak: 'break-word',\n                    }}\n                  >\n                    {shippingAndTax.shippingText}\n                  </Typography>\n                  <Typography>{showPrice(shippingAndTax.shippingVal)}</Typography>\n                </Grid>\n                <Grid\n                  container\n                  justifyContent=\"space-between\"\n                  sx={{\n                    margin: '4px 0',\n                  }}\n                >\n                  <Typography>{shippingAndTax.taxText}</Typography>\n                  <Typography>{showPrice(shippingAndTax.taxVal)}</Typography>\n                </Grid>\n              </>\n            )}\n\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              sx={{\n                margin: '24px 0 0',\n              }}\n            >\n              <Typography\n                sx={{\n                  fontWeight: 'bold',\n                  color: '#212121',\n                }}\n              >\n                {b3Lang('quoteDetail.summary.grandTotal')}\n              </Typography>\n              <Typography\n                sx={{\n                  fontWeight: 'bold',\n                  color: '#212121',\n                }}\n              >\n                {showPrice(priceFormat(Number(totalAmount)))}\n              </Typography>\n            </Grid>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useB3Lang } from '@b3/lang';\nimport { Box, CardContent, styled, Typography } from '@mui/material';\n\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useAppSelector } from '@/store';\nimport { currencyFormatConvert } from '@/utils';\nimport { getBCPrice } from '@/utils/b3Product/b3Product';\n\ninterface QuoteTableCardProps {\n  item: any;\n  len: number;\n  getTaxRate: (taxClassId: number, variants: any) => number;\n  itemIndex?: number;\n  showPrice: (price: string, row: CustomFieldItems) => string | number;\n  displayDiscount: boolean;\n  currency: CurrencyProps;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nfunction QuoteDetailTableCard(props: QuoteTableCardProps) {\n  const {\n    item: quoteTableItem,\n    len,\n    itemIndex,\n    getTaxRate,\n    showPrice,\n    currency,\n    displayDiscount,\n  } = props;\n  const b3Lang = useB3Lang();\n  const enteredInclusiveTax = useAppSelector(\n    ({ storeConfigs }) => storeConfigs.currencies.enteredInclusiveTax,\n  );\n\n  const {\n    basePrice,\n    quantity,\n    imageUrl,\n    productName,\n    options,\n    sku,\n    notes,\n    offeredPrice,\n    productsSearch: { productUrl, variants = [], taxClassId },\n  } = quoteTableItem;\n\n  const taxRate = getTaxRate(taxClassId, variants);\n  const taxPrice = enteredInclusiveTax\n    ? (Number(basePrice) * taxRate) / (1 + taxRate)\n    : Number(basePrice) * taxRate;\n  const discountTaxPrice = enteredInclusiveTax\n    ? (Number(offeredPrice) * taxRate) / (1 + taxRate)\n    : Number(offeredPrice) * taxRate;\n\n  const price = getBCPrice(Number(basePrice), taxPrice);\n  const discountPrice = getBCPrice(Number(offeredPrice), discountTaxPrice);\n\n  const isDiscount = Number(basePrice) - Number(offeredPrice) > 0 && displayDiscount;\n\n  const total = Number(price) * Number(quantity);\n  const totalWithDiscount = discountPrice * Number(quantity);\n\n  return (\n    <Box\n      key={quoteTableItem.id}\n      width=\"100%\"\n      sx={{\n        borderTop: '1px solid #D9DCE9',\n        borderBottom: itemIndex === len - 1 ? '1px solid #D9DCE9' : '',\n      }}\n    >\n      <CardContent\n        sx={{\n          color: '#313440',\n          display: 'flex',\n          pl: 0,\n        }}\n      >\n        <Box>\n          <StyledImage src={imageUrl || PRODUCT_DEFAULT_IMAGE} alt=\"Product-img\" loading=\"lazy\" />\n        </Box>\n        <Box\n          sx={{\n            flex: 1,\n          }}\n        >\n          <Typography\n            variant=\"body1\"\n            color=\"#212121\"\n            onClick={() => {\n              const {\n                location: { origin },\n              } = window;\n\n              if (productUrl) {\n                window.location.href = `${origin}${productUrl}`;\n              }\n            }}\n            sx={{\n              cursor: 'pointer',\n            }}\n          >\n            {productName}\n          </Typography>\n          <Typography variant=\"body1\" color=\"#616161\">\n            {sku}\n          </Typography>\n          <Box\n            sx={{\n              margin: '1rem 0',\n            }}\n          >\n            {options.length > 0 && (\n              <Box>\n                {options.map((option: any) => (\n                  <Typography\n                    sx={{\n                      fontSize: '0.75rem',\n                      lineHeight: '1.5',\n                      color: '#455A64',\n                    }}\n                    key={option.optionName}\n                  >\n                    {`${option.optionName}: ${option.optionLabel}`}\n                  </Typography>\n                ))}\n              </Box>\n            )}\n          </Box>\n          <Typography variant=\"body1\" color=\"#616161\">\n            {notes}\n          </Typography>\n\n          <Typography\n            sx={{\n              fontSize: '14px',\n            }}\n          >\n            {b3Lang('quoteDetail.tableCard.price')}\n            {isDiscount && (\n              <span\n                style={{\n                  marginLeft: '5px',\n                  textDecoration: 'line-through',\n                }}\n              >\n                {`${showPrice(\n                  currencyFormatConvert(price, {\n                    currency,\n                  }),\n                  quoteTableItem,\n                )}`}\n              </span>\n            )}\n            <span\n              style={{\n                marginLeft: '5px',\n                color: isDiscount ? '#2E7D32' : '#212121',\n              }}\n            >\n              {`${showPrice(\n                currencyFormatConvert(offeredPrice, {\n                  currency,\n                }),\n                quoteTableItem,\n              )}`}\n            </span>\n          </Typography>\n\n          <Typography\n            sx={{\n              padding: '12px 0',\n              fontSize: '14px',\n            }}\n          >\n            {b3Lang('quoteDetail.tableCard.qty', { quantity })}\n          </Typography>\n\n          <Typography\n            sx={{\n              fontSize: '14px',\n            }}\n          >\n            {b3Lang('quoteDetail.tableCard.total')}\n            {isDiscount && (\n              <span\n                style={{\n                  marginLeft: '5px',\n                  textDecoration: 'line-through',\n                }}\n              >\n                {`${showPrice(\n                  currencyFormatConvert(total, {\n                    currency,\n                  }),\n                  quoteTableItem,\n                )}`}\n              </span>\n            )}\n            <span\n              style={{\n                marginLeft: '5px',\n                color: isDiscount ? '#2E7D32' : '#212121',\n              }}\n            >\n              {`${showPrice(\n                currencyFormatConvert(totalWithDiscount, {\n                  currency,\n                }),\n                quoteTableItem,\n              )}`}\n            </span>\n          </Typography>\n        </Box>\n      </CardContent>\n    </Box>\n  );\n}\n\nexport default QuoteDetailTableCard;\n","import { forwardRef, Ref, useImperativeHandle, useRef, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, styled, Typography } from '@mui/material';\n\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { TableColumnItem } from '@/components/table/B3Table';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useAppSelector } from '@/store';\nimport { currencyFormatConvert } from '@/utils';\nimport { getBCPrice, getDisplayPrice } from '@/utils/b3Product/b3Product';\n\nimport QuoteDetailTableCard from './QuoteDetailTableCard';\n\ninterface ProductInfoProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: string;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  tax: number | string;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: CustomFieldItems;\n  offeredPrice: number | string;\n}\n\ninterface ListItemProps {\n  node: ProductInfoProps;\n}\n\ninterface ShoppingDetailTableProps {\n  total: number;\n  getQuoteTableDetails: GetRequestList<SearchProps, ProductInfoProps>;\n  isHandleApprove: boolean;\n  getTaxRate: (taxClassId: number, variants: any) => number;\n  displayDiscount: boolean;\n  currency: CurrencyProps;\n}\n\ninterface SearchProps {\n  first?: number;\n  offset?: number;\n}\n\ninterface OptionProps {\n  optionId: number;\n  optionLabel: string;\n  optionName: string;\n  optionValue: string | number;\n}\n\ninterface PaginationTableRefProps extends HTMLInputElement {\n  getList: () => void;\n  setList: (items?: ListItemProps[]) => void;\n  getSelectedValue: () => void;\n}\n\nconst StyledQuoteTableContainer = styled('div')(() => ({\n  backgroundColor: '#FFFFFF',\n  padding: '1rem',\n  width: '100%',\n  border: '1px solid #E0E0E0',\n  boxShadow:\n    '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n  borderRadius: '4px',\n\n  '& tbody': {\n    '& tr': {\n      '& td': {\n        verticalAlign: 'top',\n      },\n      '& td: first-of-type': {\n        verticalAlign: 'inherit',\n      },\n    },\n    '& tr: hover': {\n      '& #shoppingList-actionList': {\n        opacity: 1,\n      },\n    },\n  },\n}));\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nfunction QuoteDetailTable(props: ShoppingDetailTableProps, ref: Ref<unknown>) {\n  const b3Lang = useB3Lang();\n  const { total, getQuoteTableDetails, getTaxRate, isHandleApprove, displayDiscount, currency } =\n    props;\n\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS.isEnableProduct,\n  );\n  const enteredInclusiveTax = useAppSelector(\n    ({ storeConfigs }) => storeConfigs.currencies.enteredInclusiveTax,\n  );\n\n  const paginationTableRef = useRef<PaginationTableRefProps | null>(null);\n\n  const [search, setSearch] = useState<SearchProps>({\n    first: 12,\n    offset: 0,\n  });\n\n  useImperativeHandle(ref, () => ({\n    getList: () => paginationTableRef.current?.getList(),\n    refreshList: () => {\n      setSearch({\n        offset: 0,\n      });\n    },\n  }));\n\n  const showPrice = (price: string, row: CustomFieldItems): string | number => {\n    if (isEnableProduct) {\n      if (isHandleApprove) return price;\n      return getDisplayPrice({\n        price,\n        productInfo: row,\n        showText: b3Lang('quoteDraft.quoteSummary.tbd'),\n      });\n    }\n    return price;\n  };\n  const columnItems: TableColumnItem<ProductInfoProps>[] = [\n    {\n      key: 'Product',\n      title: b3Lang('quoteDetail.table.product'),\n      render: (row: CustomFieldItems) => {\n        const optionsValue = row.options;\n        const productUrl = row.productsSearch?.productUrl;\n\n        return (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'flex-start',\n            }}\n          >\n            <StyledImage\n              src={row.imageUrl || PRODUCT_DEFAULT_IMAGE}\n              alt=\"Product-img\"\n              loading=\"lazy\"\n            />\n            <Box>\n              <Typography\n                variant=\"body1\"\n                color=\"#212121\"\n                onClick={() => {\n                  const {\n                    location: { origin },\n                  } = window;\n                  if (productUrl) {\n                    window.location.href = `${origin}${productUrl}`;\n                  }\n                }}\n                sx={{\n                  cursor: 'pointer',\n                }}\n              >\n                {row.productName}\n              </Typography>\n              <Typography variant=\"body1\" color=\"#616161\">\n                {row.sku}\n              </Typography>\n              {optionsValue.length > 0 && (\n                <Box>\n                  {optionsValue.map(\n                    (option: OptionProps) =>\n                      option.optionLabel && (\n                        <Typography\n                          sx={{\n                            fontSize: '0.75rem',\n                            lineHeight: '1.5',\n                            color: '#455A64',\n                          }}\n                          key={`${option.optionName}_${option.optionLabel}`}\n                        >\n                          {`${option.optionName}: ${option.optionLabel}`}\n                        </Typography>\n                      ),\n                  )}\n                </Box>\n              )}\n              {row.notes && (\n                <Typography\n                  variant=\"body1\"\n                  color=\"#ED6C02\"\n                  sx={{\n                    fontSize: '0.9rem',\n                    whiteSpace: 'pre-wrap',\n                    wordBreak: 'break-word',\n                  }}\n                >\n                  <span>Notes: </span>\n                  {row.notes}\n                </Typography>\n              )}\n            </Box>\n          </Box>\n        );\n      },\n      width: '40%',\n    },\n    {\n      key: 'Price',\n      title: b3Lang('quoteDetail.table.price'),\n      render: (row: CustomFieldItems) => {\n        const {\n          basePrice,\n          offeredPrice,\n          productsSearch: { variants = [], taxClassId },\n        } = row;\n\n        const taxRate = getTaxRate(taxClassId, variants);\n        const taxPrice = enteredInclusiveTax\n          ? (Number(basePrice) * taxRate) / (1 + taxRate)\n          : Number(basePrice) * taxRate;\n        const discountTaxPrice = enteredInclusiveTax\n          ? (Number(offeredPrice) * taxRate) / (1 + taxRate)\n          : Number(offeredPrice) * taxRate;\n\n        const price = getBCPrice(Number(basePrice), taxPrice);\n        const discountPrice = getBCPrice(Number(offeredPrice), discountTaxPrice);\n\n        const isDiscount = Number(basePrice) - Number(offeredPrice) > 0 && displayDiscount;\n        return (\n          <>\n            {isDiscount && (\n              <Typography\n                sx={{\n                  padding: '12px 0 0 0',\n                  textDecoration: 'line-through',\n                }}\n              >\n                {showPrice(\n                  currencyFormatConvert(price, {\n                    currency,\n                    isConversionRate: false,\n                    useCurrentCurrency: !!currency,\n                  }),\n                  row,\n                )}\n              </Typography>\n            )}\n\n            <Typography\n              sx={{\n                padding: isDiscount ? '0' : '12px 0 0 0',\n                color: isDiscount ? '#2E7D32' : '#212121',\n              }}\n            >\n              {showPrice(\n                currencyFormatConvert(discountPrice, {\n                  currency,\n                  isConversionRate: false,\n                  useCurrentCurrency: !!currency,\n                }),\n                row,\n              )}\n            </Typography>\n          </>\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'Qty',\n      title: b3Lang('quoteDetail.table.qty'),\n      render: (row) => (\n        <Typography\n          sx={{\n            padding: '12px 0',\n          }}\n        >\n          {row.quantity}\n        </Typography>\n      ),\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'Total',\n      title: b3Lang('quoteDetail.table.total'),\n      render: (row: CustomFieldItems) => {\n        const {\n          basePrice,\n          quantity,\n          offeredPrice,\n          productsSearch: { variants = [], taxClassId },\n        } = row;\n\n        const taxRate = getTaxRate(taxClassId, variants);\n        const taxPrice = enteredInclusiveTax\n          ? (Number(basePrice) * taxRate) / (1 + taxRate)\n          : Number(basePrice) * taxRate;\n        const discountTaxPrice = enteredInclusiveTax\n          ? (Number(offeredPrice) * taxRate) / (1 + taxRate)\n          : Number(offeredPrice) * taxRate;\n\n        const price = getBCPrice(Number(basePrice), taxPrice);\n        const discountPrice = getBCPrice(Number(offeredPrice), discountTaxPrice);\n        const isDiscount = Number(basePrice) - Number(offeredPrice) > 0 && displayDiscount;\n\n        const total = price * Number(quantity);\n        const totalWithDiscount = discountPrice * Number(quantity);\n\n        return (\n          <Box>\n            {isDiscount && (\n              <Typography\n                sx={{\n                  padding: '12px 0 0 0',\n                  textDecoration: 'line-through',\n                }}\n              >\n                {showPrice(\n                  currencyFormatConvert(total, {\n                    currency,\n                    isConversionRate: false,\n                    useCurrentCurrency: !!currency,\n                  }),\n                  row,\n                )}\n              </Typography>\n            )}\n            <Typography\n              sx={{\n                padding: isDiscount ? '0' : '12px 0 0 0',\n                color: isDiscount ? '#2E7D32' : '#212121',\n              }}\n            >\n              {showPrice(\n                currencyFormatConvert(totalWithDiscount, {\n                  currency,\n                  isConversionRate: false,\n                  useCurrentCurrency: !!currency,\n                }),\n                row,\n              )}\n            </Typography>\n          </Box>\n        );\n      },\n      width: '20%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n  ];\n\n  return (\n    <StyledQuoteTableContainer>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          margin: '0.5rem 0 1rem 0',\n        }}\n      >\n        <Typography\n          sx={{\n            fontSize: '24px',\n          }}\n        >\n          {b3Lang('quoteDetail.table.totalProducts', { total: total || 0 })}\n        </Typography>\n      </Box>\n      <B3PaginationTable\n        ref={paginationTableRef}\n        columnItems={columnItems}\n        rowsPerPageOptions={[12, 24, 36]}\n        getRequestList={getQuoteTableDetails}\n        isCustomRender={false}\n        hover\n        searchParams={search}\n        labelRowsPerPage={b3Lang('quoteDetail.table.perPage')}\n        showBorder={false}\n        itemIsMobileSpacing={0}\n        noDataText={b3Lang('quoteDetail.table.noProducts')}\n        tableKey=\"productId\"\n        renderItem={(row, index) => (\n          <QuoteDetailTableCard\n            len={total || 0}\n            item={row}\n            showPrice={showPrice}\n            itemIndex={index}\n            currency={currency}\n            displayDiscount={displayDiscount}\n            getTaxRate={getTaxRate}\n          />\n        )}\n      />\n    </StyledQuoteTableContainer>\n  );\n}\n\nexport default forwardRef(QuoteDetailTable);\n","import { useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, Card, CardContent, Typography } from '@mui/material';\n\nimport { B3CollapseContainer } from '@/components';\n\ninterface QuoteTermsAndConditionsProps {\n  quoteLegalTerms: string;\n}\n\nexport default function QuoteTermsAndConditions(props: QuoteTermsAndConditionsProps) {\n  const { quoteLegalTerms = '' } = props;\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const b3Lang = useB3Lang();\n\n  const handleOnChange = (open: boolean) => {\n    setIsOpen(open);\n  };\n\n  return (\n    <Card\n      sx={{\n        '.MuiCardContent-root': {\n          maxHeight: isOpen ? '637px' : 'auto',\n        },\n      }}\n    >\n      <CardContent\n        sx={{\n          p: '16px !important',\n        }}\n      >\n        <B3CollapseContainer\n          title={b3Lang('quoteDetail.termsAndConditions')}\n          handleOnChange={handleOnChange}\n        >\n          <Box>\n            <Typography\n              variant=\"body1\"\n              sx={{\n                padding: '16px 0',\n                maxHeight: '545px',\n                whiteSpace: 'pre-wrap',\n                overflow: 'auto',\n              }}\n            >\n              {quoteLegalTerms}\n            </Typography>\n          </Box>\n        </B3CollapseContainer>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, Button, Grid } from '@mui/material';\nimport copy from 'copy-to-clipboard';\nimport { get } from 'lodash-es';\n\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport useScrollBar from '@/hooks/useScrollBar';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  exportB2BQuotePdf,\n  exportBcQuotePdf,\n  getB2BQuoteDetail,\n  getBcQuoteDetail,\n  searchB2BProducts,\n  searchBcProducts,\n} from '@/shared/service/b2b';\nimport {\n  activeCurrencyInfoSelector,\n  isB2BUserSelector,\n  rolePermissionSelector,\n  TaxZoneRates,\n  useAppSelector,\n} from '@/store';\nimport { QuoteExtraFieldsData } from '@/types/quotes';\nimport { snackbar, verifyLevelPermission } from '@/utils';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\nimport { getVariantInfoOOSAndPurchase } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\nimport { getSearchVal } from '@/utils/loginInfo';\n\nimport Message from '../quote/components/Message';\nimport QuoteAttachment from '../quote/components/QuoteAttachment';\nimport QuoteDetailFooter from '../quote/components/QuoteDetailFooter';\nimport QuoteDetailHeader from '../quote/components/QuoteDetailHeader';\nimport QuoteDetailSummary from '../quote/components/QuoteDetailSummary';\nimport QuoteDetailTable from '../quote/components/QuoteDetailTable';\nimport QuoteInfo from '../quote/components/QuoteInfo';\nimport QuoteNote from '../quote/components/QuoteNote';\nimport QuoteTermsAndConditions from '../quote/components/QuoteTermsAndConditions';\nimport { ProductInfoProps } from '../quote/shared/config';\nimport getB2BQuoteExtraFields from '../quote/utils/getQuoteExtraFields';\nimport { handleQuoteCheckout } from '../quote/utils/quoteCheckout';\n\nfunction useData() {\n  const { id = '' } = useParams();\n\n  const {\n    state: { bcLanguage, quoteConfig },\n  } = useContext(GlobalContext);\n  const companyId = useAppSelector(({ company }) => company.companyInfo.id);\n  const emailAddress = useAppSelector(({ company }) => company.customer.emailAddress);\n  const customerGroupId = useAppSelector(({ company }) => company.customer.customerGroupId);\n  const role = useAppSelector(({ company }) => company.customer.role);\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n  const taxZoneRates = useAppSelector(({ global }) => global.taxZoneRates);\n  const enteredInclusiveTax = useAppSelector(\n    ({ storeConfigs }) => storeConfigs.currencies.enteredInclusiveTax,\n  );\n  const isEnableProduct = useAppSelector(\n    ({ global }) => global.blockPendingQuoteNonPurchasableOOS?.isEnableProduct,\n  );\n\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const handleGetProductsById = async (listProducts: ProductInfoProps[]) => {\n    if (listProducts.length > 0) {\n      const productIds: number[] = [];\n\n      listProducts.forEach((item) => {\n        if (!productIds.includes(item.productId)) {\n          productIds.push(item.productId);\n        }\n      });\n\n      const options = { productIds, currencyCode, companyId, customerGroupId };\n\n      const { productsSearch } = await (isB2BUser\n        ? searchB2BProducts(options)\n        : searchBcProducts(options));\n\n      const newProductsSearch = conversionProductsList(productsSearch);\n\n      listProducts.forEach((item) => {\n        const listProduct = item;\n        const productInfo = newProductsSearch.find((search: CustomFieldItems) => {\n          const { id: productId } = search;\n\n          return Number(item.productId) === Number(productId);\n        });\n\n        listProduct.productsSearch = productInfo || {};\n      });\n\n      return listProducts;\n    }\n    return undefined;\n  };\n\n  const location = useLocation();\n\n  const getQuote = async () => {\n    const { search } = location;\n\n    const date = getSearchVal(search, 'date') || '';\n    const data = {\n      id: Number(id),\n      date: date.toString(),\n    };\n\n    const { quote } = await (Number(role) === 99\n      ? getBcQuoteDetail(data)\n      : getB2BQuoteDetail(data));\n\n    return quote;\n  };\n\n  return {\n    id,\n    bcLanguage,\n    quoteConfig,\n    role,\n    emailAddress,\n    isB2BUser,\n    selectCompanyHierarchyId,\n    isAgenting,\n    taxZoneRates,\n    enteredInclusiveTax,\n    isEnableProduct,\n    purchasabilityPermission,\n    handleGetProductsById,\n    getQuote,\n  };\n}\n\nfunction QuoteDetail() {\n  const navigate = useNavigate();\n\n  const {\n    id,\n    bcLanguage,\n    quoteConfig,\n    role,\n    emailAddress,\n    isB2BUser,\n    selectCompanyHierarchyId,\n    isAgenting,\n    taxZoneRates,\n    enteredInclusiveTax,\n    isEnableProduct,\n    purchasabilityPermission,\n    handleGetProductsById,\n    getQuote,\n  } = useData();\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  const [quoteDetail, setQuoteDetail] = useState<any>({});\n  const [productList, setProductList] = useState<any>([]);\n  const [fileList, setFileList] = useState<any>([]);\n  const [isHandleApprove, setHandleApprove] = useState<boolean>(false);\n\n  const [isHideQuoteCheckout, setIsHideQuoteCheckout] = useState<boolean>(true);\n\n  const [quoteSummary, setQuoteSummary] = useState<any>({\n    originalSubtotal: 0,\n    discount: 0,\n    tax: 0,\n    shipping: 0,\n    totalAmount: 0,\n  });\n  const [isRequestLoading, setIsRequestLoading] = useState(false);\n  const [isShowFooter, setIsShowFooter] = useState(false);\n  const [quoteDetailTax, setQuoteDetailTax] = useState(0);\n  const [noBuyerProductName, setNoBuyerProductName] = useState({\n    oos: '',\n    nonPurchasable: '',\n  });\n\n  const [quotePurchasabilityPermissionInfo, setQuotePurchasabilityPermission] = useState({\n    quotePurchasabilityPermission: false,\n    quoteConvertToOrderPermission: false,\n  });\n\n  const [quoteCheckoutLoading, setQuoteCheckoutLoading] = useState<boolean>(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!quoteDetail?.id) return;\n\n    const { quoteConvertToOrderPermission: quoteCheckoutPermissionCode } = b2bPermissionsMap;\n\n    const getPurchasabilityAndConvertToOrderPermission = () => {\n      if (isB2BUser) {\n        const companyId = quoteDetail?.companyId?.id || null;\n        const userEmail = quoteDetail?.contactInfo?.email || '';\n        return {\n          quotePurchasabilityPermission: purchasabilityPermission,\n          quoteConvertToOrderPermission: verifyLevelPermission({\n            code: quoteCheckoutPermissionCode,\n            companyId,\n            userEmail,\n          }),\n        };\n      }\n\n      return {\n        quotePurchasabilityPermission: true,\n        quoteConvertToOrderPermission: true,\n      };\n    };\n\n    const { quotePurchasabilityPermission, quoteConvertToOrderPermission } =\n      getPurchasabilityAndConvertToOrderPermission();\n\n    setQuotePurchasabilityPermission({\n      quotePurchasabilityPermission,\n      quoteConvertToOrderPermission,\n    });\n  }, [isB2BUser, quoteDetail, selectCompanyHierarchyId, purchasabilityPermission]);\n\n  useEffect(() => {\n    let oosErrorList = '';\n    let nonPurchasableErrorList = '';\n\n    productList.forEach((item: CustomFieldItems) => {\n      const buyerInfo = getVariantInfoOOSAndPurchase(item);\n\n      if (buyerInfo?.type && isEnableProduct && !item?.purchaseHandled) {\n        if (buyerInfo.type === 'oos') {\n          oosErrorList += `${item.productName}${oosErrorList ? ',' : ''}`;\n        }\n\n        if (buyerInfo.type === 'non-purchasable') {\n          nonPurchasableErrorList += `${item.productName}${nonPurchasableErrorList ? ',' : ''}`;\n        }\n      }\n    });\n\n    const isHideCheckout = !!oosErrorList || !!nonPurchasableErrorList;\n    if (isEnableProduct && isHandleApprove && isHideCheckout) {\n      if (oosErrorList)\n        snackbar.error(\n          b3Lang('quoteDetail.message.insufficientStock', {\n            ProductName: oosErrorList,\n          }),\n        );\n\n      if (nonPurchasableErrorList)\n        snackbar.error(\n          b3Lang('quoteDetail.message.nonPurchasable', {\n            ProductName: nonPurchasableErrorList,\n          }),\n        );\n    }\n\n    setIsHideQuoteCheckout(isHideCheckout);\n\n    setNoBuyerProductName({\n      oos: oosErrorList,\n      nonPurchasable: nonPurchasableErrorList,\n    });\n    // disabling since b3Lang is a dependency that will trigger rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEnableProduct, isHandleApprove, productList]);\n\n  const proceedingCheckoutFn = useCallback(() => {\n    if (isHideQuoteCheckout) {\n      const { oos, nonPurchasable } = noBuyerProductName;\n      if (oos)\n        snackbar.error(\n          b3Lang('quoteDetail.message.insufficientStock', {\n            ProductName: oos,\n          }),\n        );\n\n      if (nonPurchasable)\n        snackbar.error(\n          b3Lang('quoteDetail.message.nonPurchasable', {\n            ProductName: nonPurchasable,\n          }),\n        );\n    }\n    return isHideQuoteCheckout;\n    // disabling as b3Lang is a dependency that will trigger rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isHideQuoteCheckout, noBuyerProductName]);\n\n  const classRates: TaxZoneRates[] = [];\n  if (taxZoneRates?.length) {\n    const defaultTaxZone = taxZoneRates?.find((taxZone: { id: number }) => taxZone.id === 1);\n    if (defaultTaxZone) {\n      const { rates = [] } = defaultTaxZone;\n\n      if (rates[0] && rates[0].enabled && rates[0].classRates.length) {\n        rates[0].classRates.forEach((rate) => classRates.push(rate));\n      }\n    }\n  }\n\n  const getTaxRate = (taxClassId: number, variants: any) => {\n    if (variants.length) {\n      const taxExclusive = get(variants, '[0].bc_calculated_price.tax_exclusive', 0);\n      const taxInclusive = get(variants, '[0].bc_calculated_price.tax_inclusive', 0);\n      return taxExclusive > 0 ? (taxInclusive - taxExclusive) / taxExclusive : 0;\n    }\n    if (classRates.length) {\n      return (classRates.find((rate) => rate.taxClassId === taxClassId)?.rate || 0) / 100;\n    }\n    return 0;\n  };\n\n  const getQuoteExtraFields = async (currentExtraFields: QuoteExtraFieldsData[]) => {\n    const extraFieldsInfo = await getB2BQuoteExtraFields();\n    const quoteCurrentExtraFields: QuoteExtraFieldsData[] = [];\n    if (extraFieldsInfo.length) {\n      extraFieldsInfo.forEach((item) => {\n        const extraField = item;\n        const currentExtraField = currentExtraFields.find(\n          (field: QuoteExtraFieldsData) => field.fieldName === extraField.name,\n        );\n\n        quoteCurrentExtraFields.push({\n          fieldName: extraField.name || '',\n          fieldValue: currentExtraField?.fieldValue || extraField.default,\n        });\n      });\n    }\n\n    return quoteCurrentExtraFields;\n  };\n\n  const getQuoteDetail = async () => {\n    setIsRequestLoading(true);\n    setIsShowFooter(false);\n\n    try {\n      const quote = await getQuote();\n      const productsWithMoreInfo = await handleGetProductsById(quote.productsList).catch((err) => {\n        snackbar.error(err);\n\n        return undefined;\n      });\n      const quoteExtraFieldInfos = await getQuoteExtraFields(quote.extraFields);\n\n      setQuoteDetail({\n        ...quote,\n        extraFields: quoteExtraFieldInfos,\n      });\n      setQuoteSummary({\n        originalSubtotal: quote.subtotal,\n        discount: quote.discount,\n        tax: quote.taxTotal,\n        shipping: quote.shippingTotal,\n        totalAmount: quote.totalAmount,\n      });\n      setProductList(productsWithMoreInfo);\n\n      if (Number(quote.shippingTotal) === 0) {\n        setQuoteDetailTax(Number(quote.taxTotal));\n      } else {\n        let taxPrice = 0;\n        productsWithMoreInfo?.forEach((product) => {\n          const {\n            quantity,\n            offeredPrice,\n            productsSearch: { variants = [], taxClassId },\n          } = product;\n\n          const taxRate = getTaxRate(taxClassId, variants);\n          taxPrice += enteredInclusiveTax\n            ? ((Number(offeredPrice) * taxRate) / (1 + taxRate)) * Number(quantity)\n            : Number(offeredPrice) * taxRate * Number(quantity);\n        });\n\n        setQuoteDetailTax(taxPrice);\n      }\n\n      const {\n        backendAttachFiles = [],\n        storefrontAttachFiles = [],\n        salesRep,\n        salesRepEmail,\n      } = quote;\n\n      setHandleApprove(!!salesRep || !!salesRepEmail);\n\n      const newFileList: CustomFieldItems[] = [];\n      storefrontAttachFiles.forEach((file: CustomFieldItems) => {\n        newFileList.push({\n          fileName: file.fileName,\n          fileType: file.fileType,\n          fileUrl: file.fileUrl,\n          id: file.id,\n          hasDelete: quoteDetail.status !== 4,\n          title: b3Lang('quoteDetail.uploadedByCustomer', {\n            createdBy: file.createdBy,\n          }),\n        });\n      });\n\n      backendAttachFiles.forEach((file: CustomFieldItems) => {\n        newFileList.push({\n          fileName: file.fileName,\n          fileType: file.fileType,\n          fileUrl: file.fileUrl,\n          id: file.id,\n          title: b3Lang('quoteDetail.uploadedBySalesRep', {\n            createdBy: file.createdBy,\n          }),\n        });\n      });\n\n      setFileList(newFileList);\n\n      return quote;\n    } catch (err: any) {\n      snackbar.error(err);\n      throw err;\n    } finally {\n      setIsRequestLoading(false);\n      setIsShowFooter(true);\n    }\n  };\n\n  const fetchPdfUrl = async (bool: boolean) => {\n    setIsRequestLoading(true);\n    const { id, createdAt } = quoteDetail;\n    try {\n      const data = {\n        quoteId: Number(id),\n        createdAt,\n        isPreview: bool,\n        lang: bcLanguage,\n      };\n\n      const fn = Number(role) === 99 ? exportBcQuotePdf : exportB2BQuotePdf;\n\n      const quotePdf = await fn(data);\n\n      if (quotePdf) {\n        return {\n          url: quotePdf.quoteFrontendPdf.url,\n          content: quotePdf.quoteFrontendPdf.content,\n        };\n      }\n    } catch (err: any) {\n      snackbar.error(err);\n    }\n    return {\n      url: '',\n      content: '',\n    };\n  };\n\n  const exportPdf = async () => {\n    try {\n      const { url: quotePdfUrl } = await fetchPdfUrl(false);\n      if (quotePdfUrl) {\n        window.open(`${quotePdfUrl}`, '_blank');\n      }\n    } catch (err: any) {\n      snackbar.error(err);\n    } finally {\n      setIsRequestLoading(false);\n    }\n  };\n\n  const printQuote = async () => {\n    try {\n      const { content } = await fetchPdfUrl(true);\n\n      const iframe = document.createElement('iframe');\n      iframe.setAttribute('style', 'display:none;');\n      document.getElementById('bundle-container')?.appendChild(iframe);\n      iframe.contentDocument?.open();\n      iframe.contentDocument?.write(content);\n      iframe.contentDocument?.close();\n      setIsRequestLoading(false);\n      iframe.contentWindow?.print();\n    } catch (err: any) {\n      snackbar.error(err);\n    }\n  };\n\n  const getQuoteTableDetails = async (params: any) => {\n    let allProductsList: any[] = productList;\n\n    if (allProductsList.length === 0) {\n      const quote = await getQuoteDetail();\n      allProductsList = quote?.productsList || [];\n    }\n\n    const startIndex = Number(params.offset);\n    const endIndex = Number(params.first) + startIndex;\n\n    if (!allProductsList.length) {\n      return {\n        edges: [],\n        totalCount: 0,\n      };\n    }\n    const list = allProductsList.slice(startIndex, endIndex);\n\n    return {\n      edges: list,\n      totalCount: allProductsList.length,\n    };\n  };\n\n  useEffect(() => {\n    const { state } = location;\n\n    if (!state) return;\n    const tip = () => (\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <Box\n          sx={{\n            mr: '15px',\n          }}\n        >\n          {Number(role) === 100\n            ? b3Lang('quoteDetail.submittedQuote')\n            : b3Lang('quoteDetail.quoteSubmitted')}\n        </Box>\n        <Button\n          onClick={() => {\n            if (Number(role) === 100) {\n              copy(window.location.href);\n              snackbar.success(b3Lang('quoteDetail.copySuccessful'));\n            } else {\n              navigate('/quotes');\n            }\n          }}\n          variant=\"text\"\n          sx={{\n            color: '#ffffff',\n            textAlign: 'left',\n            padding: 0,\n          }}\n        >\n          {Number(role) === 100\n            ? b3Lang('quoteDetail.copyQuoteLink')\n            : b3Lang('quoteDetail.reviewAllQuotes')}\n        </Button>\n      </Box>\n    );\n\n    setTimeout(() => {\n      snackbar.success('', {\n        jsx: () => tip(),\n        isClose: true,\n        duration: 30000,\n      });\n    }, 10);\n    location.state = null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location, navigate, role]);\n\n  const quoteGotoCheckout = async () => {\n    try {\n      setQuoteCheckoutLoading(true);\n      await handleQuoteCheckout({\n        quoteId: id,\n        proceedingCheckoutFn,\n        role,\n        location,\n        navigate,\n      });\n    } finally {\n      setQuoteCheckoutLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (location.search.includes('isCheckout') && id) {\n      quoteGotoCheckout();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, location, proceedingCheckoutFn]);\n\n  const isAutoEnableQuoteCheckout = useMemo(() => {\n    const isAutoEnable =\n      quoteConfig.find((item) => item.key === 'quote_auto_quoting')?.value === '1';\n\n    if (!isAutoEnable && !isHandleApprove) return false;\n\n    return true;\n  }, [quoteConfig, isHandleApprove]);\n\n  const isEnableProductShowCheckout = () => {\n    if (isEnableProduct) {\n      if (isHandleApprove && isHideQuoteCheckout) return true;\n      if (!isHideQuoteCheckout) return true;\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const quoteAndExtraFieldsInfo = useMemo(() => {\n    const currentExtraFields = quoteDetail?.extraFields?.map(\n      (field: { fieldName: string; fieldValue: string | number }) => ({\n        fieldName: field.fieldName,\n        value: field.fieldValue,\n      }),\n    );\n\n    return {\n      info: {\n        quoteTitle: quoteDetail?.quoteTitle || '',\n        referenceNumber: quoteDetail?.referenceNumber || '',\n      },\n      extraFields: currentExtraFields || [],\n      recipients: quoteDetail?.recipients || [],\n    };\n  }, [quoteDetail]);\n\n  useScrollBar(false);\n\n  const { quotePurchasabilityPermission, quoteConvertToOrderPermission } =\n    quotePurchasabilityPermissionInfo;\n\n  return (\n    <B3Spin isSpinning={isRequestLoading || quoteCheckoutLoading}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n        }}\n      >\n        <QuoteDetailHeader\n          status={quoteDetail.status}\n          quoteNumber={quoteDetail.quoteNumber}\n          issuedAt={quoteDetail.createdAt}\n          expirationDate={quoteDetail.expiredAt}\n          exportPdf={exportPdf}\n          printQuote={printQuote}\n          role={role}\n          salesRepInfo={quoteDetail.salesRepInfo}\n        />\n\n        <Box\n          sx={{\n            marginTop: '1rem',\n          }}\n        >\n          <QuoteInfo\n            quoteAndExtraFieldsInfo={quoteAndExtraFieldsInfo}\n            contactInfo={quoteDetail.contactInfo}\n            shippingAddress={quoteDetail.shippingAddress}\n            billingAddress={quoteDetail.billingAddress}\n          />\n        </Box>\n\n        <Grid\n          container\n          spacing={isMobile ? 2 : 0}\n          rowSpacing={0}\n          sx={{\n            overflow: 'auto',\n            flexWrap: isMobile ? 'wrap' : 'nowrap',\n            paddingBottom: '20px',\n            marginBottom: isMobile ? '6rem' : 0,\n            marginTop: !isMobile ? '1rem' : 0,\n            '@media print': {\n              overflow: 'hidden',\n            },\n          }}\n        >\n          <Grid\n            item\n            xs={isMobile ? 12 : 8}\n            rowSpacing={0}\n            sx={\n              isMobile\n                ? {\n                    flexBasis: '100%',\n                    pl: '16px',\n                  }\n                : {\n                    mr: '16px',\n                  }\n            }\n          >\n            <Box\n              sx={\n                isMobile\n                  ? {\n                      flexBasis: '100%',\n                    }\n                  : {}\n              }\n            >\n              <QuoteDetailTable\n                total={productList.length}\n                currency={quoteDetail.currency}\n                isHandleApprove={isHandleApprove}\n                getQuoteTableDetails={getQuoteTableDetails}\n                getTaxRate={getTaxRate}\n                displayDiscount={quoteDetail.displayDiscount}\n              />\n            </Box>\n          </Grid>\n\n          <Grid\n            item\n            xs={isMobile ? 12 : 4}\n            rowSpacing={0}\n            sx={\n              isMobile\n                ? {\n                    flexBasis: '100%',\n                  }\n                : {\n                    pl: 0,\n                  }\n            }\n          >\n            <Box\n              sx={{\n                marginBottom: '1rem',\n              }}\n            >\n              <QuoteDetailSummary\n                isHideQuoteCheckout={isHideQuoteCheckout}\n                quoteSummary={quoteSummary}\n                quoteDetailTax={quoteDetailTax}\n                status={quoteDetail.status}\n                quoteDetail={quoteDetail}\n              />\n            </Box>\n\n            {quoteDetail.notes && (\n              <Box\n                sx={{\n                  marginBottom: '1rem',\n                  displayPrint: 'none',\n                }}\n              >\n                <QuoteNote quoteNotes={quoteDetail.notes} />\n              </Box>\n            )}\n\n            <Box\n              sx={{\n                marginBottom: '1rem',\n                displayPrint: 'none',\n              }}\n            >\n              <Message\n                id={id}\n                status={quoteDetail.status}\n                isB2BUser={isB2BUser}\n                email={emailAddress || ''}\n                msgs={quoteDetail?.trackingHistory || []}\n              />\n            </Box>\n\n            <Box\n              sx={{\n                marginBottom: '1rem',\n                displayPrint: 'none',\n              }}\n            >\n              <QuoteAttachment\n                allowUpload={Number(quoteDetail.status) !== 4}\n                quoteId={quoteDetail.id}\n                status={quoteDetail.status}\n                defaultFileList={fileList}\n              />\n            </Box>\n\n            {quoteDetail.legalTerms && (\n              <Box\n                sx={{\n                  displayPrint: 'none',\n                }}\n              >\n                <QuoteTermsAndConditions quoteLegalTerms={quoteDetail.legalTerms} />\n              </Box>\n            )}\n          </Grid>\n        </Grid>\n\n        {quoteConvertToOrderPermission &&\n          quotePurchasabilityPermission &&\n          Number(quoteDetail.status) !== 4 &&\n          isShowFooter &&\n          quoteDetail?.allowCheckout &&\n          isAutoEnableQuoteCheckout &&\n          isEnableProductShowCheckout() && (\n            <QuoteDetailFooter\n              quoteId={quoteDetail.id}\n              role={role}\n              isAgenting={isAgenting}\n              status={quoteDetail.status}\n              proceedingCheckoutFn={proceedingCheckoutFn}\n            />\n          )}\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default QuoteDetail;\n"],"names":["toggleSelection","selection","active","ranges","i","range","deselectCurrent","require$$0","clipboardToIE11Formatting","defaultMessage","format","message","copyKey","copy","text","options","debug","reselectPrevious","mark","success","e","successful","err","copyToClipboard","_interopRequireDefault","ArrowUpward","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","ChatMessage","msg","isEndMessage","isCustomer","b3Lang","useB3Lang","jsxs","Box","jsx","Tooltip","formatDistanceStrict","DateMessage","displayExtendedFormat","Message","msgs","id","isB2BUser","email","status","globalDispatch","useContext","GlobalContext","primaryColor","useTheme","messagesEndRef","useRef","changeReadRef","messages","setMessages","useState","read","setRead","setMessage","loading","setLoading","quotesUpdateMessageActionsPermission","useAppSelector","rolePermissionSelector","quotesUpdateMessagePermission","convertedMsgs","nextMsg","getNewMsgs","readNum","index","_a","_b","_c","_d","_e","_f","_g","_h","_i","title","useMemo","useEffect","updateMsgs","fn","updateB2BQuote","updateBCQuote","trackingHistory","storeHash","updateMessage","handleOnChange","useCallback","open","Card","CardContent","B3CollapseContainer","item","B3Spin","TextField","event","ArrowUpwardIcon","handleQuoteCheckout","role","proceedingCheckoutFn","location","quoteId","navigate","store","setQuoteDetailToCheckoutUrl","hidePriceFromGuests","getBCStorefrontProductSettings","bcQuoteCheckout","b2bQuoteCheckout","date","getSearchVal","res","setQuoteToStorage","checkoutUrl","cartId","platform","attemptCheckoutLoginAndRedirect","b2bLogger","QuoteDetailFooter","props","isAgenting","isMobile","useMobile","useLocation","useNavigate","containerStyle","CustomButton","StyledCreateName","styled","QuoteDetailHeader","quoteNumber","issuedAt","expirationDate","exportPdf","printQuote","salesRepInfo","backgroundColor","CustomStyleContext","customColor","getContrastColor","gridOptions","xs","Fragment","ArrowBackIosNew","Grid","Typography","b3HexToRgb","QuoteStatus","displayFormat","QuoteDetailSummary","originalSubtotal","discount","tax","shipping","totalAmount","quoteDetailTax","quoteDetail","isHideQuoteCheckout","enteredInclusiveTax","storeConfigs","showInclusiveTaxPrice","global","getCurrentPrice","price","priceFormat","currencyFormatConvert","shippingAndTax","showPrice","subtotalPrice","quotedSubtotal","StyledImage","QuoteDetailTableCard","quoteTableItem","len","itemIndex","getTaxRate","currency","displayDiscount","basePrice","quantity","imageUrl","productName","sku","notes","offeredPrice","productUrl","variants","taxClassId","taxRate","taxPrice","discountTaxPrice","getBCPrice","discountPrice","isDiscount","total","totalWithDiscount","PRODUCT_DEFAULT_IMAGE","origin","option","StyledQuoteTableContainer","QuoteDetailTable","ref","getQuoteTableDetails","isHandleApprove","isEnableProduct","paginationTableRef","search","setSearch","useImperativeHandle","row","getDisplayPrice","columnItems","optionsValue","B3PaginationTable","forwardRef","QuoteTermsAndConditions","quoteLegalTerms","isOpen","setIsOpen","useData","useParams","bcLanguage","quoteConfig","companyId","company","emailAddress","customerGroupId","isB2BUserSelector","selectCompanyHierarchyId","b2bFeatures","currencyCode","activeCurrencyInfoSelector","taxZoneRates","purchasabilityPermission","handleGetProductsById","listProducts","productIds","productsSearch","searchB2BProducts","searchBcProducts","newProductsSearch","conversionProductsList","listProduct","productInfo","productId","data","quote","getBcQuoteDetail","getB2BQuoteDetail","QuoteDetail","getQuote","setQuoteDetail","productList","setProductList","fileList","setFileList","setHandleApprove","setIsHideQuoteCheckout","quoteSummary","setQuoteSummary","isRequestLoading","setIsRequestLoading","isShowFooter","setIsShowFooter","setQuoteDetailTax","noBuyerProductName","setNoBuyerProductName","quotePurchasabilityPermissionInfo","setQuotePurchasabilityPermission","quoteCheckoutLoading","setQuoteCheckoutLoading","quoteCheckoutPermissionCode","b2bPermissionsMap","getPurchasabilityAndConvertToOrderPermission","userEmail","verifyLevelPermission","quotePurchasabilityPermission","quoteConvertToOrderPermission","oosErrorList","nonPurchasableErrorList","buyerInfo","getVariantInfoOOSAndPurchase","isHideCheckout","snackbar","oos","nonPurchasable","classRates","defaultTaxZone","taxZone","rates","rate","taxExclusive","get","taxInclusive","getQuoteExtraFields","currentExtraFields","extraFieldsInfo","getB2BQuoteExtraFields","quoteCurrentExtraFields","extraField","currentExtraField","field","getQuoteDetail","productsWithMoreInfo","quoteExtraFieldInfos","product","backendAttachFiles","storefrontAttachFiles","salesRep","salesRepEmail","newFileList","file","fetchPdfUrl","bool","createdAt","quotePdf","exportBcQuotePdf","exportB2BQuotePdf","quotePdfUrl","content","iframe","params","allProductsList","startIndex","endIndex","state","tip","Button","quoteGotoCheckout","isAutoEnableQuoteCheckout","isEnableProductShowCheckout","quoteAndExtraFieldsInfo","useScrollBar","QuoteInfo","QuoteNote","QuoteAttachment"],"mappings":"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","x_google_ignoreList":[0,1,2]}