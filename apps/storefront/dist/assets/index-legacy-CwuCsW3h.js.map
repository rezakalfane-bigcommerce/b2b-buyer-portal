{"version":3,"file":"index-legacy-CwuCsW3h.js","sources":["../../src/pages/UserManagement/index.tsx","../../src/pages/UserManagement/config.ts","../../src/pages/UserManagement/getUserExtraFields.ts","../../src/pages/UserManagement/AddEditUser.tsx","../../src/pages/UserManagement/UserItemCard.tsx"],"sourcesContent":["import { useEffect, useMemo, useRef, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Box } from '@mui/material';\n\nimport B3Dialog from '@/components/B3Dialog';\nimport B3Filter from '@/components/filter/B3Filter';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { useCardListColumn, useMobile, useTableRef } from '@/hooks';\nimport { deleteUsers, getUsers } from '@/shared/service/b2b';\nimport { rolePermissionSelector, useAppSelector } from '@/store';\nimport { CustomerRole } from '@/types';\nimport { snackbar } from '@/utils';\nimport { verifyCreatePermission } from '@/utils/b3CheckPermissions';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\n\nimport B3AddEditUser from './AddEditUser';\nimport { FilterProps, getFilterMoreList, UsersList } from './config';\nimport { UserItemCard } from './UserItemCard';\n\ninterface RefCurrentProps extends HTMLInputElement {\n  handleOpenAddEditUserClick: (type: string, data?: UsersList) => void;\n}\n\ninterface RoleProps {\n  role: string;\n  companyRoleId: string | number;\n}\nfunction UserManagement() {\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n\n  const [userItem, setUserItem] = useState<UsersList>({\n    createdAt: 0,\n    email: '',\n    firstName: '',\n    id: '',\n    lastName: '',\n    phone: '',\n    role: 0,\n    updatedAt: 0,\n    extraFields: [],\n    companyRoleName: '',\n    companyRoleId: '',\n    masqueradingCompanyId: '',\n    companyInfo: null,\n  });\n  const b3Lang = useB3Lang();\n\n  const [isMobile] = useMobile();\n\n  const isExtraLarge = useCardListColumn();\n\n  const salesRepCompanyId = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.id);\n  const role = useAppSelector(({ company }) => company.customer.role);\n  const companyInfo = useAppSelector(({ company }) => company.companyInfo);\n\n  const companyId = Number(role) === CustomerRole.SUPER_ADMIN ? salesRepCompanyId : companyInfo?.id;\n\n  const b2bPermissions = useAppSelector(rolePermissionSelector);\n  const { selectCompanyHierarchyId } = useAppSelector(\n    ({ company }) => company.companyHierarchyInfo,\n  );\n\n  const isEnableBtnPermissions = b2bPermissions.userCreateActionsPermission;\n\n  const customItem = useMemo(() => {\n    const { userCreateActionsPermission } = b2bPermissionsMap;\n\n    const isCreatePermission = verifyCreatePermission(\n      userCreateActionsPermission,\n      Number(selectCompanyHierarchyId),\n    );\n    return {\n      isEnabled: isEnableBtnPermissions && isCreatePermission,\n      customLabel: b3Lang('userManagement.addUser'),\n    };\n\n    // ignore b3Lang due it's function that doesn't not depend on any reactive value\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEnableBtnPermissions, selectCompanyHierarchyId]);\n\n  const addEditUserRef = useRef<RefCurrentProps | null>(null);\n  const [paginationTableRef] = useTableRef();\n\n  const initSearch = {\n    search: '',\n    companyRoleId: '',\n    companyId,\n    q: '',\n  };\n  const filterMoreInfo = getFilterMoreList(b3Lang);\n\n  const [filterSearch, setFilterSearch] = useState<Partial<FilterProps>>(initSearch);\n\n  const [translatedFilterInfo, setTranslatedFilterInfo] =\n    useState<CustomFieldItems[]>(filterMoreInfo);\n  const [valueName, setValueName] = useState<string>('');\n\n  const fetchList: GetRequestList<Partial<FilterProps>, UsersList> = async (params) => {\n    const data = await getUsers(params);\n\n    const {\n      users: { edges, totalCount },\n    } = data;\n\n    return {\n      edges,\n      totalCount,\n    };\n  };\n\n  const initSearchList = () => {\n    paginationTableRef.current?.refresh();\n  };\n\n  const handleGetTranslatedFilterInfo = () => {\n    const translatedFilterInfo = filterMoreInfo.map((element: CustomFieldItems) => {\n      const translatedItem = element;\n      const translatedOptions = element.options?.map((option: CustomFieldItems) => {\n        const elementOption = option;\n        elementOption.label = b3Lang(option.idLang);\n        return option;\n      });\n\n      translatedItem.options = translatedOptions;\n      translatedItem.setValueName = setValueName;\n      translatedItem.default = filterSearch.companyRoleId;\n      translatedItem.defaultName = filterSearch.companyRoleId ? valueName : '';\n\n      return element;\n    });\n\n    setTranslatedFilterInfo(translatedFilterInfo);\n\n    return translatedFilterInfo;\n  };\n\n  const handleChange = (_: string, value: string) => {\n    const search = {\n      ...filterSearch,\n      q: value,\n    };\n    setFilterSearch(search);\n  };\n\n  const handleFilterChange = (value: RoleProps) => {\n    const search = {\n      ...filterSearch,\n      companyRoleId: value.companyRoleId,\n      offset: 0,\n    };\n    setFilterSearch(search);\n  };\n\n  const handleAddUserClick = () => {\n    addEditUserRef.current?.handleOpenAddEditUserClick('add');\n  };\n\n  const handleEdit = (userInfo: UsersList) => {\n    addEditUserRef.current?.handleOpenAddEditUserClick('edit', userInfo);\n  };\n\n  const handleDelete = (row: UsersList) => {\n    setUserItem(row);\n    setDeleteOpen(true);\n  };\n\n  const handleCancelClick = () => {\n    setDeleteOpen(false);\n  };\n\n  const handleDeleteUserClick = async (row: UsersList | undefined) => {\n    if (!row) return;\n    try {\n      setIsRequestLoading(true);\n      handleCancelClick();\n      await deleteUsers({\n        userId: row.id || '',\n        companyId: selectCompanyHierarchyId || companyId,\n      });\n      snackbar.success(b3Lang('userManagement.deleteUserSuccessfully'));\n    } finally {\n      setIsRequestLoading(false);\n      initSearchList();\n    }\n  };\n\n  useEffect(() => {\n    handleGetTranslatedFilterInfo();\n\n    // disabling because we don't want to run this effect on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterSearch, filterSearch.companyRoleId]);\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: 1,\n        }}\n      >\n        <B3Filter\n          filterMoreInfo={translatedFilterInfo}\n          handleChange={handleChange}\n          handleFilterChange={handleFilterChange}\n          customButtonConfig={customItem}\n          handleFilterCustomButtonClick={handleAddUserClick}\n        />\n        <B3PaginationTable\n          ref={paginationTableRef}\n          columnItems={[]}\n          rowsPerPageOptions={[12, 24, 36]}\n          getRequestList={fetchList}\n          searchParams={filterSearch || {}}\n          isCustomRender\n          itemXs={isExtraLarge ? 3 : 4}\n          requestLoading={setIsRequestLoading}\n          renderItem={(row) => (\n            <UserItemCard\n              key={row.id || ''}\n              item={row}\n              onEdit={handleEdit}\n              onDelete={handleDelete}\n            />\n          )}\n        />\n        <B3AddEditUser\n          companyId={selectCompanyHierarchyId || companyId}\n          renderList={initSearchList}\n          ref={addEditUserRef}\n        />\n        <B3Dialog\n          isOpen={deleteOpen}\n          title={b3Lang('userManagement.deleteUser')}\n          leftSizeBtn={b3Lang('userManagement.cancel')}\n          rightSizeBtn={b3Lang('userManagement.delete')}\n          handleLeftClick={handleCancelClick}\n          handRightClick={handleDeleteUserClick}\n          row={userItem}\n          rightStyleBtn={{\n            color: '#D32F2F',\n          }}\n          isShowBordered={false}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: isMobile ? 'center%' : 'start',\n              width: isMobile ? '100%' : '450px',\n              height: '100%',\n            }}\n          >\n            {b3Lang('userManagement.confirmDelete')}\n          </Box>\n        </B3Dialog>\n      </Box>\n    </B3Spin>\n  );\n}\n\nexport default UserManagement;\n","import { LangFormatFunction } from '@b3/lang';\n\nimport { CompanyInfoTypes } from '@/types';\n\ninterface ExtraFieldsProps {\n  fieldName: string;\n  fieldValue: string | number;\n}\n\ninterface UsersListItems {\n  createdAt: number;\n  email: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  phone: string;\n  role: number;\n  companyRoleName: string;\n  companyRoleId: number | string;\n  updatedAt: number;\n  extraFields: ExtraFieldsProps[];\n  masqueradingCompanyId: number | string | null;\n  companyInfo: CompanyInfoTypes | null;\n  [key: string]: string | null | number | ExtraFieldsProps[] | CompanyInfoTypes;\n}\n\ninterface FilterProps {\n  first: number;\n  offset: number;\n  search: string;\n  role: number | string;\n  companyId: number | string;\n  addChannel: boolean;\n  [key: string]: string | null | number | boolean | ExtraFieldsProps[];\n}\n\ntype UsersList = UsersListItems;\n\ninterface UsersFilesProps {\n  [key: string]: string | boolean | number | Array<any> | boolean | undefined;\n  name: string;\n}\n\ninterface UserRoleProps {\n  label: string;\n  value: number;\n  idLang: string;\n  name: string;\n}\n\ninterface RoleCompanyInfoProps {\n  id: number;\n  name: string;\n}\n\ninterface RoleProps {\n  id: string;\n  name: string;\n  roleLevel: number;\n  roleType: number;\n  companyInfo: RoleCompanyInfoProps;\n}\n\ninterface UserRoleListProps {\n  node: RoleProps;\n}\n\nconst getUserRole = () => {\n  const userRole: Array<UserRoleProps> = [\n    {\n      label: 'Admin',\n      name: 'Admin',\n      value: 0,\n      idLang: 'userManagement.userRole.admin',\n    },\n    {\n      label: 'Senior buyer',\n      name: 'Senior Buyer',\n      value: 1,\n      idLang: 'userManagement.userRole.seniorBuyer',\n    },\n    {\n      label: 'Junior buyer',\n      name: 'Junior Buyer',\n      value: 2,\n      idLang: 'userManagement.userRole.juniorBuyer',\n    },\n  ];\n\n  return userRole;\n};\n\nconst getFilterMoreList = (b3Lang: LangFormatFunction) => {\n  return [\n    {\n      name: 'companyRoleId',\n      label: b3Lang('userManagement.config.userRole'),\n      required: false,\n      default: '',\n      defaultName: '',\n      fieldType: 'roleAutocomplete',\n      xs: 12,\n      disabled: false,\n      variant: 'filled',\n      size: 'small',\n    },\n  ] satisfies [unknown];\n};\n\nconst getUsersFiles = (type: string, b3Lang: LangFormatFunction, disabledUserRole = false) => {\n  const roleArr = getFilterMoreList(b3Lang);\n  roleArr[0].required = true;\n  roleArr[0].disabled = disabledUserRole;\n\n  const usersFiles = [\n    ...roleArr,\n    {\n      name: 'email',\n      label: b3Lang('userManagement.config.email'),\n      required: true,\n      fieldType: 'text',\n      xs: 12,\n      disabled: type === 'edit',\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'firstName',\n      label: b3Lang('userManagement.config.firstName'),\n      required: true,\n      default: '',\n      fieldType: 'text',\n      xs: 6,\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'lastName',\n      label: b3Lang('userManagement.config.lastName'),\n      required: true,\n      fieldType: 'text',\n      xs: 6,\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n    {\n      name: 'phone',\n      label: b3Lang('userManagement.config.phoneNumber'),\n      required: false,\n      fieldType: 'text',\n      xs: 12,\n      default: '',\n      variant: 'filled',\n      size: 'small',\n    },\n  ];\n\n  return usersFiles;\n};\n\ntype EmailError = {\n  [k: number]: string;\n};\n\nconst emailError: EmailError = {\n  3: 'global.emailValidate.multipleCustomer',\n  4: 'global.emailValidate.companyUsed',\n  5: 'global.emailValidate.alreadyExits',\n  6: 'global.emailValidate.usedSuperAdmin',\n};\n\nexport { emailError, getFilterMoreList, getUserRole, getUsersFiles };\n\nexport type {\n  FilterProps,\n  UserRoleProps,\n  UsersFilesProps,\n  UsersList,\n  ExtraFieldsProps,\n  UserRoleListProps,\n  RoleCompanyInfoProps,\n  RoleProps,\n};\n","import { getUsersExtraFieldsInfo } from '@/shared/service/b2b';\nimport b2bLogger from '@/utils/b3Logger';\n\ninterface B2bExtraFieldsProps {\n  defaultValue: string;\n  fieldName: string;\n  fieldType: 0 | 1 | 2 | 3;\n  isRequired: boolean;\n  labelName: string;\n  listOfValue: null | Array<string>;\n  maximumLength: string | number | null;\n  maximumValue: string | number | null;\n  numberOfRows: string | number | null;\n  visibleToEnduser: boolean;\n}\n\ninterface FieldsOptionProps {\n  label: string;\n  value: string | number;\n}\n\ninterface FormattedItemsProps {\n  [key: string]: string | boolean | number | Array<any> | boolean | undefined;\n  name: string;\n}\n\nconst FIELD_TYPE = {\n  0: 'text',\n  1: 'multiline',\n  2: 'number',\n  3: 'dropdown',\n};\n\nconst handleConversionExtraItemFormat = (userExtraFields: B2bExtraFieldsProps[]) => {\n  const formattedUserExtraFields: FormattedItemsProps[] = userExtraFields.map(\n    (item: B2bExtraFieldsProps) => {\n      const { listOfValue } = item;\n      const type = FIELD_TYPE[item.fieldType];\n\n      const currentItems: FormattedItemsProps = {\n        isExtraFields: true,\n        name: item.fieldName,\n        label: item.labelName,\n        required: item.isRequired,\n        default: item.defaultValue || '',\n        fieldType: type,\n        xs: 12,\n        variant: 'filled',\n        size: 'small',\n      };\n\n      switch (type) {\n        case 'dropdown':\n          if (listOfValue) {\n            const options: FieldsOptionProps[] = listOfValue?.map((option: string) => ({\n              label: option,\n              value: option,\n            }));\n\n            if (options.length > 0) {\n              currentItems.options = options;\n            }\n          }\n\n          break;\n        case 'number':\n          currentItems.max = item.maximumValue || '';\n          break;\n        case 'mutiline':\n          currentItems.rows = item.numberOfRows || '';\n          break;\n        default:\n          currentItems.maxLength = item.maximumLength || '';\n          break;\n      }\n\n      return currentItems;\n    },\n  );\n\n  return formattedUserExtraFields;\n};\n\nconst getB2BUserExtraFields = async () => {\n  let userExtraFieldsList: FormattedItemsProps[] = [];\n  try {\n    const { userExtraFields } = await getUsersExtraFieldsInfo();\n    const visibleFields = userExtraFields.filter(\n      (item: B2bExtraFieldsProps) => item.visibleToEnduser,\n    );\n\n    const formattedUserExtraFields = handleConversionExtraItemFormat(visibleFields);\n\n    userExtraFieldsList = formattedUserExtraFields;\n  } catch (err) {\n    b2bLogger.error(err);\n  }\n\n  return userExtraFieldsList;\n};\n\nexport default getB2BUserExtraFields;\n","import { forwardRef, Ref, useEffect, useImperativeHandle, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useB3Lang } from '@b3/lang';\nimport concat from 'lodash-es/concat';\n\nimport { B3CustomForm } from '@/components';\nimport B3Dialog from '@/components/B3Dialog';\nimport { addOrUpdateUsers, checkUserEmail } from '@/shared/service/b2b';\nimport { useAppSelector } from '@/store';\nimport { UserTypes } from '@/types';\nimport { channelId, snackbar } from '@/utils';\n\nimport {\n  emailError,\n  ExtraFieldsProps,\n  FilterProps,\n  getUsersFiles,\n  UsersFilesProps,\n  UsersList,\n} from './config';\nimport getB2BUserExtraFields from './getUserExtraFields';\n\ninterface AddEditUserProps {\n  companyId: string | number;\n  renderList: () => void;\n}\n\ninterface SelectedDataProps {\n  [key: string]: string | number;\n}\n\nfunction AddEditUser({ companyId, renderList }: AddEditUserProps, ref: Ref<unknown> | undefined) {\n  const b2bId = useAppSelector(({ company }) => company.customer.b2bId);\n\n  const [open, setOpen] = useState<boolean>(false);\n  const [type, setType] = useState<string>('');\n\n  const [editData, setEditData] = useState<UsersList | null>(null);\n\n  const [addUpdateLoading, setAddUpdateLoading] = useState<boolean>(false);\n\n  const [usersFiles, setUsersFiles] = useState<Array<UsersFilesProps>>([]);\n  const [userExtrafields, setUserExtrafields] = useState<UsersFilesProps[] | []>([]);\n\n  const b3Lang = useB3Lang();\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    clearErrors,\n    setValue,\n    setError,\n  } = useForm({\n    mode: 'onSubmit',\n  });\n\n  const handleGetUsersFiles = async () => {\n    const userExtrafields = await getB2BUserExtraFields();\n    setUserExtrafields(userExtrafields);\n  };\n\n  useEffect(() => {\n    if (userExtrafields.length === 0) {\n      handleGetUsersFiles();\n    }\n  }, [userExtrafields.length]);\n\n  const handleGetExtrafieldsInfo = (selectedData: SelectedDataProps) => {\n    const keyValue = Object.keys(selectedData);\n\n    const extrafields: ExtraFieldsProps[] = [];\n    userExtrafields.forEach((item: UsersFilesProps) => {\n      if (keyValue.includes(item.name)) {\n        const extraField = {\n          fieldName: item.name || '',\n          fieldValue: selectedData[item.name] || '',\n        };\n\n        extrafields.push(extraField);\n      }\n    });\n\n    return extrafields;\n  };\n\n  useEffect(() => {\n    if (open) {\n      const newUsersFiles = usersFiles.map((item: UsersFilesProps) => {\n        const newItem = item;\n\n        if (type === 'edit' && editData) {\n          setValue(item.name, editData[item.name]);\n        }\n\n        return newItem;\n      });\n\n      setUsersFiles(newUsersFiles);\n    }\n    // disabling because we don't want to run this effect on every render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editData, open, type]);\n\n  const handleCancelClick = () => {\n    usersFiles.forEach((item: UsersFilesProps) => {\n      setValue(item.name, '');\n      if (item.isExtraFields) {\n        setValue(item.name, item.default || '');\n      }\n    });\n    clearErrors();\n    setOpen(false);\n  };\n\n  const validateEmailValue = async (emailValue: string) => {\n    const {\n      userType,\n      userInfo: { companyName },\n    } = await checkUserEmail({\n      email: emailValue,\n      companyId,\n      channelId,\n    });\n\n    const isValid = [\n      UserTypes.DOES_NOT_EXIST,\n      UserTypes.B2C,\n      UserTypes.CURRENT_B2B_COMPANY_DIFFERENT_CHANNEL,\n    ].includes(userType);\n\n    if (!isValid) {\n      setError('email', {\n        type: 'custom',\n        message: b3Lang(emailError[userType], {\n          companyName: companyName ? `(${companyName})` : '',\n          email: emailValue,\n        }),\n      });\n    }\n\n    return {\n      isValid,\n      userType,\n    };\n  };\n\n  const handleAddUserClick = () => {\n    handleSubmit(async (data) => {\n      setAddUpdateLoading(true);\n      const extraFieldsInfo = handleGetExtrafieldsInfo(data);\n      let message = b3Lang('userManagement.addUserSuccessfully');\n\n      try {\n        const params: Partial<FilterProps> = {\n          companyId,\n          companyRoleId: Number(data.companyRoleId),\n          ...data,\n          extraFields: extraFieldsInfo,\n        };\n\n        if (type !== 'edit') {\n          const { isValid, userType } = await validateEmailValue(data.email);\n\n          if (!isValid) {\n            setAddUpdateLoading(false);\n            return;\n          }\n\n          if (userType === UserTypes.CURRENT_B2B_COMPANY_DIFFERENT_CHANNEL) {\n            params.addChannel = true;\n            message = b3Lang('userManagement.userDetected', {\n              email: data.email,\n            });\n          }\n        }\n\n        if (type === 'edit') {\n          params.userId = editData?.id || '';\n          message = b3Lang('userManagement.updateUserSuccessfully');\n          delete params.email;\n        }\n\n        await addOrUpdateUsers(params);\n        handleCancelClick();\n\n        snackbar.success(message);\n\n        renderList();\n      } finally {\n        setAddUpdateLoading(false);\n      }\n    })();\n  };\n\n  const handleOpenAddEditUserClick = (type: string, data: UsersList) => {\n    const usersFiles = getUsersFiles(\n      type,\n      b3Lang,\n      type === 'edit' ? b2bId === Number(data.id) : false,\n    );\n\n    if (type === 'edit') {\n      const extrafieldsInfo: ExtraFieldsProps[] = data.extraFields || [];\n      let newData = data;\n      if (extrafieldsInfo && extrafieldsInfo.length > 0) {\n        const extrafieldsData: CustomFieldItems = {};\n\n        extrafieldsInfo.forEach((item) => {\n          extrafieldsData[item.fieldName] = item.fieldValue;\n        });\n\n        newData = {\n          ...data,\n          ...extrafieldsData,\n        };\n      }\n\n      setEditData(newData);\n\n      const companyRoleItem: UsersFilesProps | null =\n        usersFiles.find((item) => item.name === 'companyRoleId') || null;\n      if (companyRoleItem) {\n        companyRoleItem.defaultName = data?.companyRoleName || '';\n        companyRoleItem.default = data?.companyRoleId || '';\n      }\n    }\n    const allUsersFiles = concat(usersFiles, userExtrafields);\n    setUsersFiles(allUsersFiles);\n\n    setType(type);\n    setOpen(true);\n  };\n\n  useImperativeHandle(ref, () => ({\n    handleOpenAddEditUserClick,\n  }));\n\n  return (\n    <B3Dialog\n      isOpen={open}\n      title={\n        type === 'edit' ? b3Lang('userManagement.editUser') : b3Lang('userManagement.addNewUser')\n      }\n      leftSizeBtn={b3Lang('userManagement.cancel')}\n      rightSizeBtn={b3Lang('userManagement.saveUser')}\n      handleLeftClick={handleCancelClick}\n      handRightClick={handleAddUserClick}\n      loading={addUpdateLoading}\n      isShowBordered\n    >\n      <B3CustomForm\n        formFields={usersFiles}\n        errors={errors}\n        control={control}\n        getValues={getValues}\n        setValue={setValue}\n      />\n    </B3Dialog>\n  );\n}\n\nconst B3AddEditUser = forwardRef(AddEditUser);\n\nexport default B3AddEditUser;\n","import styled from '@emotion/styled';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { B3Tag } from '@/components';\nimport { verifyLevelPermission } from '@/utils';\nimport { b2bPermissionsMap } from '@/utils/b3CheckPermissions/config';\n\nimport { getUserRole, UsersList } from './config';\n\ninterface RoleListProps {\n  label: string;\n  value: string | number;\n  color: string;\n  textColor: string;\n  idLang: string;\n  name: string;\n}\n\nexport interface OrderItemCardProps {\n  item: UsersList;\n  onEdit: (data: UsersList) => void;\n  onDelete: (data: UsersList) => void;\n}\n\nconst Flex = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\nexport function UserItemCard(props: OrderItemCardProps) {\n  const { item: userInfo, onEdit, onDelete } = props;\n  const { companyInfo, id, companyRoleName, firstName, lastName, email } = userInfo;\n\n  const { userUpdateActionsPermission, userDeleteActionsPermission } = b2bPermissionsMap;\n\n  const updateActionsPermission = verifyLevelPermission({\n    code: userUpdateActionsPermission,\n    companyId: Number(companyInfo?.companyId || 0),\n    userId: Number(id),\n  });\n  const deleteActionsPermission = verifyLevelPermission({\n    code: userDeleteActionsPermission,\n    companyId: Number(companyInfo?.companyId || 0),\n    userId: Number(id),\n  });\n\n  const getNewRoleList = () => {\n    const userRole = getUserRole();\n    const newRoleList: Array<RoleListProps> = userRole.map((item) => {\n      if (Number(item.value) === 2) {\n        if (companyRoleName !== 'Junior Buyer') {\n          return {\n            color: '#ce93d8',\n            textColor: 'black',\n            ...item,\n            label: companyRoleName,\n            name: companyRoleName,\n          };\n        }\n        return {\n          color: '#D9DCE9',\n          textColor: 'black',\n          ...item,\n        };\n      }\n      if (Number(item.value) === 1) {\n        return {\n          color: 'rgba(237, 108, 2, 0.3)',\n          textColor: 'black',\n          ...item,\n        };\n      }\n      return {\n        color: '#C4DD6C',\n        textColor: 'black',\n        ...item,\n      };\n    });\n\n    return newRoleList;\n  };\n\n  const statusRender = (name: string) => {\n    const newRoleList = getNewRoleList();\n    const roleItem = newRoleList.find((item: RoleListProps) => item.name === name);\n\n    if (!roleItem) return null;\n    return (\n      <B3Tag color={roleItem.color} textColor={roleItem.textColor}>\n        {roleItem.label}\n      </B3Tag>\n    );\n  };\n\n  return (\n    <Card key={id}>\n      <CardContent\n        sx={{\n          color: '#313440',\n        }}\n      >\n        <Typography\n          variant=\"h5\"\n          sx={{\n            color: 'rgba(0, 0, 0, 0.87)',\n          }}\n        >\n          {firstName} {lastName}\n        </Typography>\n\n        <Typography\n          sx={{\n            p: '15px 0',\n          }}\n          variant=\"body1\"\n        >\n          {email}\n        </Typography>\n        <Flex>\n          {statusRender(companyRoleName)}\n          <Box>\n            {updateActionsPermission && (\n              <IconButton\n                aria-label=\"edit\"\n                size=\"small\"\n                sx={{\n                  marginRight: '8px',\n                }}\n                onClick={() => {\n                  onEdit(userInfo);\n                }}\n              >\n                <EditIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n            {deleteActionsPermission && (\n              <IconButton\n                aria-label=\"delete\"\n                size=\"small\"\n                onClick={() => {\n                  onDelete(userInfo);\n                }}\n              >\n                <DeleteIcon fontSize=\"inherit\" />\n              </IconButton>\n            )}\n          </Box>\n        </Flex>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["isRequestLoading","setIsRequestLoading","useState","deleteOpen","setDeleteOpen","userItem","setUserItem","createdAt","email","firstName","id","lastName","phone","role","updatedAt","extraFields","companyRoleName","companyRoleId","masqueradingCompanyId","companyInfo","b3Lang","useB3Lang","isMobile","useMobile","isExtraLarge","useCardListColumn","salesRepCompanyId","useAppSelector","b2bFeatures","masqueradeCompany","company","customer","companyId","Number","CustomerRole","SUPER_ADMIN","b2bPermissions","rolePermissionSelector","selectCompanyHierarchyId","companyHierarchyInfo","isEnableBtnPermissions","userCreateActionsPermission","customItem","useMemo","b2bPermissionsMap","isCreatePermission","verifyCreatePermission","isEnabled","customLabel","addEditUserRef","useRef","paginationTableRef","useTableRef","initSearch","search","q","filterMoreInfo","getFilterMoreList","filterSearch","setFilterSearch","translatedFilterInfo","setTranslatedFilterInfo","valueName","setValueName","initSearchList","current","refresh","handleEdit","userInfo","handleOpenAddEditUserClick","handleDelete","row","handleCancelClick","useEffect","handleGetTranslatedFilterInfo","map","element","translatedItem","translatedOptions","options","option","label","idLang","default","defaultName","jsx","B3Spin","isSpinning","children","jsxs","Box","sx","display","flexDirection","flex","B3Filter","handleChange","_","value","handleFilterChange","offset","customButtonConfig","handleFilterCustomButtonClick","handleAddUserClick","B3PaginationTable","ref","columnItems","rowsPerPageOptions","getRequestList","async","data","getUsers","params","users","edges","totalCount","searchParams","isCustomRender","itemXs","requestLoading","renderItem","UserItemCard","item","onEdit","onDelete","B3AddEditUser","renderList","B3Dialog","isOpen","title","leftSizeBtn","rightSizeBtn","handleLeftClick","handRightClick","deleteUsers","userId","snackbar","success","rightStyleBtn","color","isShowBordered","justifyContent","width","height","getUserRole","name","required","fieldType","xs","disabled","variant","size","emailError","FIELD_TYPE","getB2BUserExtraFields","userExtraFieldsList","userExtraFields","getUsersExtraFieldsInfo","listOfValue","type","currentItems","isExtraFields","fieldName","labelName","isRequired","defaultValue","length","max","maximumValue","rows","numberOfRows","maxLength","maximumLength","handleConversionExtraItemFormat","filter","visibleToEnduser","err","b2bLogger","error","forwardRef","b2bId","open","setOpen","setType","editData","setEditData","addUpdateLoading","setAddUpdateLoading","usersFiles","setUsersFiles","userExtrafields","setUserExtrafields","control","handleSubmit","getValues","formState","errors","clearErrors","setValue","setError","useForm","mode","handleGetUsersFiles","newUsersFiles","newItem","forEach","getUsersFiles","disabledUserRole","roleArr","extrafieldsInfo","newData","extrafieldsData","fieldValue","companyRoleItem","find","allUsersFiles","concat","useImperativeHandle","extraFieldsInfo","selectedData","keyValue","Object","keys","extrafields","includes","extraField","push","handleGetExtrafieldsInfo","message","isValid","userType","companyName","checkUserEmail","emailValue","channelId","UserTypes","DOES_NOT_EXIST","B2C","CURRENT_B2B_COMPANY_DIFFERENT_CHANNEL","validateEmailValue","addChannel","addOrUpdateUsers","loading","B3CustomForm","formFields","Flex","styled","alignItems","props","userUpdateActionsPermission","userDeleteActionsPermission","updateActionsPermission","verifyLevelPermission","code","deleteActionsPermission","Card","CardContent","Typography","p","roleItem","textColor","B3Tag","statusRender","IconButton","marginRight","onClick","EditIcon","fontSize","DeleteIcon"],"mappings":"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"}