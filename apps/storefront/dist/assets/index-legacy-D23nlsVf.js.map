{"version":3,"file":"index-legacy-D23nlsVf.js","sources":["../../src/pages/QuickOrder/index.tsx","../../src/utils/b3Price.ts","../../src/shared/service/b2b/graphql/quickOrder.ts","../../src/pages/QuickOrder/components/QuickOrderCard.tsx","../../src/pages/QuickOrder/components/QuickOrderB2BTable.tsx","../../src/pages/QuickOrder/utils.ts","../../src/pages/QuickOrder/components/QuickOrderFooter.tsx","../../src/pages/QuickOrder/components/QuickAdd.tsx","../../src/pages/QuickOrder/components/QuickOrderPad.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Box, Grid } from '@mui/material';\n\nimport { useMobile } from '@/hooks';\nimport { isB2BUserSelector, rolePermissionSelector, useAppSelector } from '@/store';\n\nimport QuickOrderTable from './components/QuickOrderB2BTable';\nimport QuickOrderFooter from './components/QuickOrderFooter';\nimport QuickOrderPad from './components/QuickOrderPad';\nimport { CheckedProduct } from './utils';\n\nfunction QuickOrder() {\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n\n  const isAgenting = useAppSelector(({ b2bFeatures }) => b2bFeatures.masqueradeCompany.isAgenting);\n\n  const [isMobile] = useMobile();\n\n  const [isRequestLoading, setIsRequestLoading] = useState<boolean>(false);\n  const [checkedArr, setCheckedArr] = useState<CheckedProduct[]>([]);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const isShowQuickOrderPad = isB2BUser ? purchasabilityPermission : true;\n\n  return (\n    <Box\n      sx={{\n        width: '100%',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <Grid\n          sx={{\n            m: 0,\n            width: '100%',\n          }}\n          container\n          spacing={2}\n        >\n          <Grid\n            item\n            xs={isMobile ? 12 : 8}\n            sx={{\n              backgroundColor: '#ffffff',\n              boxShadow:\n                '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 1px 3px rgba(0, 0, 0, 0.12)',\n              borderRadius: '4px',\n              pr: '16px',\n            }}\n          >\n            <QuickOrderTable\n              setCheckedArr={setCheckedArr}\n              setIsRequestLoading={setIsRequestLoading}\n              isRequestLoading={isRequestLoading}\n            />\n          </Grid>\n          <Grid\n            item\n            xs={isMobile ? 12 : 4}\n            sx={{\n              pt: !isMobile ? '0px !important' : '16px',\n              pl: isMobile ? '0px !important' : '16px',\n            }}\n          >\n            {isShowQuickOrderPad && <QuickOrderPad isB2BUser={isB2BUser} />}\n          </Grid>\n        </Grid>\n      </Box>\n      <Box\n        sx={{\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          width: '100%',\n          zIndex: '999',\n        }}\n      >\n        <QuickOrderFooter\n          checkedArr={checkedArr}\n          isAgenting={isAgenting}\n          setIsRequestLoading={setIsRequestLoading}\n          isB2BUser={isB2BUser}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport default QuickOrder;\n","import isEmpty from 'lodash-es/isEmpty';\n\nimport { store } from '@/store';\nimport { Variant } from '@/types/products';\n\nconst getProductPriceIncTaxOrExTaxBySetting = (\n  variants: Variant[],\n  variantId?: number,\n  variantSku?: string,\n) => {\n  const {\n    global: { showInclusiveTaxPrice },\n  } = store.getState();\n  const currentVariantInfo: Variant | undefined = variants.find(\n    (item: Variant) => Number(item.variant_id) === variantId || variantSku === item.sku,\n  );\n\n  if (currentVariantInfo && !isEmpty(currentVariantInfo)) {\n    const bcCalculatedPrice: {\n      tax_inclusive: number | string;\n      tax_exclusive: number | string;\n    } = currentVariantInfo.bc_calculated_price;\n\n    const priceIncTax = showInclusiveTaxPrice\n      ? Number(bcCalculatedPrice.tax_inclusive)\n      : Number(bcCalculatedPrice.tax_exclusive);\n\n    return priceIncTax;\n  }\n\n  return false;\n};\n\nconst getProductPriceIncTax = (\n  variants: CustomFieldItems,\n  variantId?: number,\n  variantSku?: string,\n) => {\n  const currentVariantInfo =\n    variants.find(\n      (item: CustomFieldItems) => Number(item.variant_id) === variantId || variantSku === item.sku,\n    ) || {};\n\n  if (!isEmpty(currentVariantInfo)) {\n    const bcCalculatedPrice: {\n      tax_inclusive: number | string;\n    } = currentVariantInfo.bc_calculated_price;\n\n    const priceIncTax = Number(bcCalculatedPrice.tax_inclusive);\n\n    return priceIncTax;\n  }\n\n  return false;\n};\n\nexport { getProductPriceIncTax, getProductPriceIncTaxOrExTaxBySetting };\n","import B3Request from '../../request/b3Fetch';\n\n// import {\n//   convertArrayToGraphql,\n//   storeHash,\n// } from '../../../../utils'\n\nconst orderedProducts = (data: CustomFieldItems) => `{\n  orderedProducts (\n    q: \"${data.q || ''}\"\n    first: ${data.first}\n    offset: ${data.offset}\n    beginDateAt: \"${data.beginDateAt}\"\n    endDateAt: \"${data.endDateAt}\"\n    orderBy: \"${data?.orderBy || ''}\"\n  ){\n    totalCount,\n    pageInfo{\n      hasNextPage,\n      hasPreviousPage,\n    },\n    edges{\n      node {\n        id,\n        createdAt,\n        updatedAt,\n        productName,\n        productBrandName,\n        variantSku,\n        productId,\n        variantId,\n        optionList,\n        orderedTimes,\n        firstOrderedAt,\n        lastOrderedAt,\n        lastOrderedItems,\n        sku,\n        lastOrdered,\n        imageUrl,\n        baseSku,\n        basePrice,\n        discount,\n        tax,\n        enteredInclusive,\n        productUrl,\n        optionSelections,\n      }\n    }\n  }\n}`;\n\nexport const getOrderedProducts = (data: CustomFieldItems) =>\n  B3Request.graphqlB2B({\n    query: orderedProducts(data),\n  });\n\nexport const getBcOrderedProducts = (data: CustomFieldItems) =>\n  B3Request.graphqlB2B({\n    query: orderedProducts(data),\n  });\n","import { ReactElement } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, CardContent, styled, TextField, Typography } from '@mui/material';\n\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { currencyFormat, displayFormat } from '@/utils';\nimport b2bGetVariantImageByVariantInfo from '@/utils/b2bGetVariantImageByVariantInfo';\n\ninterface QuickOrderCardProps {\n  item: any;\n  checkBox?: () => ReactElement;\n  handleUpdateProductQty: (id: number, val: string) => void;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nfunction QuickOrderCard(props: QuickOrderCardProps) {\n  const { item: shoppingDetail, checkBox, handleUpdateProductQty } = props;\n  const b3Lang = useB3Lang();\n\n  const {\n    quantity,\n    imageUrl,\n    productName,\n    variantSku,\n    optionList,\n    basePrice,\n    lastOrderedAt,\n    variantId,\n    productsSearch,\n  } = shoppingDetail;\n\n  const price = Number(basePrice) * Number(quantity);\n  const currentVariants = productsSearch.variants || [];\n  const currentImage = b2bGetVariantImageByVariantInfo(currentVariants, { variantId }) || imageUrl;\n\n  return (\n    <Box\n      key={shoppingDetail.id}\n      sx={{\n        borderTop: '1px solid #D9DCE9',\n      }}\n    >\n      <CardContent\n        sx={{\n          color: '#313440',\n          display: 'flex',\n          pl: 0,\n        }}\n      >\n        <Box>{checkBox && checkBox()}</Box>\n        <Box>\n          <StyledImage\n            src={currentImage || PRODUCT_DEFAULT_IMAGE}\n            alt=\"Product-img\"\n            loading=\"lazy\"\n          />\n        </Box>\n        <Box\n          sx={{\n            flex: 1,\n          }}\n        >\n          <Typography variant=\"body1\" color=\"#212121\">\n            {productName}\n          </Typography>\n          <Typography variant=\"body1\" color=\"#616161\">\n            {variantSku}\n          </Typography>\n          <Box\n            sx={{\n              margin: '1rem 0',\n            }}\n          >\n            {optionList.length > 0 && (\n              <Box>\n                {optionList.map((option: CustomFieldItems) => (\n                  <Typography\n                    sx={{\n                      fontSize: '0.75rem',\n                      lineHeight: '1.5',\n                      color: '#455A64',\n                    }}\n                    key={option.display_name}\n                  >\n                    {`${option.display_name}: ${option.display_value}`}\n                  </Typography>\n                ))}\n              </Box>\n            )}\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>\n            {b3Lang('purchasedProducts.quickOrderCard.price', {\n              price: currencyFormat(price),\n            })}\n          </Typography>\n          <Box\n            sx={{\n              '& label': {\n                zIndex: 0,\n              },\n            }}\n          >\n            <TextField\n              size=\"small\"\n              type=\"number\"\n              variant=\"filled\"\n              label=\"Qty\"\n              inputProps={{\n                inputMode: 'numeric',\n                pattern: '[0-9]*',\n              }}\n              value={quantity}\n              sx={{\n                margin: '1rem 0',\n                width: '60%',\n                maxWidth: '100px',\n                '& label': {\n                  fontSize: '14px',\n                },\n                '& input': {\n                  fontSize: '14px',\n                },\n              }}\n              onChange={(e) => {\n                handleUpdateProductQty(shoppingDetail.id, e.target.value);\n              }}\n            />\n          </Box>\n\n          <Typography sx={{ fontSize: '14px' }}>\n            {b3Lang('purchasedProducts.quickOrderCard.lastOrdered', {\n              lastOrderedAt: displayFormat(lastOrderedAt),\n            })}\n          </Typography>\n        </Box>\n      </CardContent>\n    </Box>\n  );\n}\n\nexport default QuickOrderCard;\n","import { Dispatch, SetStateAction, useRef, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, styled, TextField, Typography } from '@mui/material';\n\nimport B3Spin from '@/components/spin/B3Spin';\nimport { B3PaginationTable, GetRequestList } from '@/components/table/B3PaginationTable';\nimport { TableColumnItem } from '@/components/table/B3Table';\nimport { PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useMobile, useSort } from '@/hooks';\nimport {\n  getBcOrderedProducts,\n  getOrderedProducts,\n  searchB2BProducts,\n  searchBcProducts,\n} from '@/shared/service/b2b';\nimport { activeCurrencyInfoSelector, isB2BUserSelector, useAppSelector } from '@/store';\nimport { ProductInfoType } from '@/types/gql/graphql';\nimport {\n  currencyFormat,\n  displayFormat,\n  distanceDay,\n  getProductPriceIncTaxOrExTaxBySetting,\n  snackbar,\n} from '@/utils';\nimport b2bGetVariantImageByVariantInfo from '@/utils/b2bGetVariantImageByVariantInfo';\nimport { getDisplayPrice } from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\n\nimport B3FilterMore from '../../../components/filter/B3FilterMore';\nimport B3FilterPicker from '../../../components/filter/B3FilterPicker';\nimport B3FilterSearch from '../../../components/filter/B3FilterSearch';\nimport { CheckedProduct } from '../utils';\n\nimport QuickOrderCard from './QuickOrderCard';\n\ninterface ProductInfoProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: string;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  taxPrice: number;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: ProductInfoType;\n}\n\ninterface ListItemProps {\n  node: ProductInfoProps;\n}\n\ninterface SearchProps {\n  q: string;\n  first?: number;\n  offset?: number;\n  beginDateAt?: Date | string | number;\n  endDateAt?: Date | string | number;\n  orderBy: string;\n}\n\ninterface PaginationTableRefProps extends HTMLInputElement {\n  getList: () => void;\n  getCacheList: () => void;\n  setCacheAllList: (items?: ListItemProps[]) => void;\n  setList: (items?: ListItemProps[]) => void;\n  getSelectedValue: () => void;\n}\n\nconst StyledImage = styled('img')(() => ({\n  maxWidth: '60px',\n  height: 'auto',\n  marginRight: '0.5rem',\n}));\n\nconst StyleQuickOrderTable = styled(Box)(() => ({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n\n  '& tbody': {\n    '& tr': {\n      '& td': {\n        verticalAlign: 'top',\n      },\n      '& td: first-of-type': {\n        paddingTop: '25px',\n      },\n    },\n  },\n}));\n\ninterface QuickOrderTableProps {\n  setIsRequestLoading: Dispatch<SetStateAction<boolean>>;\n  setCheckedArr: (values: CheckedProduct[]) => void;\n  isRequestLoading: boolean;\n}\n\nconst StyledTextField = styled(TextField)(() => ({\n  '& input': {\n    paddingTop: '12px',\n    paddingRight: '6px',\n  },\n}));\n\nexport const defaultSortKey = 'lastOrderedAt';\n\nexport const sortKeys = {\n  product: 'productName',\n  lastOrderedAt: 'lastOrderedAt',\n};\n\nfunction QuickOrderTable({\n  setIsRequestLoading,\n  setCheckedArr,\n  isRequestLoading,\n}: QuickOrderTableProps) {\n  const paginationTableRef = useRef<PaginationTableRefProps | null>(null);\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyInfoId = useAppSelector(({ company }) => company.companyInfo.id);\n  const customerGroupId = useAppSelector(({ company }) => company.customer.customerGroupId);\n\n  const [search, setSearch] = useState<SearchProps>({\n    q: '',\n    beginDateAt: distanceDay(90),\n    endDateAt: distanceDay(0),\n    orderBy: `-${sortKeys[defaultSortKey]}`,\n  });\n\n  const [handleSetOrderBy, order, orderBy] = useSort(sortKeys, defaultSortKey, search, setSearch);\n\n  const [total, setTotalCount] = useState<number>(0);\n\n  const [isMobile] = useMobile();\n\n  const b3Lang = useB3Lang();\n\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n\n  const handleGetProductsById = async (listProducts: ListItemProps[]) => {\n    if (listProducts.length > 0) {\n      const productIds: number[] = [];\n      listProducts.forEach((item) => {\n        const { node } = item;\n        node.quantity = 1;\n        if (!productIds.includes(node.productId)) {\n          productIds.push(node.productId);\n        }\n      });\n\n      const getProducts = isB2BUser ? searchB2BProducts : searchBcProducts;\n\n      try {\n        const { productsSearch } = await getProducts({\n          productIds,\n          currencyCode,\n          companyId: companyInfoId,\n          customerGroupId,\n        });\n\n        const newProductsSearch = conversionProductsList(productsSearch);\n\n        listProducts.forEach((item) => {\n          const { node } = item;\n\n          const productInfo = newProductsSearch.find((search: CustomFieldItems) => {\n            const { id: productId } = search;\n\n            return Number(node.productId) === Number(productId);\n          });\n\n          node.productsSearch = productInfo || {};\n        });\n\n        return listProducts;\n      } catch (err: any) {\n        snackbar.error(err);\n      }\n    }\n    return [];\n  };\n\n  const getList: GetRequestList<SearchProps, ProductInfoProps> = async (params) => {\n    const {\n      orderedProducts: { edges, totalCount },\n    } = isB2BUser ? await getOrderedProducts(params) : await getBcOrderedProducts(params);\n\n    const listProducts = await handleGetProductsById(edges);\n\n    setTotalCount(totalCount);\n\n    return {\n      edges: listProducts,\n      totalCount,\n    };\n  };\n\n  const handleSearchProduct = async (q: string) => {\n    setSearch({\n      ...search,\n      q,\n    });\n  };\n\n  const getSelectCheckbox = (selectCheckbox: Array<string | number>) => {\n    if (selectCheckbox.length > 0) {\n      const productList = paginationTableRef.current?.getCacheList() || [];\n      const checkedItems = selectCheckbox.reduce((pre, item: number | string) => {\n        const newItems = productList.find((product: ListItemProps) => {\n          const { node } = product;\n\n          return node.id === item;\n        });\n\n        if (newItems) pre.push(newItems);\n\n        return pre;\n      }, []);\n\n      setCheckedArr([...checkedItems]);\n    } else {\n      setCheckedArr([]);\n    }\n  };\n\n  const handlePickerChange = (key: string, value: Date | string | number) => {\n    const params = {\n      ...search,\n    };\n    if (key === 'start') {\n      params.beginDateAt = value || distanceDay(90);\n    } else {\n      params.endDateAt = value || distanceDay(0);\n    }\n\n    setSearch(params);\n  };\n\n  const handleFilterChange = (data: any) => {\n    const params = {\n      ...search,\n    };\n\n    params.beginDateAt = data.startValue;\n\n    params.endDateAt = data.endValue;\n\n    setSearch(params);\n  };\n\n  const handleUpdateProductQty = (id: number | string, value: number | string) => {\n    if (value !== '' && Number(value) <= 0) return;\n    const listItems = paginationTableRef.current?.getList() || [];\n    const listCacheItems = paginationTableRef.current?.getCacheList() || [];\n\n    const newListItems = listItems?.map((item: ListItemProps) => {\n      const { node } = item;\n      if (node?.id === id) {\n        node.quantity = Number(value) || '';\n      }\n\n      return item;\n    });\n    const newListCacheItems = listCacheItems?.map((item: ListItemProps) => {\n      const { node } = item;\n      if (node?.id === id) {\n        node.quantity = Number(value) || '';\n      }\n\n      return item;\n    });\n    paginationTableRef.current?.setList([...newListItems]);\n    paginationTableRef.current?.setCacheAllList([...newListCacheItems]);\n  };\n\n  const showPrice = (price: string, row: CustomFieldItems): string | number => {\n    const {\n      productsSearch: { isPriceHidden },\n    } = row;\n    if (isPriceHidden) return '';\n    return getDisplayPrice({\n      price,\n      productInfo: row,\n      showText: isPriceHidden ? '' : price,\n      forcedSkip: true,\n    });\n  };\n\n  const handleSetCheckedQty = (row: CustomFieldItems) => {\n    const cacheProductList: CustomFieldItems = paginationTableRef.current?.getCacheList() || [];\n\n    let qty = row.quantity;\n    if (cacheProductList.length > 0) {\n      const currentProduct = cacheProductList.find(\n        (item: CustomFieldItems) =>\n          item.node.variantId === row.variantId &&\n          item.node.productId === row.productId &&\n          item.node.id === row.id,\n      );\n\n      if (currentProduct && currentProduct.node) {\n        qty = currentProduct.node.quantity || qty;\n      }\n    }\n\n    return qty;\n  };\n\n  const columnItems: TableColumnItem<ProductInfoProps>[] = [\n    {\n      key: 'product',\n      title: b3Lang('purchasedProducts.product'),\n      render: (row: CustomFieldItems) => {\n        const { optionList, productsSearch, variantId } = row;\n        const currentVariants = productsSearch.variants || [];\n\n        const currentImage =\n          b2bGetVariantImageByVariantInfo(currentVariants, { variantId }) || row.imageUrl;\n        return (\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'flex-start',\n            }}\n          >\n            <StyledImage\n              src={currentImage || PRODUCT_DEFAULT_IMAGE}\n              alt=\"Product-img\"\n              loading=\"lazy\"\n            />\n            <Box>\n              <Typography variant=\"body1\" color=\"#212121\">\n                {row.productName}\n              </Typography>\n              <Typography variant=\"body1\" color=\"#616161\">\n                {row.variantSku}\n              </Typography>\n              {optionList.length > 0 && (\n                <Box>\n                  {optionList.map((option: any) => (\n                    <Typography\n                      sx={{\n                        fontSize: '0.75rem',\n                        lineHeight: '1.5',\n                        color: '#455A64',\n                      }}\n                      key={option.id}\n                    >\n                      {`${option.display_name}: ${option.display_value}`}\n                    </Typography>\n                  ))}\n                </Box>\n              )}\n            </Box>\n          </Box>\n        );\n      },\n      width: '40%',\n      isSortable: true,\n    },\n    {\n      key: 'price',\n      title: b3Lang('purchasedProducts.price'),\n      render: (row: CustomFieldItems) => {\n        const {\n          productsSearch: { variants },\n          variantId,\n          basePrice,\n        } = row;\n        let priceIncTax = Number(basePrice);\n        if (variants?.length) {\n          priceIncTax =\n            getProductPriceIncTaxOrExTaxBySetting(variants, Number(variantId)) || Number(basePrice);\n        }\n\n        const qty = handleSetCheckedQty(row);\n        const withTaxPrice = priceIncTax || Number(basePrice);\n        const price = withTaxPrice * Number(qty);\n\n        return (\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {`${showPrice(currencyFormat(price), row)}`}\n          </Typography>\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'qty',\n      title: b3Lang('purchasedProducts.qty'),\n      render: (row) => {\n        const qty = handleSetCheckedQty(row);\n\n        return (\n          <StyledTextField\n            size=\"small\"\n            type=\"number\"\n            variant=\"filled\"\n            value={qty}\n            inputProps={{\n              inputMode: 'numeric',\n              pattern: '[0-9]*',\n            }}\n            onChange={(e) => {\n              handleUpdateProductQty(row.id, e.target.value);\n            }}\n          />\n        );\n      },\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n    },\n    {\n      key: 'lastOrderedAt',\n      title: b3Lang('purchasedProducts.lastOrdered'),\n      render: (row: CustomFieldItems) => (\n        <Box>\n          <Typography\n            sx={{\n              padding: '12px 0',\n            }}\n          >\n            {`${displayFormat(Number(row.lastOrderedAt))}`}\n          </Typography>\n        </Box>\n      ),\n      width: '15%',\n      style: {\n        textAlign: 'right',\n      },\n      isSortable: true,\n    },\n  ];\n\n  return (\n    <B3Spin isSpinning={isRequestLoading}>\n      <StyleQuickOrderTable>\n        <Typography\n          sx={{\n            fontSize: '24px',\n            height: '50px',\n          }}\n        >\n          {b3Lang('purchasedProducts.totalProducts', { total })}\n        </Typography>\n        <Box\n          sx={{\n            marginBottom: '5px',\n            display: 'flex',\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <Box\n            sx={{\n              width: isMobile ? '100%' : '40%',\n              mr: '20px',\n              display: 'flex',\n              justifyContent: isMobile ? 'space-between' : 'flex-start',\n            }}\n          >\n            <B3FilterSearch\n              h=\"48px\"\n              searchBGColor=\"rgba(0, 0, 0, 0.06)\"\n              handleChange={(e) => {\n                handleSearchProduct(e);\n              }}\n            />\n\n            {isMobile && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <B3FilterMore\n                  filterMoreInfo={[]}\n                  startPicker={{\n                    isEnabled: true,\n                    label: b3Lang('purchasedProducts.from'),\n                    defaultValue: search?.beginDateAt || '',\n                    pickerKey: 'start',\n                  }}\n                  endPicker={{\n                    isEnabled: true,\n                    label: b3Lang('purchasedProducts.to'),\n                    defaultValue: search?.endDateAt || '',\n                    pickerKey: 'end',\n                  }}\n                  isShowMore\n                  onChange={handleFilterChange}\n                />\n              </Box>\n            )}\n          </Box>\n\n          {!isMobile && (\n            <B3FilterPicker\n              handleChange={handlePickerChange}\n              xs={{\n                mt: 0,\n                height: '50px',\n              }}\n              startPicker={{\n                isEnabled: true,\n                label: b3Lang('purchasedProducts.from'),\n                defaultValue: distanceDay(90),\n                pickerKey: 'start',\n              }}\n              endPicker={{\n                isEnabled: true,\n                label: b3Lang('purchasedProducts.to'),\n                defaultValue: distanceDay(),\n                pickerKey: 'end',\n              }}\n              customWidth=\"58%\"\n            />\n          )}\n        </Box>\n\n        <B3PaginationTable\n          ref={paginationTableRef}\n          columnItems={columnItems}\n          rowsPerPageOptions={[12, 24, 36]}\n          getRequestList={getList}\n          searchParams={search}\n          isCustomRender={false}\n          showCheckbox\n          showSelectAllCheckbox\n          disableCheckbox={false}\n          hover\n          labelRowsPerPage={b3Lang('purchasedProducts.itemsPerPage')}\n          showBorder={false}\n          requestLoading={setIsRequestLoading}\n          getSelectCheckbox={getSelectCheckbox}\n          itemIsMobileSpacing={0}\n          isSelectOtherPageCheckbox\n          noDataText={b3Lang('purchasedProducts.noProductsFound')}\n          sortDirection={order}\n          orderBy={orderBy}\n          sortByFn={handleSetOrderBy}\n          renderItem={(row, _, checkBox) => (\n            <QuickOrderCard\n              item={row}\n              checkBox={checkBox}\n              handleUpdateProductQty={handleUpdateProductQty}\n            />\n          )}\n        />\n      </StyleQuickOrderTable>\n    </B3Spin>\n  );\n}\n\nexport default QuickOrderTable;\n","import { LangFormatFunction } from '@b3/lang';\n\nimport { getCart } from '@/shared/service/bc/graphql/cart';\nimport { store } from '@/store';\nimport { OrderedProductType, ProductInfoType } from '@/types/gql/graphql';\nimport { snackbar } from '@/utils';\nimport { LineItems } from '@/utils/b3Product/b3Product';\n\nexport interface ProductInfo extends OrderedProductType {\n  productsSearch: ProductInfoType;\n  quantity: number;\n}\n\nexport interface CommonProducts extends ProductInfoType {\n  quantity: number;\n  variantId?: string;\n}\n\nexport interface CheckedProduct {\n  node: ProductInfo;\n}\n\nexport const handleVerifyProduct = (products: CustomFieldItems, b3Lang: LangFormatFunction) => {\n  const {\n    variantId,\n    variants,\n    inventoryLevel,\n    inventoryTracking,\n    orderQuantityMaximum,\n    orderQuantityMinimum,\n    quantity,\n    sku,\n  } = products;\n\n  const isEnableProduct =\n    store.getState().global?.blockPendingQuoteNonPurchasableOOS?.isEnableProduct || false;\n\n  const isStock = inventoryTracking !== 'none';\n  let purchasingDisabled = false;\n  let stock = inventoryLevel;\n  let productSku = sku;\n\n  const currentVariant = variants.find(\n    (variant: CustomFieldItems) => Number(variant.variant_id) === Number(variantId),\n  );\n  if (currentVariant) {\n    purchasingDisabled = currentVariant.purchasing_disabled;\n    stock = inventoryTracking === 'variant' ? currentVariant.inventory_level : stock;\n    productSku = currentVariant.sku || sku;\n  }\n\n  if (purchasingDisabled && !isEnableProduct) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.notPurchaseableSku', {\n        notPurchaseSku: productSku,\n      }),\n    );\n\n    return {\n      isVerify: false,\n      type: 'notPurchaseableSku',\n    };\n  }\n\n  if (isStock && Number(quantity) > Number(stock)) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.insufficientStockSku', {\n        sku: productSku,\n      }),\n      {\n        isClose: true,\n      },\n    );\n\n    return {\n      isVerify: false,\n      type: 'insufficientStockSku',\n    };\n  }\n\n  if (Number(orderQuantityMinimum) > 0 && Number(quantity) < orderQuantityMinimum) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.minQuantityMessage', {\n        minQuantity: orderQuantityMinimum,\n        sku: productSku,\n      }),\n      {\n        isClose: true,\n      },\n    );\n\n    return {\n      isVerify: false,\n      type: 'minQuantity',\n    };\n  }\n\n  if (Number(orderQuantityMaximum) > 0 && Number(quantity) > Number(orderQuantityMaximum)) {\n    snackbar.error(\n      b3Lang('purchasedProducts.quickOrderPad.maxQuantityMessage', {\n        maxQuantity: orderQuantityMaximum,\n        sku: productSku,\n      }),\n      {\n        isClose: true,\n      },\n    );\n\n    return {\n      isVerify: false,\n      type: 'maxQuantity',\n    };\n  }\n\n  return {\n    isVerify: true,\n  };\n};\n\nexport const getCartProductInfo = async () => {\n  const {\n    data: {\n      site: { cart },\n    },\n  } = await getCart();\n\n  if (cart) {\n    const { lineItems } = cart;\n    return Object.keys(lineItems).reduce((pre, cru) => {\n      lineItems[cru].forEach((item: LineItems) => {\n        pre.push(item);\n      });\n\n      return pre;\n    }, [] as LineItems[]);\n  }\n\n  return [];\n};\n\nexport const addCartProductToVerify = async (\n  checkedArr: Partial<CheckedProduct>[],\n  b3lang: LangFormatFunction,\n) => {\n  const cartProducts: LineItems[] = await getCartProductInfo();\n\n  const addCommonProducts = checkedArr.reduce((pre, checkItem) => {\n    const { node } = checkItem;\n\n    const num =\n      cartProducts.find(\n        (item: LineItems) =>\n          item.sku === node?.sku &&\n          Number(item?.variantEntityId || 0) === Number(node?.variantId || 0),\n      )?.quantity || 0;\n\n    pre.push({\n      ...node?.productsSearch,\n      variantId: node?.variantId,\n      quantity: (node?.quantity || 0) + num,\n    });\n\n    return pre;\n  }, [] as CommonProducts[]);\n\n  return addCommonProducts.every((product) => {\n    return handleVerifyProduct(product, b3lang).isVerify;\n  });\n};\n","import { Dispatch, SetStateAction, useContext, useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { ArrowDropDown } from '@mui/icons-material';\nimport {\n  Box,\n  Button,\n  Grid,\n  Menu,\n  MenuItem,\n  SxProps,\n  Typography,\n  useMediaQuery,\n} from '@mui/material';\nimport { v1 as uuid } from 'uuid';\n\nimport { successTip } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { CART_URL, PRODUCT_DEFAULT_IMAGE } from '@/constants';\nimport { useMobile } from '@/hooks';\nimport { GlobalContext } from '@/shared/global';\nimport {\n  addProductToBcShoppingList,\n  addProductToShoppingList,\n  searchB2BProducts,\n  searchBcProducts,\n} from '@/shared/service/b2b';\nimport { activeCurrencyInfoSelector, rolePermissionSelector, useAppSelector } from '@/store';\nimport { currencyFormat, getProductPriceIncTaxOrExTaxBySetting, snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport {\n  addQuoteDraftProducts,\n  calculateProductListPrice,\n  getValidOptionsList,\n  validProductQty,\n} from '@/utils/b3Product/b3Product';\nimport { conversionProductsList } from '@/utils/b3Product/shared/config';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\nimport { callCart } from '@/utils/cartUtils';\n\nimport CreateShoppingList from '../../OrderDetail/components/CreateShoppingList';\nimport OrderShoppingList from '../../OrderDetail/components/OrderShoppingList';\nimport { addCartProductToVerify, CheckedProduct } from '../utils';\n\nexport interface ProductInfoProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: CustomFieldItems;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  tax: number | string;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: CustomFieldItems;\n}\n\nexport interface ListItemProps {\n  node: ProductInfoProps;\n}\n\ninterface NodeProps {\n  basePrice: number | string;\n  baseSku: string;\n  createdAt: number;\n  discount: number | string;\n  enteredInclusive: boolean;\n  id: number | string;\n  itemId: number;\n  optionList: CustomFieldItems;\n  primaryImage: string;\n  productId: number;\n  productName: string;\n  productUrl: string;\n  quantity: number | string;\n  tax: number | string;\n  updatedAt: number;\n  variantId: number;\n  variantSku: string;\n  productsSearch: CustomFieldItems;\n  optionSelections: CustomFieldItems;\n}\n\ninterface ProductsProps {\n  maxQuantity?: number;\n  minQuantity?: number;\n  stock?: number;\n  isStock?: string;\n  node: NodeProps;\n  isValid?: boolean;\n}\n\ninterface QuickOrderFooterProps {\n  checkedArr: CheckedProduct[];\n  isAgenting: boolean;\n  setIsRequestLoading: Dispatch<SetStateAction<boolean>>;\n  isB2BUser: boolean;\n}\n\nfunction QuickOrderFooter(props: QuickOrderFooterProps) {\n  const { checkedArr, isAgenting, setIsRequestLoading, isB2BUser } = props;\n  const {\n    state: { productQuoteEnabled = false, shoppingListEnabled = false },\n  } = useContext(GlobalContext);\n  const b3Lang = useB3Lang();\n  const companyInfoId = useAppSelector((state) => state.company.companyInfo.id);\n  const { currency_code: currencyCode } = useAppSelector(activeCurrencyInfoSelector);\n  const { purchasabilityPermission } = useAppSelector(rolePermissionSelector);\n\n  const isShowCartAction = isB2BUser ? purchasabilityPermission : true;\n\n  const isDesktopLimit = useMediaQuery('(min-width:1775px)');\n  const [isMobile] = useMobile();\n  const ref = useRef<HTMLButtonElement | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedSubTotal, setSelectedSubTotal] = useState(0.0);\n  const [openShoppingList, setOpenShoppingList] = useState(false);\n  const [isOpenCreateShopping, setIsOpenCreateShopping] = useState(false);\n  const [isShoppingListLoading, setIisShoppingListLoading] = useState(false);\n\n  const customerGroupId = useAppSelector((state) => state.company.customer.customerGroupId);\n\n  const navigate = useNavigate();\n\n  const containerStyle = isMobile\n    ? {\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n      }\n    : {\n        alignItems: 'center',\n      };\n\n  const handleOpenBtnList = () => {\n    if (checkedArr.length === 0) {\n      snackbar.error(b3Lang('purchasedProducts.error.selectOneItem'));\n    } else {\n      setIsOpen(true);\n    }\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  // Add selected to cart\n  const handleSetCartLineItems = (inventoryInfos: ProductsProps[]) => {\n    const lineItems: CustomFieldItems[] = [];\n\n    checkedArr.forEach((item: CheckedProduct) => {\n      const { node } = item;\n\n      const currentProduct: CustomFieldItems | undefined = inventoryInfos.find(\n        (inventory: CustomFieldItems) => Number(node.productId) === inventory.id,\n      );\n      if (currentProduct) {\n        const { variants }: CustomFieldItems = currentProduct;\n\n        if (variants.length > 0) {\n          const currentInventoryInfo: CustomFieldItems | undefined = variants.find(\n            (variant: CustomFieldItems) =>\n              node.variantSku === variant.sku &&\n              Number(node.variantId) === Number(variant.variant_id),\n          );\n\n          if (currentInventoryInfo) {\n            const { optionList, quantity } = node;\n\n            const options = optionList.map((option: CustomFieldItems) => ({\n              optionId: option.product_option_id,\n              optionValue: option.value,\n            }));\n\n            lineItems.push({\n              optionSelections: options,\n              allOptions: optionList,\n              productId: parseInt(currentInventoryInfo.product_id, 10) || 0,\n              quantity,\n              variantId: parseInt(currentInventoryInfo.variant_id, 10) || 0,\n            });\n          }\n        }\n      }\n    });\n\n    return lineItems;\n  };\n\n  const handleAddSelectedToCart = async () => {\n    setIsRequestLoading(true);\n    handleClose();\n    try {\n      const productIds: number[] = [];\n\n      checkedArr.forEach((item: CheckedProduct) => {\n        const { node } = item;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      if (productIds.length === 0) {\n        snackbar.error(b3Lang('purchasedProducts.footer.selectOneItemToAdd'));\n        return;\n      }\n\n      const isPassVerify = await addCartProductToVerify(checkedArr, b3Lang);\n\n      if (!isPassVerify) return;\n\n      const companyId = companyInfoId;\n\n      const getVariantInfoByProductId = isB2BUser ? searchB2BProducts : searchBcProducts;\n      const { productsSearch: getInventoryInfos } = await getVariantInfoByProductId({\n        productIds,\n        companyId,\n        customerGroupId,\n      });\n\n      const lineItems = handleSetCartLineItems(getInventoryInfos || []);\n\n      const res = await callCart(lineItems);\n\n      if (res && !res.errors) {\n        snackbar.success('', {\n          jsx: successTip({\n            message: b3Lang('purchasedProducts.footer.productsAdded'),\n            link: CART_URL,\n            linkText: b3Lang('purchasedProducts.footer.viewCart'),\n            isOutLink: true,\n            isCustomEvent: true,\n          }),\n          isClose: true,\n        });\n      } else if (res && res.errors) {\n        snackbar.error(res.errors[0].message, {\n          isClose: true,\n        });\n      } else {\n        snackbar.error('Error has occurred', {\n          isClose: true,\n        });\n      }\n    } finally {\n      b3TriggerCartNumber();\n      setIsRequestLoading(false);\n    }\n  };\n\n  // Add selected to quote\n  const getOptionsList = (options: CustomFieldItems) => {\n    if (options?.length === 0) return [];\n\n    const option = options.map(\n      ({\n        product_option_id: optionId,\n        value,\n      }: {\n        product_option_id: number | string;\n        value: string | number;\n      }) => ({\n        optionId: `attribute[${optionId}]`,\n        optionValue: value,\n      }),\n    );\n\n    return option;\n  };\n\n  const handleAddSelectedToQuote = async () => {\n    setIsRequestLoading(true);\n    handleClose();\n    try {\n      const productsWithSku = checkedArr.filter((checkedItem: CheckedProduct) => {\n        const {\n          node: { variantSku },\n        } = checkedItem;\n\n        return variantSku !== '' && variantSku !== null && variantSku !== undefined;\n      });\n\n      const noSkuProducts = checkedArr.filter((checkedItem: CheckedProduct) => {\n        const {\n          node: { variantSku },\n        } = checkedItem;\n\n        return !variantSku;\n      });\n      if (noSkuProducts.length > 0) {\n        snackbar.error(b3Lang('purchasedProducts.footer.cantAddProductsNoSku'), {\n          isClose: true,\n        });\n      }\n      if (noSkuProducts.length === checkedArr.length) return;\n\n      const productIds: number[] = [];\n      productsWithSku.forEach((product: CheckedProduct) => {\n        const { node } = product;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      const getProducts = isB2BUser ? searchB2BProducts : searchBcProducts;\n      const { productsSearch } = await getProducts({\n        productIds,\n        companyId: companyInfoId,\n        customerGroupId,\n        currencyCode,\n      });\n\n      const newProductInfo: CustomFieldItems = conversionProductsList(productsSearch);\n      let isSuccess = false;\n      let errorMessage = '';\n      let isFondVariant = true;\n\n      const newProducts: CustomFieldItems[] = [];\n      productsWithSku.forEach((product: CheckedProduct) => {\n        const {\n          node: {\n            basePrice,\n            optionList,\n            variantSku,\n            productId,\n            productName,\n            quantity,\n            variantId,\n            tax,\n          },\n        } = product;\n\n        const optionsList = getOptionsList(optionList);\n\n        const currentProductSearch = newProductInfo.find(\n          (product: CustomFieldItems) => Number(product.id) === Number(productId),\n        );\n\n        const variantItem = currentProductSearch?.variants.find(\n          (item: CustomFieldItems) => item.sku === variantSku,\n        );\n\n        if (!variantItem) {\n          errorMessage = b3Lang('purchasedProducts.footer.notFoundSku', {\n            sku: variantSku as string,\n          });\n          isFondVariant = false;\n        }\n\n        const quoteListitem = {\n          node: {\n            id: uuid(),\n            variantSku: variantItem?.sku || variantSku,\n            variantId,\n            productsSearch: currentProductSearch,\n            primaryImage: variantItem?.image_url || PRODUCT_DEFAULT_IMAGE,\n            productName,\n            quantity: Number(quantity) || 1,\n            optionList: JSON.stringify(optionsList),\n            productId,\n            basePrice,\n            tax,\n          },\n        };\n\n        newProducts.push(quoteListitem);\n\n        isSuccess = true;\n      });\n\n      isSuccess = validProductQty(newProducts);\n\n      if (!isFondVariant) {\n        snackbar.error('', {\n          jsx: successTip({\n            message: errorMessage,\n            link: '',\n            linkText: '',\n            isOutLink: false,\n          }),\n          isClose: true,\n        });\n\n        return;\n      }\n\n      if (isSuccess) {\n        await calculateProductListPrice(newProducts, '2');\n        addQuoteDraftProducts(newProducts);\n        snackbar.success('', {\n          jsx: successTip({\n            message: b3Lang('purchasedProducts.footer.productsAddedToQuote'),\n            link: '/quoteDraft',\n            linkText: b3Lang('purchasedProducts.footer.viewQuote'),\n            isOutLink: false,\n          }),\n          isClose: true,\n        });\n      } else {\n        snackbar.error('', {\n          jsx: successTip({\n            message: b3Lang('purchasedProducts.footer.productsLimit'),\n            link: '/quoteDraft',\n            linkText: b3Lang('purchasedProducts.footer.viewQuote'),\n            isOutLink: false,\n          }),\n          isClose: true,\n        });\n      }\n    } catch (e) {\n      b2bLogger.error(e);\n    } finally {\n      setIsRequestLoading(false);\n    }\n  };\n\n  // Add selected to shopping list\n  const gotoShoppingDetail = (id: string | number) => {\n    navigate(`/shoppingList/${id}`);\n  };\n\n  const tip = (id: string | number) => (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          mr: '15px',\n        }}\n      >\n        {b3Lang('purchasedProducts.footer.productsAddedToShoppingList')}\n      </Box>\n      <Button\n        onClick={() => gotoShoppingDetail(id)}\n        variant=\"text\"\n        sx={{\n          color: '#ffffff',\n          padding: 0,\n        }}\n      >\n        view shopping list\n      </Button>\n    </Box>\n  );\n\n  const handleShoppingClose = (isTrue?: boolean) => {\n    if (isTrue) {\n      setOpenShoppingList(false);\n      setIsOpenCreateShopping(false);\n    } else {\n      setOpenShoppingList(false);\n      setIsOpenCreateShopping(false);\n    }\n  };\n\n  const handleOpenCreateDialog = () => {\n    setOpenShoppingList(false);\n    setIsOpenCreateShopping(true);\n  };\n\n  const handleCloseShoppingClick = () => {\n    setIsOpenCreateShopping(false);\n    setOpenShoppingList(true);\n  };\n\n  const handleCreateShoppingClick = () => {\n    handleClose();\n    handleCloseShoppingClick();\n    setOpenShoppingList(true);\n  };\n\n  const handleAddSelectedToShoppingList = async (shoppingListId: string | number) => {\n    setIisShoppingListLoading(true);\n    try {\n      const productIds: number[] = [];\n      checkedArr.forEach((product: CheckedProduct) => {\n        const { node } = product;\n\n        if (!productIds.includes(Number(node.productId))) {\n          productIds.push(Number(node.productId));\n        }\n      });\n\n      const items: CustomFieldItems = [];\n\n      checkedArr.forEach((product: CheckedProduct) => {\n        const {\n          node: { optionList, productId, quantity, variantId, productsSearch },\n        } = product;\n\n        const optionsList = getOptionsList(optionList);\n\n        const newOptionLists = getValidOptionsList(optionsList, productsSearch);\n        items.push({\n          productId: Number(productId),\n          variantId: Number(variantId),\n          quantity: Number(quantity),\n          optionList: newOptionLists,\n        });\n      });\n\n      const addToShoppingList = isB2BUser ? addProductToShoppingList : addProductToBcShoppingList;\n      await addToShoppingList({\n        shoppingListId: Number(shoppingListId),\n        items,\n      });\n\n      snackbar.success(b3Lang('purchasedProducts.footer.productsAddedToShoppingList'), {\n        jsx: () => tip(shoppingListId),\n        isClose: true,\n      });\n      handleShoppingClose(true);\n    } catch (err) {\n      b2bLogger.error(err);\n    } finally {\n      setIisShoppingListLoading(false);\n    }\n  };\n\n  const buttonList = [\n    {\n      name: b3Lang('purchasedProducts.footer.addToCart'),\n      key: 'add-selected-to-cart',\n      handleClick: handleAddSelectedToCart,\n      isDisabled: !isShowCartAction,\n    },\n    {\n      name: b3Lang('purchasedProducts.footer.addToQuote'),\n      key: 'add-selected-to-quote',\n      handleClick: handleAddSelectedToQuote,\n      isDisabled: !productQuoteEnabled,\n    },\n    {\n      name: b3Lang('purchasedProducts.footer.addSelectedProductsToShoppingList'),\n      key: 'add-selected-to-shoppingList',\n      handleClick: handleCreateShoppingClick,\n      isDisabled: !shoppingListEnabled,\n    },\n  ];\n\n  useEffect(() => {\n    if (checkedArr.length > 0) {\n      let total = 0.0;\n\n      checkedArr.forEach((item: CheckedProduct) => {\n        const {\n          node: {\n            variantId,\n            productsSearch: { variants },\n            quantity,\n            basePrice,\n          },\n        } = item;\n\n        if (variants?.length) {\n          const priceIncTax =\n            getProductPriceIncTaxOrExTaxBySetting(variants, Number(variantId)) ||\n            Number(basePrice || 0);\n          total += priceIncTax * Number(quantity);\n        } else {\n          total += Number(basePrice || 0) * Number(quantity);\n        }\n      });\n\n      setSelectedSubTotal((1000 * total) / 1000);\n    } else {\n      setSelectedSubTotal(0.0);\n    }\n  }, [checkedArr]);\n\n  let gridBarStyles: SxProps = {\n    display: isMobile ? 'initial' : 'flex',\n    flexBasis: '100%',\n  };\n\n  if (isDesktopLimit) {\n    gridBarStyles = {\n      display: 'flex',\n      flexGrow: 1,\n      maxWidth: 1775,\n      margin: 'auto',\n    };\n  }\n\n  return (\n    <>\n      {isShowCartAction || productQuoteEnabled || shoppingListEnabled ? (\n        <Grid\n          sx={{\n            position: 'fixed',\n            bottom: isMobile && isAgenting ? '52px' : 0,\n            left: 0,\n            backgroundColor: '#fff',\n            width: '100%',\n            padding: isMobile ? '0 0 1rem 0' : '16px 0 16px',\n            height: isMobile ? '8rem' : 'auto',\n            marginLeft: 0,\n            display: 'flex',\n            flexWrap: 'nowrap',\n            zIndex: '1000',\n          }}\n          container\n          spacing={2}\n        >\n          <Grid item={isMobile} sx={gridBarStyles}>\n            <Box\n              sx={{\n                width: 263,\n                display: isMobile ? 'none' : 'block',\n              }}\n            />\n            <Box\n              sx={{\n                flex: 1,\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: isMobile ? 0 : '50px',\n                paddingRight: isMobile ? 0 : '80px',\n              }}\n            >\n              <Box\n                sx={{\n                  width: isMobile ? '100%' : 'calc(66.6667% + 32px)',\n                  display: 'flex',\n                  zIndex: '999',\n                  justifyContent: 'space-between',\n                  ...containerStyle,\n                }}\n              >\n                <Typography\n                  sx={{\n                    color: '#000000',\n                    fontSize: '16px',\n                    fontWeight: '400',\n                  }}\n                >\n                  {b3Lang('purchasedProducts.footer.selectedProducts', {\n                    quantity: checkedArr.length,\n                  })}\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexWrap: isMobile ? 'wrap' : 'nowrap',\n                    width: isMobile ? '100%' : 'auto',\n                  }}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    sx={{\n                      fontSize: '16px',\n                      fontWeight: '700',\n                      color: '#000000',\n                    }}\n                  >\n                    {b3Lang('purchasedProducts.footer.subtotal', {\n                      subtotal: currencyFormat(selectedSubTotal),\n                    })}\n                  </Typography>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      marginTop: isMobile ? '0.5rem' : 0,\n                      marginLeft: isMobile ? 0 : '20px',\n                      width: isMobile ? '100%' : 'auto',\n                    }}\n                  >\n                    <CustomButton\n                      variant=\"contained\"\n                      ref={ref}\n                      onClick={handleOpenBtnList}\n                      sx={{\n                        marginRight: isMobile ? '1rem' : 0,\n                        width: isMobile ? '100%' : 'auto',\n                      }}\n                      endIcon={<ArrowDropDown />}\n                    >\n                      {b3Lang('purchasedProducts.footer.addSelectedTo')}\n                    </CustomButton>\n\n                    <Menu\n                      id=\"basic-menu\"\n                      anchorEl={ref.current}\n                      open={isOpen}\n                      onClose={handleClose}\n                      MenuListProps={{\n                        'aria-labelledby': 'basic-button',\n                      }}\n                    >\n                      {buttonList.length > 0 &&\n                        buttonList.map((button) => {\n                          if (button.isDisabled) return null;\n\n                          return (\n                            <MenuItem\n                              key={button.key}\n                              onClick={() => {\n                                button.handleClick();\n                              }}\n                            >\n                              {button.name}\n                            </MenuItem>\n                          );\n                        })}\n                    </Menu>\n                  </Box>\n                </Box>\n              </Box>\n              <Box\n                sx={{\n                  width: '33.3333%',\n                  display: !isMobile ? 'block' : 'none',\n                }}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      ) : null}\n\n      <OrderShoppingList\n        isOpen={openShoppingList}\n        dialogTitle={b3Lang('purchasedProducts.footer.addToShoppingList')}\n        onClose={handleShoppingClose}\n        onConfirm={handleAddSelectedToShoppingList}\n        onCreate={handleOpenCreateDialog}\n        isLoading={isShoppingListLoading}\n        setLoading={setIisShoppingListLoading}\n      />\n\n      <CreateShoppingList\n        open={isOpenCreateShopping}\n        onChange={handleCreateShoppingClick}\n        onClose={handleCloseShoppingClick}\n      />\n    </>\n  );\n}\n\nexport default QuickOrderFooter;\n","import { KeyboardEventHandler, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, Grid, Typography } from '@mui/material';\n\nimport { B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport { isB2BUserSelector, useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport { LineItems } from '@/utils/b3Product/b3Product';\nimport { getQuickAddRowFields } from '@/utils/b3Product/shared/config';\n\nimport { getB2BVariantInfoBySkus, getBcVariantInfoBySkus } from '../../../shared/service/b2b';\nimport { ShoppingListAddProductOption, SimpleObject } from '../../../types';\nimport { getCartProductInfo } from '../utils';\n\ninterface AddToListContentProps {\n  updateList?: () => void;\n  quickAddToList: (products: CustomFieldItems[]) => CustomFieldItems;\n  level?: number;\n  buttonText?: string;\n}\n\nexport default function QuickAdd(props: AddToListContentProps) {\n  const b3Lang = useB3Lang();\n  const {\n    updateList = () => {},\n    quickAddToList,\n    level = 3,\n    buttonText = b3Lang('purchasedProducts.quickAdd.addProductToList'),\n  } = props;\n\n  const isB2BUser = useAppSelector(isB2BUserSelector);\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n  const [rows, setRows] = useState(level);\n  const [formFields, setFormFields] = useState<CustomFieldItems[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loopRows = (rows: number, fn: (index: number) => void) => {\n    new Array(rows).fill(1).forEach((_, index) => fn(index));\n  };\n\n  useEffect(() => {\n    let formFields: CustomFieldItems[] = [];\n    loopRows(rows, (index) => {\n      formFields = [...formFields, ...getQuickAddRowFields(index, b3Lang)];\n    });\n    setFormFields(formFields);\n    // disabling since b3Lang since it has rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rows]);\n\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const handleAddRowsClick = () => {\n    setRows(rows + level);\n  };\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setError,\n    setValue,\n  } = useForm({\n    mode: 'all',\n  });\n\n  const validateSkuInput = (index: number, sku: string, qty: string) => {\n    if (!sku && !qty) {\n      return true;\n    }\n\n    let isValid = true;\n    const quantity = parseInt(qty, 10) || 0;\n\n    if (!sku) {\n      setError(`sku-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.sku'),\n        }),\n      });\n      isValid = false;\n    }\n\n    if (!qty) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: b3Lang('global.validate.required', {\n          label: b3Lang('purchasedProducts.quickAdd.qty'),\n        }),\n      });\n      isValid = false;\n    } else if (quantity <= 0) {\n      setError(`qty-${index}`, {\n        type: 'manual',\n        message: 'incorrect number',\n      });\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const getProductData = (value: CustomFieldItems) => {\n    const skuValue: SimpleObject = {};\n    let isValid = true;\n    loopRows(rows, (index) => {\n      const sku = value[`sku-${index}`];\n      const qty = value[`qty-${index}`];\n\n      isValid = validateSkuInput(index, sku, qty) === false ? false : isValid;\n\n      if (isValid && sku) {\n        const quantity = parseInt(qty, 10) || 0;\n        skuValue[sku] = skuValue[sku] ? (skuValue[sku] as number) + quantity : quantity;\n      }\n    });\n\n    return {\n      skuValue,\n      isValid,\n      skus: Object.keys(skuValue),\n    };\n  };\n\n  const getProductItems = async (\n    variantInfoList: CustomFieldItems,\n    skuValue: SimpleObject,\n    skus: string[],\n  ) => {\n    const notFoundSku: string[] = [];\n    const notPurchaseSku: string[] = [];\n    const productItems: CustomFieldItems[] = [];\n    const passSku: string[] = [];\n    const notStockSku: {\n      sku: string;\n      stock: number;\n    }[] = [];\n    const orderLimitSku: {\n      sku: string;\n      min: number;\n      max: number;\n    }[] = [];\n\n    const cartProducts = await getCartProductInfo();\n\n    skus.forEach((sku) => {\n      const variantInfo: CustomFieldItems | null = (variantInfoList || []).find(\n        (variant: CustomFieldItems) => variant.variantSku.toUpperCase() === sku.toUpperCase(),\n      );\n\n      if (!variantInfo) {\n        notFoundSku.push(sku);\n        return;\n      }\n\n      const {\n        productId,\n        variantId,\n        option: options,\n        purchasingDisabled = '1',\n        stock,\n        isStock,\n        maxQuantity,\n        minQuantity,\n        variantSku,\n      } = variantInfo;\n\n      const num =\n        cartProducts.find(\n          (item: LineItems) =>\n            item.sku === variantSku &&\n            Number(item?.variantEntityId || 0) === Number(variantId || 0),\n        )?.quantity || 0;\n\n      const quantity = (skuValue[sku] as number) || 0;\n\n      const allQuantity = (skuValue[sku] as number) + num || 0;\n\n      if (purchasingDisabled === '1') {\n        notPurchaseSku.push(sku);\n        return;\n      }\n\n      if (isStock === '1' && quantity > Number(stock)) {\n        notStockSku.push({\n          sku,\n          stock: Number(stock),\n        });\n\n        return;\n      }\n\n      if (\n        maxQuantity !== 0 &&\n        minQuantity !== 0 &&\n        allQuantity > 0 &&\n        (allQuantity > maxQuantity || allQuantity < minQuantity)\n      ) {\n        orderLimitSku.push({\n          sku,\n          min: allQuantity < minQuantity ? minQuantity : 0,\n          max: allQuantity > maxQuantity ? maxQuantity : 0,\n        });\n\n        return;\n      }\n\n      const optionList = (options || []).reduce(\n        (arr: ShoppingListAddProductOption[], optionStr: string) => {\n          try {\n            const option = typeof optionStr === 'string' ? JSON.parse(optionStr) : optionStr;\n            arr.push({\n              optionId: `attribute[${option.option_id}]`,\n              optionValue: `${option.id}`,\n            });\n            return arr;\n          } catch (error) {\n            return arr;\n          }\n        },\n        [],\n      );\n\n      passSku.push(sku);\n\n      productItems.push({\n        ...variantInfo,\n        newSelectOptionList: optionList,\n        productId: parseInt(productId, 10) || 0,\n        quantity,\n        variantId: parseInt(variantId, 10) || 0,\n      });\n    });\n\n    return {\n      notFoundSku,\n      notPurchaseSku,\n      notStockSku,\n      productItems,\n      passSku,\n      orderLimitSku,\n    };\n  };\n\n  const showErrors = (\n    value: CustomFieldItems,\n    skus: string[],\n    inputType: 'sku' | 'qty',\n    message: string,\n  ) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setError(skuFieldName.replace('sku', inputType), {\n          type: 'manual',\n          message,\n        });\n      }\n    });\n  };\n\n  const clearInputValue = (value: CustomFieldItems, skus: string[]) => {\n    skus.forEach((sku) => {\n      const skuFieldName = Object.keys(value).find((name) => value[name] === sku) || '';\n\n      if (skuFieldName) {\n        setValue(skuFieldName, '');\n        setValue(skuFieldName.replace('sku', 'qty'), '');\n      }\n    });\n  };\n\n  const getVariantList = async (skus: string[]) => {\n    const getVariantInfoBySku = isB2BUser ? getB2BVariantInfoBySkus : getBcVariantInfoBySkus;\n    try {\n      const { variantSku: variantInfoList } = await getVariantInfoBySku(\n        {\n          skus,\n        },\n        true,\n      );\n\n      return variantInfoList;\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const handleAddToList = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(\n        'Your business account is pending approval. This feature is currently disabled.',\n      );\n      return;\n    }\n\n    handleSubmit(async (value) => {\n      try {\n        setIsLoading(true);\n        const { skuValue, isValid, skus } = getProductData(value);\n\n        if (!isValid || skus.length <= 0) {\n          return;\n        }\n\n        const variantInfoList = await getVariantList(skus);\n\n        const { notFoundSku, notPurchaseSku, productItems, passSku, notStockSku, orderLimitSku } =\n          await getProductItems(variantInfoList, skuValue, skus);\n\n        if (notFoundSku.length > 0) {\n          showErrors(value, notFoundSku, 'sku', '');\n          snackbar.error(\n            b3Lang('purchasedProducts.quickAdd.notFoundSku', {\n              notFoundSku: notFoundSku.join(','),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (notPurchaseSku.length > 0) {\n          showErrors(value, notPurchaseSku, 'sku', '');\n          snackbar.error(\n            b3Lang('purchasedProducts.quickAdd.notPurchaseableSku', {\n              notPurchaseSku: notPurchaseSku.join(','),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (notStockSku.length > 0) {\n          const stockSku = notStockSku.map((item) => item.sku);\n\n          notStockSku.forEach((item) => {\n            const { sku, stock } = item;\n\n            showErrors(value, [sku], 'qty', `${stock} in stock`);\n          });\n\n          snackbar.error(\n            b3Lang('purchasedProducts.quickAdd.insufficientStockSku', {\n              stockSku: stockSku.join(','),\n            }),\n            {\n              isClose: true,\n            },\n          );\n        }\n\n        if (orderLimitSku.length > 0) {\n          orderLimitSku.forEach((item) => {\n            const { min, max, sku } = item;\n\n            const type = min === 0 ? 'Max' : 'Min';\n            const limit = min === 0 ? max : min;\n            showErrors(value, [sku], 'qty', `${type} is ${limit}`);\n\n            const typeText = min === 0 ? 'maximum' : 'minimum';\n            snackbar.error(\n              b3Lang('purchasedProducts.quickAdd.purchaseQuantityLimitMessage', {\n                typeText,\n                limit,\n                sku,\n              }),\n              {\n                isClose: true,\n              },\n            );\n          });\n        }\n\n        if (productItems.length > 0) {\n          await quickAddToList(productItems);\n          clearInputValue(value, passSku);\n\n          updateList();\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  };\n\n  const handleKeyDown: KeyboardEventHandler<HTMLDivElement> = (e) => {\n    if (e.key === 'Enter') {\n      handleAddToList();\n    }\n  };\n\n  return (\n    <B3Spin isSpinning={isLoading} spinningHeight=\"auto\">\n      <Box sx={{ width: '100%' }}>\n        <Grid\n          container\n          sx={{\n            margin: '16px 0',\n          }}\n        >\n          <Grid\n            item\n            sx={{\n              flex: 1,\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              sx={{\n                color: '#000',\n              }}\n              variant=\"body1\"\n            >\n              {b3Lang('purchasedProducts.quickAdd.title')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <CustomButton\n              variant=\"text\"\n              sx={{\n                textTransform: 'initial',\n                ml: '-8px',\n              }}\n              onClick={handleAddRowsClick}\n            >\n              {b3Lang('purchasedProducts.quickAdd.showMoreRowsButton')}\n            </CustomButton>\n          </Grid>\n        </Grid>\n\n        <Box\n          onKeyDown={handleKeyDown}\n          sx={{\n            '& label': {\n              zIndex: 0,\n            },\n          }}\n        >\n          <B3CustomForm\n            formFields={formFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n          />\n        </Box>\n\n        <CustomButton\n          variant=\"outlined\"\n          fullWidth\n          disabled={isLoading}\n          onClick={handleAddToList}\n          sx={{\n            margin: '20px 0',\n          }}\n        >\n          <B3Spin isSpinning={isLoading} tip=\"\" size={16}>\n            <Box\n              sx={{\n                flex: 1,\n                textAlign: 'center',\n              }}\n            >\n              {buttonText}\n            </Box>\n          </B3Spin>\n        </CustomButton>\n      </Box>\n    </B3Spin>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useB3Lang } from '@b3/lang';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport { Box, Card, CardContent, Divider, Link, Typography } from '@mui/material';\n\nimport { B3Upload, successTip } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { CART_URL } from '@/constants';\nimport { useBlockPendingAccountViewPrice } from '@/hooks';\nimport useMobile from '@/hooks/useMobile';\nimport { useAppSelector } from '@/store';\nimport { snackbar } from '@/utils';\nimport b2bLogger from '@/utils/b3Logger';\nimport b3TriggerCartNumber from '@/utils/b3TriggerCartNumber';\nimport { callCart } from '@/utils/cartUtils';\n\nimport SearchProduct from '../../ShoppingListDetails/components/SearchProduct';\nimport { addCartProductToVerify } from '../utils';\n\nimport QuickAdd from './QuickAdd';\n\ninterface QuickOrderPadProps {\n  isB2BUser: boolean;\n}\n\nexport default function QuickOrderPad(props: QuickOrderPadProps) {\n  const { isB2BUser } = props;\n  const [isMobile] = useMobile();\n  const b3Lang = useB3Lang();\n\n  const [isOpenBulkLoadCSV, setIsOpenBulkLoadCSV] = useState(false);\n  const [productData, setProductData] = useState<CustomFieldItems>([]);\n  const [addBtnText, setAddBtnText] = useState<string>('Add to cart');\n  const [isLoading, setIsLoading] = useState(false);\n  const [blockPendingAccountViewPrice] = useBlockPendingAccountViewPrice();\n\n  const companyStatus = useAppSelector(({ company }) => company.companyInfo.status);\n\n  const getSnackbarMessage = (res: any) => {\n    if (res && !res.errors) {\n      snackbar.success('', {\n        jsx: successTip({\n          message: b3Lang('purchasedProducts.quickOrderPad.productsAdded'),\n          link: CART_URL,\n          linkText: b3Lang('purchasedProducts.quickOrderPad.viewCart'),\n          isOutLink: true,\n          isCustomEvent: true,\n        }),\n        isClose: true,\n      });\n    } else {\n      snackbar.error('Error has occurred', {\n        isClose: true,\n      });\n    }\n  };\n\n  const quickAddToList = async (products: CustomFieldItems[]) => {\n    const res = await callCart(products);\n\n    if (res && res.errors) {\n      snackbar.error(res.errors[0].message, {\n        isClose: true,\n      });\n    } else {\n      snackbar.success('', {\n        jsx: successTip({\n          message: b3Lang('purchasedProducts.quickOrderPad.productsAdded'),\n          link: CART_URL,\n          linkText: b3Lang('purchasedProducts.quickOrderPad.viewCart'),\n          isOutLink: true,\n          isCustomEvent: true,\n        }),\n        isClose: true,\n      });\n    }\n\n    b3TriggerCartNumber();\n\n    return res;\n  };\n\n  const limitProductTips = (data: CustomFieldItems) => (\n    <>\n      <p\n        style={{\n          margin: 0,\n        }}\n      >\n        {b3Lang('purchasedProducts.quickOrderPad.notEnoughStock', {\n          variantSku: data.variantSku,\n        })}\n      </p>\n      <p\n        style={{\n          margin: 0,\n        }}\n      >\n        {b3Lang('purchasedProducts.quickOrderPad.availableAmount', {\n          availableAmount: data.AvailableAmount,\n        })}\n      </p>\n    </>\n  );\n\n  const outOfStockProductTips = (outOfStock: string[], fileErrorsCSV: string) => (\n    <>\n      <p\n        style={{\n          margin: 0,\n        }}\n      >\n        {b3Lang('purchasedProducts.quickOrderPad.outOfStockSku', {\n          outOfStock: outOfStock.join(','),\n        })}\n      </p>\n      <Link\n        href={fileErrorsCSV}\n        sx={{\n          color: '#FFFFFF',\n        }}\n      >\n        {b3Lang('purchasedProducts.quickOrderPad.downloadErrorsCSV')}\n      </Link>\n    </>\n  );\n\n  const getValidProducts = (products: CustomFieldItems) => {\n    const notPurchaseSku: string[] = [];\n    const productItems: CustomFieldItems[] = [];\n    const limitProduct: CustomFieldItems[] = [];\n    const minLimitQuantity: CustomFieldItems[] = [];\n    const maxLimitQuantity: CustomFieldItems[] = [];\n    const outOfStock: string[] = [];\n\n    products.forEach((item: CustomFieldItems) => {\n      const { products: currentProduct, qty } = item;\n      const {\n        option,\n        isStock,\n        stock,\n        purchasingDisabled,\n        maxQuantity,\n        minQuantity,\n        variantSku,\n        variantId,\n        productId,\n        modifiers,\n      } = currentProduct;\n      if (purchasingDisabled === '1' || purchasingDisabled) {\n        notPurchaseSku.push(variantSku);\n        return;\n      }\n\n      if (isStock === '1' && stock === 0) {\n        outOfStock.push(variantSku);\n        return;\n      }\n\n      if (isStock === '1' && stock > 0 && stock < Number(qty)) {\n        limitProduct.push({\n          variantSku,\n          AvailableAmount: stock,\n        });\n        return;\n      }\n\n      if (Number(minQuantity) > 0 && Number(qty) < Number(minQuantity)) {\n        minLimitQuantity.push({\n          variantSku,\n          minQuantity,\n        });\n\n        return;\n      }\n\n      if (Number(maxQuantity) > 0 && Number(qty) > Number(maxQuantity)) {\n        maxLimitQuantity.push({\n          variantSku,\n          maxQuantity,\n        });\n\n        return;\n      }\n\n      const optionsList = option.map((item: CustomFieldItems) => ({\n        optionId: item.option_id,\n        optionValue: item.id,\n      }));\n\n      productItems.push({\n        productId: parseInt(productId, 10) || 0,\n        variantId: parseInt(variantId, 10) || 0,\n        quantity: Number(qty),\n        optionSelections: optionsList,\n        allOptions: modifiers,\n      });\n    });\n\n    return {\n      notPurchaseSku,\n      productItems,\n      limitProduct,\n      minLimitQuantity,\n      maxLimitQuantity,\n      outOfStock,\n    };\n  };\n\n  const handleAddToCart = async (productsData: CustomFieldItems) => {\n    setIsLoading(true);\n    try {\n      const { stockErrorFile, validProduct } = productsData;\n\n      const {\n        notPurchaseSku,\n        productItems,\n        limitProduct,\n        minLimitQuantity,\n        maxLimitQuantity,\n        outOfStock,\n      } = getValidProducts(validProduct);\n\n      if (productItems.length > 0) {\n        const res = await callCart(productItems);\n\n        getSnackbarMessage(res);\n        b3TriggerCartNumber();\n      }\n\n      if (limitProduct.length > 0) {\n        limitProduct.forEach((data: CustomFieldItems) => {\n          snackbar.warning('', {\n            jsx: () => limitProductTips(data),\n          });\n        });\n      }\n\n      if (notPurchaseSku.length > 0) {\n        snackbar.error(\n          b3Lang('purchasedProducts.quickOrderPad.notPurchaseableSku', {\n            notPurchaseSku: notPurchaseSku.join(','),\n          }),\n          {\n            isClose: true,\n          },\n        );\n      }\n\n      if (outOfStock.length > 0 && stockErrorFile) {\n        snackbar.error('', {\n          jsx: () => outOfStockProductTips(outOfStock, stockErrorFile),\n          isClose: true,\n        });\n      }\n\n      if (minLimitQuantity.length > 0) {\n        minLimitQuantity.forEach((data: CustomFieldItems) => {\n          snackbar.error(\n            b3Lang('purchasedProducts.quickOrderPad.minQuantityMessage', {\n              minQuantity: data.minQuantity,\n              sku: data.variantSku,\n            }),\n            {\n              isClose: true,\n            },\n          );\n        });\n      }\n\n      if (maxLimitQuantity.length > 0) {\n        maxLimitQuantity.forEach((data: CustomFieldItems) => {\n          snackbar.error(\n            b3Lang('purchasedProducts.quickOrderPad.maxQuantityMessage', {\n              maxQuantity: data.maxQuantity,\n              sku: data.variantSku,\n            }),\n            {\n              isClose: true,\n            },\n          );\n        });\n      }\n\n      setIsOpenBulkLoadCSV(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuickSearchAddCart = async (productData: CustomFieldItems[]) => {\n    const currentProducts = productData.map((item) => {\n      return {\n        node: {\n          ...item,\n          productsSearch: item,\n        },\n      };\n    });\n    const isPassVerify = await addCartProductToVerify(\n      currentProducts as CustomFieldItems[],\n      b3Lang,\n    );\n    try {\n      if (isPassVerify) {\n        await quickAddToList(productData);\n      }\n    } catch (error) {\n      b2bLogger.error(error);\n    }\n\n    return productData;\n  };\n\n  const handleOpenUploadDiag = () => {\n    if (blockPendingAccountViewPrice && companyStatus === 0) {\n      snackbar.info(b3Lang('purchasedProducts.quickOrderPad.addNProductsToCart'));\n    } else {\n      setIsOpenBulkLoadCSV(true);\n    }\n  };\n\n  useEffect(() => {\n    if (productData?.length > 0) {\n      setAddBtnText(\n        b3Lang('purchasedProducts.quickOrderPad.addNProductsToCart', {\n          quantity: productData.length,\n        }),\n      );\n    }\n    // disabling this rule as b3Lang has rendering issues\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productData]);\n\n  return (\n    <Card\n      sx={{\n        marginBottom: isMobile ? '8.5rem' : '50px',\n      }}\n    >\n      <CardContent>\n        <Box>\n          <Typography\n            variant=\"h5\"\n            sx={{\n              marginBottom: '1rem',\n            }}\n          >\n            {b3Lang('purchasedProducts.quickOrderPad.quickOrderPad')}\n          </Typography>\n\n          <SearchProduct\n            addToList={handleQuickSearchAddCart}\n            searchDialogTitle={b3Lang('purchasedProducts.quickOrderPad.quickOrderPad')}\n            type=\"quickOrder\"\n            addButtonText={b3Lang('purchasedProducts.quickOrderPad.addToCart')}\n            isB2BUser={isB2BUser}\n          />\n\n          <Divider />\n\n          <QuickAdd\n            quickAddToList={quickAddToList}\n            buttonText={b3Lang('purchasedProducts.quickOrderPad.addProductsToCart')}\n          />\n\n          <Divider />\n\n          <Box\n            sx={{\n              margin: '20px 0 0',\n            }}\n          >\n            <CustomButton variant=\"text\" onClick={() => handleOpenUploadDiag()}>\n              <UploadFileIcon\n                sx={{\n                  marginRight: '8px',\n                }}\n              />\n              {b3Lang('purchasedProducts.quickOrderPad.bulkUploadCSV')}\n            </CustomButton>\n          </Box>\n        </Box>\n      </CardContent>\n\n      <B3Upload\n        isOpen={isOpenBulkLoadCSV}\n        setIsOpen={setIsOpenBulkLoadCSV}\n        handleAddToList={handleAddToCart}\n        setProductData={setProductData}\n        addBtnText={addBtnText}\n        isLoading={isLoading}\n        isToCart\n      />\n    </Card>\n  );\n}\n"],"names":["isB2BUser","useAppSelector","isB2BUserSelector","isAgenting","b2bFeatures","masqueradeCompany","isMobile","useMobile","isRequestLoading","setIsRequestLoading","useState","checkedArr","setCheckedArr","purchasabilityPermission","rolePermissionSelector","isShowQuickOrderPad","jsxs","Box","sx","width","children","jsx","display","justifyContent","Grid","m","container","spacing","item","xs","backgroundColor","boxShadow","borderRadius","pr","QuickOrderTable","pt","pl","QuickOrderPad","position","bottom","left","zIndex","QuickOrderFooter","getProductPriceIncTaxOrExTaxBySetting","variants","variantId","variantSku","global","showInclusiveTaxPrice","store","getState","currentVariantInfo","find","Number","variant_id","sku","isEmpty","bcCalculatedPrice","bc_calculated_price","tax_inclusive","tax_exclusive","orderedProducts","data","q","first","offset","beginDateAt","endDateAt","orderBy","getOrderedProducts","B3Request","graphqlB2B","query","getBcOrderedProducts","StyledImage","styled","maxWidth","height","marginRight","QuickOrderCard","props","shoppingDetail","checkBox","handleUpdateProductQty","b3Lang","useB3Lang","quantity","imageUrl","productName","optionList","basePrice","lastOrderedAt","productsSearch","price","currentVariants","currentImage","b2bGetVariantImageByVariantInfo","borderTop","CardContent","color","src","PRODUCT_DEFAULT_IMAGE","alt","loading","flex","Typography","variant","margin","length","map","option","fontSize","lineHeight","display_name","display_value","currencyFormat","TextField","size","type","label","inputProps","inputMode","pattern","value","onChange","e","id","target","displayFormat","StyleQuickOrderTable","flexDirection","verticalAlign","paddingTop","StyledTextField","paddingRight","defaultSortKey","sortKeys","product","paginationTableRef","useRef","companyInfoId","company","companyInfo","customerGroupId","customer","search","setSearch","distanceDay","handleSetOrderBy","order","useSort","total","setTotalCount","currency_code","currencyCode","activeCurrencyInfoSelector","listItems","current","getList","listCacheItems","getCacheList","newListItems","node","newListCacheItems","setList","setCacheAllList","showPrice","row","isPriceHidden","getDisplayPrice","productInfo","showText","forcedSkip","handleSetCheckedQty","cacheProductList","qty","currentProduct","productId","columnItems","key","title","render","alignItems","isSortable","priceIncTax","padding","style","textAlign","B3Spin","isSpinning","marginBottom","mr","B3FilterSearch","h","searchBGColor","handleChange","async","handleSearchProduct","B3FilterMore","filterMoreInfo","startPicker","isEnabled","defaultValue","pickerKey","endPicker","isShowMore","params","startValue","endValue","B3FilterPicker","handlePickerChange","mt","customWidth","B3PaginationTable","ref","rowsPerPageOptions","getRequestList","edges","totalCount","listProducts","productIds","forEach","includes","push","getProducts","searchB2BProducts","searchBcProducts","companyId","newProductsSearch","conversionProductsList","err","snackbar","error","handleGetProductsById","searchParams","isCustomRender","showCheckbox","showSelectAllCheckbox","disableCheckbox","hover","labelRowsPerPage","showBorder","requestLoading","getSelectCheckbox","selectCheckbox","productList","checkedItems","reduce","pre","newItems","itemIsMobileSpacing","isSelectOtherPageCheckbox","noDataText","sortDirection","sortByFn","renderItem","_","getCartProductInfo","site","cart","getCart","lineItems","Object","keys","cru","addCartProductToVerify","b3lang","cartProducts","checkItem","num","variantEntityId","every","handleVerifyProduct","products","inventoryLevel","inventoryTracking","orderQuantityMaximum","orderQuantityMinimum","isEnableProduct","blockPendingQuoteNonPurchasableOOS","isStock","purchasingDisabled","stock","productSku","currentVariant","purchasing_disabled","inventory_level","notPurchaseSku","isVerify","isClose","minQuantity","maxQuantity","state","productQuoteEnabled","shoppingListEnabled","useContext","GlobalContext","isShowCartAction","isDesktopLimit","useMediaQuery","isOpen","setIsOpen","selectedSubTotal","setSelectedSubTotal","openShoppingList","setOpenShoppingList","isOpenCreateShopping","setIsOpenCreateShopping","isShoppingListLoading","setIisShoppingListLoading","navigate","useNavigate","containerStyle","handleClose","getOptionsList","options","product_option_id","optionId","optionValue","tip","Button","onClick","gotoShoppingDetail","handleShoppingClose","isTrue","handleCloseShoppingClick","handleCreateShoppingClick","buttonList","name","handleClick","getVariantInfoByProductId","getInventoryInfos","inventoryInfos","inventory","currentInventoryInfo","optionSelections","allOptions","parseInt","product_id","handleSetCartLineItems","res","callCart","errors","success","successTip","message","link","CART_URL","linkText","isOutLink","isCustomEvent","b3TriggerCartNumber","isDisabled","productsWithSku","filter","checkedItem","noSkuProducts","newProductInfo","isSuccess","errorMessage","isFondVariant","newProducts","tax","optionsList","currentProductSearch","variantItem","quoteListitem","uuid","primaryImage","image_url","JSON","stringify","validProductQty","calculateProductListPrice","addQuoteDraftProducts","b2bLogger","useEffect","gridBarStyles","flexBasis","flexGrow","Fragment","marginLeft","flexWrap","paddingLeft","fontWeight","subtotal","marginTop","CustomButton","handleOpenBtnList","endIcon","ArrowDropDown","Menu","anchorEl","open","onClose","MenuListProps","button","MenuItem","OrderShoppingList","dialogTitle","onConfirm","items","newOptionLists","getValidOptionsList","addToShoppingList","addProductToShoppingList","addProductToBcShoppingList","shoppingListId","onCreate","handleOpenCreateDialog","isLoading","setLoading","CreateShoppingList","QuickAdd","updateList","quickAddToList","level","buttonText","companyStatus","status","rows","setRows","formFields","setFormFields","setIsLoading","loopRows","fn","Array","fill","index","getQuickAddRowFields","blockPendingAccountViewPrice","useBlockPendingAccountViewPrice","control","handleSubmit","getValues","formState","setError","setValue","useForm","mode","getProductData","skuValue","isValid","validateSkuInput","skus","showErrors","inputType","skuFieldName","replace","handleAddToList","info","variantInfoList","getVariantInfoBySku","getB2BVariantInfoBySkus","getBcVariantInfoBySkus","getVariantList","notFoundSku","productItems","passSku","notStockSku","orderLimitSku","variantInfo","toUpperCase","allQuantity","min","max","arr","optionStr","parse","option_id","newSelectOptionList","getProductItems","join","stockSku","limit","typeText","clearInputValue","spinningHeight","textTransform","ml","handleAddRowsClick","onKeyDown","B3CustomForm","fullWidth","disabled","isOpenBulkLoadCSV","setIsOpenBulkLoadCSV","productData","setProductData","addBtnText","setAddBtnText","Card","SearchProduct","addToList","currentProducts","isPassVerify","searchDialogTitle","addButtonText","Divider","UploadFileIcon","B3Upload","stockErrorFile","validProduct","productsData","limitProduct","minLimitQuantity","maxLimitQuantity","outOfStock","modifiers","AvailableAmount","getValidProducts","getSnackbarMessage","warning","availableAmount","limitProductTips","outOfStockProductTips","fileErrorsCSV","Link","href","isToCart"],"mappings":"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"}