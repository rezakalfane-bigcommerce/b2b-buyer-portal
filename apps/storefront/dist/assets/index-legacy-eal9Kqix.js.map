{"version":3,"file":"index-legacy-eal9Kqix.js","sources":["../../src/pages/ForgotPassword/index.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { useB3Lang } from '@b3/lang';\nimport { Box, ImageListItem, Typography } from '@mui/material';\n\nimport { B3Card, B3CustomForm } from '@/components';\nimport CustomButton from '@/components/button/CustomButton';\nimport { Captcha } from '@/components/form';\nimport B3Spin from '@/components/spin/B3Spin';\nimport { useMobile } from '@/hooks';\nimport { CustomStyleContext } from '@/shared/customStyleButton';\nimport { GlobalContext } from '@/shared/global';\nimport { getStorefrontToken, requestResetPassword } from '@/shared/service/b2b/graphql/recaptcha';\nimport b2bLogger from '@/utils/b3Logger';\n\nimport { getForgotPasswordFields, LoginConfig, sendEmail } from '../Login/config';\nimport { B3ResetPassWordButton, LoginImage } from '../Login/styled';\nimport { type PageProps } from '../PageProps';\n\ninterface ForgotPasswordProps extends PageProps {\n  logo?: string;\n  isEnabledOnStorefront: boolean;\n  storefrontSiteKey: string;\n}\n\nexport function ForgotPassword({\n  setOpenPage,\n  isEnabledOnStorefront,\n  storefrontSiteKey,\n  logo,\n}: ForgotPasswordProps) {\n  const [isMobile] = useMobile();\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const b3Lang = useB3Lang();\n  const forgotPasswordFields = getForgotPasswordFields(b3Lang);\n  const [isCaptchaMissing, setIsCaptchaMissing] = useState(false);\n  const [captchaKey, setCaptchaKey] = useState('');\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm<LoginConfig>({\n    mode: 'onSubmit',\n  });\n\n  const navigate = useNavigate();\n  const emailAddressReset = watch('emailAddress');\n\n  useEffect(() => {\n    if (captchaKey || !isEnabledOnStorefront) setIsCaptchaMissing(false);\n  }, [captchaKey, isEnabledOnStorefront]);\n\n  const handleLoginClick: SubmitHandler<LoginConfig> = async (data) => {\n    const { emailAddress } = data;\n\n    if (isEnabledOnStorefront && !captchaKey) {\n      setIsCaptchaMissing(true);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      if (isEnabledOnStorefront && captchaKey) {\n        try {\n          await requestResetPassword(captchaKey, emailAddressReset);\n          navigate('/login?loginFlag=receivePassword');\n          setLoading(false);\n        } catch (e) {\n          b2bLogger.error(e);\n        }\n      }\n\n      if (!isEnabledOnStorefront) {\n        await sendEmail(emailAddress);\n        setLoading(false);\n        navigate('/login?loginFlag=receivePassword');\n      }\n    } catch (e) {\n      b2bLogger.error(e);\n    }\n  };\n\n  return (\n    <B3Card setOpenPage={setOpenPage}>\n      <Box\n        sx={{\n          bgcolor: '#FFFFFF',\n          borderRadius: '4px',\n          display: 'flex',\n          flexDirection: 'column',\n          mr: 'auto',\n          ml: 'auto',\n          maxWidth: '537px',\n        }}\n      >\n        <Box sx={{ mt: '20px' }}>\n          {logo && (\n            <LoginImage>\n              <ImageListItem\n                sx={{\n                  maxWidth: isMobile ? '175px' : '250px',\n                }}\n                onClick={() => {\n                  window.location.href = '/';\n                }}\n              >\n                <img src={logo} alt={b3Lang('global.tips.registerLogo')} loading=\"lazy\" />\n              </ImageListItem>\n            </LoginImage>\n          )}\n        </Box>\n        <Box\n          sx={{\n            margin: '20px 0 0 0',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Typography\n            variant=\"h5\"\n            sx={{\n              margin: '16px 0',\n            }}\n          >\n            {b3Lang('forgotPassword.resetPassword')}\n          </Typography>\n          <Typography\n            variant=\"body1\"\n            sx={{\n              margin: '0 16px 16px 16px',\n            }}\n          >\n            {b3Lang('forgotPassword.requestEmail')}\n          </Typography>\n          <B3CustomForm\n            formFields={forgotPasswordFields}\n            errors={errors}\n            control={control}\n            getValues={getValues}\n            setValue={setValue}\n            sx={{ margin: '0 16px', maxWidth: isMobile ? '311px' : '505px' }}\n          />\n          {isEnabledOnStorefront && isCaptchaMissing ? (\n            <Typography\n              variant=\"body1\"\n              sx={{\n                color: 'red',\n                display: 'flex',\n                alignSelf: 'flex-start',\n                marginLeft: '18px',\n                marginTop: '2px',\n                fontSize: '13px',\n              }}\n            >\n              {b3Lang('login.loginText.missingCaptcha')}\n            </Typography>\n          ) : (\n            ''\n          )}\n          {isEnabledOnStorefront ? (\n            <Box sx={{ marginTop: '20px' }}>\n              <Captcha\n                siteKey={storefrontSiteKey}\n                size=\"normal\"\n                email={emailAddressReset}\n                handleGetKey={setCaptchaKey}\n              />\n            </Box>\n          ) : (\n            ''\n          )}\n          <B3Spin isSpinning={isLoading} size={20} isFlex={false}>\n            <B3ResetPassWordButton>\n              <CustomButton\n                type=\"submit\"\n                size=\"medium\"\n                onClick={handleSubmit(handleLoginClick)}\n                variant=\"contained\"\n                sx={{ width: 'auto' }}\n              >\n                {b3Lang('forgotPassword.resetPasswordBtn')}\n              </CustomButton>\n            </B3ResetPassWordButton>\n          </B3Spin>\n        </Box>\n      </Box>\n    </B3Card>\n  );\n}\n\nexport default function Page({ setOpenPage }: PageProps) {\n  const { logo } = useContext(GlobalContext).state;\n  const { loginPageDisplay } = useContext(CustomStyleContext).state;\n  const [isEnabledOnStorefront, setIsEnabledOnStorefront] = useState(false);\n  const [storefrontSiteKey, setStorefrontSiteKey] = useState('');\n\n  useEffect(() => {\n    const getIsEnabledOnStorefront = async () => {\n      try {\n        const response = await getStorefrontToken();\n\n        if (response) {\n          setIsEnabledOnStorefront(response.isEnabledOnStorefront);\n          setStorefrontSiteKey(response.siteKey);\n        }\n      } catch (e) {\n        b2bLogger.error(e);\n      }\n    };\n\n    getIsEnabledOnStorefront();\n  }, []);\n\n  return (\n    <ForgotPassword\n      setOpenPage={setOpenPage}\n      logo={loginPageDisplay.displayStoreLogo ? logo : undefined}\n      isEnabledOnStorefront={isEnabledOnStorefront}\n      storefrontSiteKey={storefrontSiteKey}\n    />\n  );\n}\n"],"names":["ForgotPassword","setOpenPage","isEnabledOnStorefront","storefrontSiteKey","logo","isMobile","useMobile","isLoading","setLoading","useState","b3Lang","useB3Lang","forgotPasswordFields","getForgotPasswordFields","isCaptchaMissing","setIsCaptchaMissing","captchaKey","setCaptchaKey","control","handleSubmit","getValues","formState","errors","setValue","watch","useForm","mode","navigate","useNavigate","emailAddressReset","useEffect","jsx","B3Card","children","jsxs","Box","sx","bgcolor","borderRadius","display","flexDirection","mr","ml","maxWidth","mt","LoginImage","ImageListItem","onClick","window","location","href","src","alt","loading","margin","alignItems","justifyContent","Typography","variant","B3CustomForm","formFields","color","alignSelf","marginLeft","marginTop","fontSize","Captcha","siteKey","size","email","handleGetKey","B3Spin","isSpinning","isFlex","B3ResetPassWordButton","CustomButton","type","async","emailAddress","data","requestResetPassword","e","b2bLogger","error","sendEmail","width","useContext","GlobalContext","state","loginPageDisplay","CustomStyleContext","setIsEnabledOnStorefront","setStorefrontSiteKey","response","getStorefrontToken","getIsEnabledOnStorefront","displayStoreLogo"],"mappings":"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"}