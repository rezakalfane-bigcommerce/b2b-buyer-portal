{"version":3,"file":"lang-legacy-TODaA4m_.js","sources":["../../../../packages/lang/LangProvider.tsx","../../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../../../../node_modules/use-sync-external-store/shim/index.js","../../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../../../../node_modules/use-sync-external-store/shim/with-selector.js","../../../../packages/lang/node_modules/react-redux/es/components/Context.js","../../../../packages/lang/node_modules/react-redux/es/hooks/useReduxContext.js","../../../../packages/lang/node_modules/react-redux/es/hooks/useSelector.js","../../../../packages/lang/node_modules/react-redux/es/utils/useSyncExternalStore.js","../../../../packages/lang/node_modules/react-redux/es/index.js","../../../../packages/lang/locales/index.ts","../../../../packages/lang/useB3Lang.ts"],"sourcesContent":["import { ReactNode } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport locales from './locales';\n\ninterface LangProviderProps {\n  readonly children: ReactNode;\n  readonly customText?: Record<string, string>;\n}\n\ntype Translations = Record<string, string>;\n\ninterface RootState {\n  lang: {\n    translations: Translations;\n  };\n}\n\nfunction LangProvider({ children, customText = {} }: LangProviderProps) {\n  const translations = useSelector<RootState, Translations>(({ lang }) => lang.translations);\n\n  return (\n    <IntlProvider\n      defaultLocale=\"en\"\n      locale=\"en\"\n      messages={{ ...locales.en, ...customText, ...translations }}\n    >\n      {children}\n    </IntlProvider>\n  );\n}\n\nexport default LangProvider;\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import * as React from 'react';\nconst ContextKey = Symbol.for(`react-redux-context`);\nconst gT = typeof globalThis !== \"undefined\" ? globalThis :\n/* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */\n{};\n\nfunction getContext() {\n  var _gT$ContextKey;\n\n  if (!React.createContext) return {};\n  const contextMap = (_gT$ContextKey = gT[ContextKey]) != null ? _gT$ContextKey : gT[ContextKey] = new Map();\n  let realContext = contextMap.get(React.createContext);\n\n  if (!realContext) {\n    realContext = React.createContext(null);\n\n    if (process.env.NODE_ENV !== 'production') {\n      realContext.displayName = 'ReactRedux';\n    }\n\n    contextMap.set(React.createContext, realContext);\n  }\n\n  return realContext;\n}\n\nexport const ReactReduxContext = /*#__PURE__*/getContext();\nexport default ReactReduxContext;","import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\n\n/**\r\n * Hook factory, which creates a `useReduxContext` hook bound to a given context. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useReduxContext` hook bound to the specified context.\r\n */\nexport function createReduxContextHook(context = ReactReduxContext) {\n  return function useReduxContext() {\n    const contextValue = useContext(context);\n\n    if (process.env.NODE_ENV !== 'production' && !contextValue) {\n      throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n    }\n\n    return contextValue;\n  };\n}\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useReduxContext = /*#__PURE__*/createReduxContextHook();","import { useCallback, useDebugValue, useRef } from 'react';\nimport { createReduxContextHook, useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { ReactReduxContext } from '../components/Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStoreWithSelector = notInitialized;\nexport const initializeUseSelector = fn => {\n  useSyncExternalStoreWithSelector = fn;\n};\n\nconst refEquality = (a, b) => a === b;\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context = ReactReduxContext) {\n  const useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : createReduxContextHook(context);\n  return function useSelector(selector, equalityFnOrOptions = {}) {\n    const {\n      equalityFn = refEquality,\n      stabilityCheck = undefined,\n      noopCheck = undefined\n    } = typeof equalityFnOrOptions === 'function' ? {\n      equalityFn: equalityFnOrOptions\n    } : equalityFnOrOptions;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`);\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`);\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(`You must pass a function as an equality function to useSelector`);\n      }\n    }\n\n    const {\n      store,\n      subscription,\n      getServerState,\n      stabilityCheck: globalStabilityCheck,\n      noopCheck: globalNoopCheck\n    } = useReduxContext();\n    const firstRun = useRef(true);\n    const wrappedSelector = useCallback({\n      [selector.name](state) {\n        const selected = selector(state);\n\n        if (process.env.NODE_ENV !== 'production') {\n          const finalStabilityCheck = typeof stabilityCheck === 'undefined' ? globalStabilityCheck : stabilityCheck;\n\n          if (finalStabilityCheck === 'always' || finalStabilityCheck === 'once' && firstRun.current) {\n            const toCompare = selector(state);\n\n            if (!equalityFn(selected, toCompare)) {\n              let stack = undefined;\n\n              try {\n                throw new Error();\n              } catch (e) {\n                ;\n                ({\n                  stack\n                } = e);\n              }\n\n              console.warn('Selector ' + (selector.name || 'unknown') + ' returned a different result when called with the same parameters. This can lead to unnecessary rerenders.' + '\\nSelectors that return a new reference (such as an object or an array) should be memoized: https://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization', {\n                state,\n                selected,\n                selected2: toCompare,\n                stack\n              });\n            }\n          }\n\n          const finalNoopCheck = typeof noopCheck === 'undefined' ? globalNoopCheck : noopCheck;\n\n          if (finalNoopCheck === 'always' || finalNoopCheck === 'once' && firstRun.current) {\n            // @ts-ignore\n            if (selected === state) {\n              let stack = undefined;\n\n              try {\n                throw new Error();\n              } catch (e) {\n                ;\n                ({\n                  stack\n                } = e);\n              }\n\n              console.warn('Selector ' + (selector.name || 'unknown') + ' returned the root state when called. This can lead to unnecessary rerenders.' + '\\nSelectors that return the entire state are almost certainly a mistake, as they will cause a rerender whenever *anything* in state changes.', {\n                stack\n              });\n            }\n          }\n\n          if (firstRun.current) firstRun.current = false;\n        }\n\n        return selected;\n      }\n\n    }[selector.name], [selector, globalStabilityCheck, stabilityCheck]);\n    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, wrappedSelector, equalityFn);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport const useSelector = /*#__PURE__*/createSelectorHook();","export const notInitialized = () => {\n  throw new Error('uSES not initialized!');\n};","// The primary entry point assumes we're working with standard ReactDOM/RN, but\n// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).\n// Because of that, the useSyncExternalStore compat shim is needed.\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch';\nimport { initializeUseSelector } from './hooks/useSelector';\nimport { initializeConnect } from './components/connect';\ninitializeUseSelector(useSyncExternalStoreWithSelector);\ninitializeConnect(useSyncExternalStore); // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };\nexport * from './exports';","import en from './en.json';\n\nexport default { en, custom: undefined };\n","import { useCallback } from 'react';\nimport { useIntl } from 'react-intl';\n\nexport type LangFormatFunction = (\n  id: string,\n  values?: Record<string, string | number | Date>,\n) => string;\n\nexport const useB3Lang: () => LangFormatFunction = () => {\n  const intl = useIntl();\n\n  return useCallback(\n    (id, values) => {\n      if (!id) {\n        return '';\n      }\n\n      return intl.formatMessage({ id, defaultMessage: id }, values);\n    },\n    [intl],\n  );\n};\n"],"names":["children","customText","translations","useSelector","lang","jsx","IntlProvider","defaultLocale","locale","messages","locales","en","e","require$$0","k","Object","is","a","b","l","useState","m","useEffect","n","useLayoutEffect","p","useDebugValue","r","getSnapshot","value","d","f","u","window","document","createElement","inst","c","g","useSyncExternalStoreShim_production_min","useSyncExternalStore","shimModule","exports","h","require$$1","q","t","useRef","v","useMemo","w","withSelector_production_min","useSyncExternalStoreWithSelector","current","hasValue","withSelectorModule","ContextKey","Symbol","for","gT","globalThis","getContext","_gT$ContextKey","React.createContext","createContext","contextMap","Map","realContext","get","set","ReactReduxContext","createReduxContextHook","context","useContext","useReduxContext","notInitialized","Error","refEquality","createSelectorHook","useDefaultReduxContext","selector","equalityFnOrOptions","equalityFn","stabilityCheck","noopCheck","store","subscription","getServerState","globalStabilityCheck","globalNoopCheck","wrappedSelector","useCallback","name","state","selectedState","addNestedSub","getState","fn","intl","useIntl","id","values","formatMessage","defaultMessage"],"mappings":"sOAmBA,UAAsBA,SAAEA,EAAAC,WAAUA,EAAa,KAC7C,MAAMC,EAAeC,GAAqC,EAAGC,UAAWA,EAAKF,eAG3E,OAAAG,EAAAA,IAACC,EAAA,CACCC,cAAc,KACdC,OAAO,KACPC,SAAU,IAAKC,EAAQC,MAAOV,KAAeC,GAE5CF,YAGP,4BCtBiBY,EAAEC,EAAoFC,EAAE,mBAAoBC,OAAOC,GAAGD,OAAOC,GAA1G,SAAWC,EAAEC,GAAG,OAAOD,IAAIC,IAAI,IAAID,GAAG,EAAEA,GAAI,EAAEC,IAAID,GAAIA,GAAGC,GAAIA,CAAC,EAAiDC,EAAEP,EAAEQ,SAASC,EAAET,EAAEU,UAAUC,EAAEX,EAAEY,gBAAgBC,EAAEb,EAAEc,cACtM,SAASC,EAAEV,GAAG,IAAIC,EAAED,EAAEW,YAAYX,EAAEA,EAAEY,MAAM,IAAI,IAAIC,EAAEZ,IAAI,OAAOJ,EAAEG,EAAEa,GAAG,MAAMC,GAAG,QAAS,CAAA,CAA4B,IAAIC,EAAE,oBAAqBC,aAAQ,IAAqBA,OAAOC,eAAU,IAAqBD,OAAOC,SAASC,cAAzI,SAAWlB,EAAEC,GAAG,OAAOA,GAAG,EAD+F,SAAWD,EAAEC,GAAG,IAAIY,EAAEZ,IAAIa,EAAEZ,EAAE,CAACiB,KAAK,CAACP,MAAMC,EAAEF,YAAYV,KAAKmB,EAAEN,EAAE,GAAGK,KAAKE,EAAEP,EAAE,GAAwJ,OAArJR,GAAE,WAAWc,EAAER,MAAMC,EAAEO,EAAET,YAAYV,EAAES,EAAEU,IAAIC,EAAE,CAACF,KAAKC,GAAG,GAAE,CAACpB,EAAEa,EAAEZ,IAAIG,GAAE,WAA6B,OAAlBM,EAAEU,IAAIC,EAAE,CAACF,KAAKC,IAAWpB,GAAE,WAAWU,EAAEU,IAAIC,EAAE,CAACF,KAAKC,GAAG,GAAE,GAAE,CAACpB,IAAIQ,EAAEK,GAAUA,CAAC,EAChLS,EAAAC,0BAAC,IAAS5B,EAAE4B,qBAAqB5B,EAAE4B,qBAAqBR,ECPjUS,EAAAC,QAAU7B,sCCMF8B,EAAE9B,EAAiBU,EAAEqB,EAA2GC,EAAE,mBAAoB9B,OAAOC,GAAGD,OAAOC,GAA1G,SAAWC,EAAEC,GAAG,OAAOD,IAAIC,IAAI,IAAID,GAAG,EAAEA,GAAI,EAAEC,IAAID,GAAIA,GAAGC,GAAIA,CAAE,EAAgDS,EAAEJ,EAAEiB,qBAAqBM,EAAEH,EAAEI,OAAOf,EAAEW,EAAErB,UAAU0B,EAAEL,EAAEM,QAAQC,EAAEP,EAAEjB,cAC/PyB,EAAAC,iCAAyC,SAASnC,EAAEC,EAAEN,EAAEO,EAAEmB,GAAG,IAAID,EAAES,EAAE,MAAM,GAAG,OAAOT,EAAEgB,QAAQ,CAAC,IAAItB,EAAE,CAACuB,UAAS,EAAGzB,MAAM,MAAMQ,EAAEgB,QAAQtB,CAAC,MAAMA,EAAEM,EAAEgB,QAAQhB,EAAEW,GAAE,WAAW,SAAS/B,EAAEA,GAAG,IAAIoB,EAAE,CAAiB,GAAhBA,GAAE,EAAGP,EAAEb,EAAEA,EAAEE,EAAEF,QAAM,IAASqB,GAAGP,EAAEuB,SAAS,CAAC,IAAIpC,EAAEa,EAAEF,MAAM,GAAGS,EAAEpB,EAAED,GAAG,OAAOH,EAAEI,EAAE,OAAOJ,EAAEG,CAAEC,CAAI,GAAJA,EAAEJ,EAAK+B,EAAEf,EAAEb,GAAG,OAAOC,EAAE,IAAIN,EAAEO,EAAEF,GAAG,YAAG,IAASqB,GAAGA,EAAEpB,EAAEN,GAAUM,GAAEY,EAAEb,EAASH,EAAEF,EAAE,CAAA,IAASkB,EAAEhB,EAAPuB,GAAE,EAAOhB,OAAE,IAAST,EAAE,KAAKA,EAAE,MAAM,CAAC,WAAW,OAAOK,EAAEC,IAAK,EAAC,OAAOG,OAAE,EAAO,WAAW,OAAOJ,EAAEI,IAAI,EAAE,GAAE,CAACH,EAAEN,EAAEO,EAAEmB,IAAI,IAAIR,EAAEH,EAAEV,EAAEoB,EAAE,GAAGA,EAAE,IACnc,OAAhDL,GAAE,WAAWD,EAAEuB,UAAS,EAAGvB,EAAEF,MAAMC,CAAC,GAAE,CAACA,IAAIoB,EAAEpB,GAAUA,CAAC,ECR/CyB,EAAAb,QAAU7B,kBCFnB,MAAM2C,EAAaC,OAAOC,IAAI,uBACxBC,EAA2B,oBAAfC,WAA6BA,WAAA,CAE/C,EAEA,SAASC,IACH,IAAAC,EAEJ,IAAKC,EAAqBC,cAAA,MAAO,CAAC,EAC5B,MAAAC,EAAkD,OAApCH,EAAiBH,EAAGH,IAAuBM,EAAiBH,EAAGH,GAAc,IAAIU,IACrG,IAAIC,EAAcF,EAAWG,IAAIL,iBAY1B,OAVFI,IACWA,EAAAJ,gBAAoB,MAMvBE,EAAAI,IAAIN,EAAMC,cAAeG,IAG/BA,CACT,CAEO,MAAMG,EAA4CT,IChBzC,SAAAU,EAAuBC,EAAUF,GAC/C,OAAO,WAOE,OANcG,aAAWD,EAOlC,CACF,CAkBO,MAAME,EAAsDH,IClCnE,IAAInB,ECJ0BuB,KAC5B,MAAU,IAAAC,MAAM,wBAAwB,EDInC,MAIDC,EAAcA,CAAC5D,EAAGC,IAAMD,IAAMC,EASpB,SAAA4D,EAAmBN,EAAUF,GAC3C,MAAMI,EAAkBF,IAAYF,EAAoBS,EAAyBR,EAAuBC,GACxG,OAAO,SAAqBQ,EAAUC,EAAsB,CAAA,GACpD,MAAAC,WACJA,EAAaL,EAAAM,eACbA,EAAiBC,UACjBA,GACiC,mBAAxBH,EAAqC,CAC9CC,WAAYD,GACVA,GAgBEI,MACJA,EAAAC,aACAA,EAAAC,eACAA,EACAJ,eAAgBK,EAChBJ,UAAWK,GACTf,IACa3B,EAAAA,QAAO,GACxB,MAAM2C,EAAkBC,EAAAA,YAAY,CAClC,CAACX,EAASY,MAAMC,GACGb,EAASa,IAyD5Bb,EAASY,MAAO,CAACZ,EAAUQ,EAAsBL,IAC7CW,EAAgB1C,EAAiCkC,EAAaS,aAAcV,EAAMW,SAAUT,GAAkBF,EAAMW,SAAUN,EAAiBR,GAE9I,OADPxD,EAAAA,cAAcoE,GACPA,CACT,CACF,CAyBO,MAAM3F,EAA8C2E,IAvIhBmB,QEIrB7C,mCFHeA,EAAA6C,QGJtBvF,EAAA,CAAEC,iuxCCMkC,KACjD,MAAMuF,EAAOC,IAEN,OAAAR,EAAAA,aACL,CAACS,EAAIC,IACED,EAIEF,EAAKI,cAAc,CAAEF,KAAIG,eAAgBH,GAAMC,GAH7C,IAKX,CAACH,GACH","x_google_ignoreList":[1,2,3,4,5,6,7,8,9]}