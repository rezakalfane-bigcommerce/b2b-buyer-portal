{"version":3,"file":"recaptcha-Dex3wZ2s.js","sources":["../../src/components/captcha/frameCaptchaCode.js?raw","../../src/components/captcha/Captcha.tsx","../../src/shared/service/b2b/graphql/recaptcha.ts"],"sourcesContent":["export default \"/* eslint-disable */\\n\\nwindow.INITIALIZE_CAPTCHA_PREFIX = function () {\\n  if (window.grecaptcha?.render === undefined) {\\n    return\\n  }\\n\\n  if (window.WIDGET_TIMER_PREFIX !== null) {\\n    window.clearInterval(window.WIDGET_TIMER_PREFIX)\\n    window.WIDGET_TIMER_PREFIX = null\\n  }\\n\\n  var sendMessage = function (eventType, payload) {\\n    window.parent.postMessage(\\n      'PREFIX' +\\n        JSON.stringify({\\n          type: eventType,\\n          payload: payload,\\n        }),\\n      'PARENT_ORIGIN'\\n    )\\n  }\\n\\n  window.grecaptcha.render(\\n    'PREFIX',\\n    {\\n      callback: function (token) {\\n        sendMessage('CAPTCHA_SUCCESS', token)\\n      },\\n      'error-callback': function () {\\n        sendMessage('CAPTCHA_ERROR', null)\\n      },\\n      'expired-callback': function () {\\n        sendMessage('CAPTCHA_EXPIRED', null)\\n      },\\n    },\\n    true\\n  )\\n}\\n\\nwindow.WIDGET_TIMER_PREFIX = window.setInterval(\\n  window.INITIALIZE_CAPTCHA_PREFIX,\\n  250\\n)\\n\"","import { useEffect, useMemo, useRef } from 'react';\n\nimport { themeFrameSelector, useAppSelector } from '@/store';\n\n// eslint-disable-next-line\nimport FRAME_HANDLER_CODE from './frameCaptchaCode.js?raw'\n\nconst CAPTCHA_URL = 'https://www.google.com/recaptcha/api.js?render=explicit';\nconst CAPTCHA_VARIABLES: Record<string, string> = {\n  PREFIX: '',\n  PARENT_ORIGIN: window.location.origin,\n  CAPTCHA_SUCCESS: 'captcha-success',\n  CAPTCHA_ERROR: 'captcha-error',\n  CAPTCHA_EXPIRED: 'captcha-expired',\n};\n\nexport interface CaptchaProps {\n  siteKey: string;\n  size?: 'compact' | 'normal';\n  theme?: 'dark' | 'light';\n  email?: string;\n  handleGetKey: (arg: string) => void;\n}\n\nexport function loadCaptchaScript(iframeDocument: HTMLIFrameElement['contentDocument']) {\n  if (iframeDocument?.head.querySelector(`script[src=\"${CAPTCHA_URL}\"]`) === null) {\n    const captchaScript = iframeDocument.createElement('script');\n    captchaScript.src = CAPTCHA_URL;\n    iframeDocument.head.appendChild(captchaScript);\n  }\n}\n\nexport function loadCaptchaWidgetHandlers(\n  iframeDocument: HTMLIFrameElement['contentDocument'],\n  widgetId: string,\n) {\n  if (!iframeDocument) return;\n\n  let code = FRAME_HANDLER_CODE;\n\n  CAPTCHA_VARIABLES.PREFIX = widgetId;\n\n  Object.entries(CAPTCHA_VARIABLES).forEach(([key, value]) => {\n    code = code.replace(RegExp(key, 'g'), value);\n  });\n\n  const handlerScript = iframeDocument.createElement('script');\n  handlerScript.textContent = code;\n  iframeDocument.head.appendChild(handlerScript);\n}\n\nexport function generateWidgetId() {\n  return `widget_${Date.now()}`;\n}\n\nexport function Captcha(props: CaptchaProps) {\n  const { theme, size, email, handleGetKey, siteKey } = props;\n  const iframeDocument = useAppSelector(themeFrameSelector);\n  const widgetId = useMemo(() => generateWidgetId(), []);\n  const initialized = useRef(false);\n\n  useEffect(() => {\n    const onMessage = (event: MessageEvent) => {\n      if (event?.data?.startsWith?.(widgetId)) {\n        const message = event.data.slice(widgetId.length);\n        const data = JSON.parse(message);\n\n        const key = data.payload;\n        switch (data.type) {\n          case CAPTCHA_VARIABLES.CAPTCHA_SUCCESS:\n            if (key) {\n              handleGetKey(key);\n            }\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n\n    window.addEventListener('message', onMessage, false);\n\n    return () => {\n      if (initialized.current) {\n        window.removeEventListener('message', onMessage);\n      }\n    };\n  }, [email, widgetId, handleGetKey]);\n\n  useEffect(() => {\n    if (iframeDocument === undefined || initialized.current) {\n      return;\n    }\n\n    loadCaptchaScript(iframeDocument);\n    loadCaptchaWidgetHandlers(iframeDocument, widgetId);\n    initialized.current = true;\n  }, [iframeDocument, widgetId]);\n\n  return <div id={widgetId} data-sitekey={siteKey} data-theme={theme} data-size={size} />;\n}\n","import B3Request from '../../request/b3Fetch';\n\nconst getStorefrontTokenQuery = `query {\n    site {\n        settings {\n            reCaptcha {\n                siteKey\n                isEnabledOnStorefront\n            }\n        }\n    }\n}`;\n\nconst resetPassword = `mutation recaptcha($token: String!, $email: String!) {\n    customer {\n      requestResetPassword(\n        reCaptchaV2: { \n            token: $token\n        },\n        input: {\n          email: $email,\n        }\n      ) {\n        errors {\n          ... on ValidationError {\n            message\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const requestResetPassword = (token: string, email: string): Promise<void> =>\n  B3Request.graphqlBCProxy({\n    query: resetPassword,\n    variables: { token, email },\n  });\n\ninterface CaptchaConfig {\n  siteKey: string;\n  isEnabledOnStorefront: boolean;\n}\n\nexport const getStorefrontToken = (): Promise<CaptchaConfig | undefined> =>\n  B3Request.graphqlBCProxy({\n    query: getStorefrontTokenQuery,\n  }).then((res) => res?.data?.site?.settings?.reCaptcha);\n"],"names":["FRAME_HANDLER_CODE","CAPTCHA_URL","CAPTCHA_VARIABLES","loadCaptchaScript","iframeDocument","captchaScript","loadCaptchaWidgetHandlers","widgetId","code","key","value","handlerScript","generateWidgetId","Captcha","props","theme","size","email","handleGetKey","siteKey","useAppSelector","themeFrameSelector","useMemo","initialized","useRef","useEffect","onMessage","event","_b","_a","message","data","jsx","getStorefrontTokenQuery","resetPassword","requestResetPassword","token","B3Request","getStorefrontToken","res","_c"],"mappings":"iJAAA,MAAeA,EAAA,29BCOTC,EAAc,0DACdC,EAA4C,CAChD,OAAQ,GACR,cAAe,OAAO,SAAS,OAC/B,gBAAiB,kBACjB,cAAe,gBACf,gBAAiB,iBACnB,EAUO,SAASC,EAAkBC,EAAsD,CACtF,IAAIA,GAAA,YAAAA,EAAgB,KAAK,cAAc,eAAe,OAAAH,EAAW,UAAU,KAAM,CACzE,MAAAI,EAAgBD,EAAe,cAAc,QAAQ,EAC3DC,EAAc,IAAMJ,EACLG,EAAA,KAAK,YAAYC,CAAa,CAAA,CAEjD,CAEgB,SAAAC,EACdF,EACAG,EACA,CACA,GAAI,CAACH,EAAgB,OAErB,IAAII,EAAOR,EAEXE,EAAkB,OAASK,EAEpB,OAAA,QAAQL,CAAiB,EAAE,QAAQ,CAAC,CAACO,EAAKC,CAAK,IAAM,CAC1DF,EAAOA,EAAK,QAAQ,OAAOC,EAAK,GAAG,EAAGC,CAAK,CAAA,CAC5C,EAEK,MAAAC,EAAgBP,EAAe,cAAc,QAAQ,EAC3DO,EAAc,YAAcH,EACbJ,EAAA,KAAK,YAAYO,CAAa,CAC/C,CAEO,SAASC,GAAmB,CAC1B,MAAA,UAAU,YAAK,IAAK,EAC7B,CAEO,SAASC,EAAQC,EAAqB,CAC3C,KAAM,CAAE,MAAAC,EAAO,KAAAC,EAAM,MAAAC,EAAO,aAAAC,EAAc,QAAAC,GAAYL,EAChDV,EAAiBgB,EAAeC,CAAkB,EAClDd,EAAWe,EAAQ,QAAA,IAAMV,EAAiB,EAAG,CAAA,CAAE,EAC/CW,EAAcC,SAAO,EAAK,EAEhCC,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAaC,GAAwB,SACzC,IAAIC,GAAAC,EAAAF,GAAA,YAAAA,EAAO,OAAP,YAAAE,EAAa,aAAb,MAAAD,EAAA,KAAAC,EAA0BtB,GAAW,CACvC,MAAMuB,EAAUH,EAAM,KAAK,MAAMpB,EAAS,MAAM,EAC1CwB,EAAO,KAAK,MAAMD,CAAO,EAEzBrB,EAAMsB,EAAK,QACjB,OAAQA,EAAK,KAAM,CACjB,KAAK7B,EAAkB,gBACjBO,GACFS,EAAaT,CAAG,EAElB,KAGA,CACJ,CAEJ,EAEO,cAAA,iBAAiB,UAAWiB,EAAW,EAAK,EAE5C,IAAM,CACPH,EAAY,SACP,OAAA,oBAAoB,UAAWG,CAAS,CAEnD,CACC,EAAA,CAACT,EAAOV,EAAUW,CAAY,CAAC,EAElCO,EAAAA,UAAU,IAAM,CACVrB,IAAmB,QAAamB,EAAY,UAIhDpB,EAAkBC,CAAc,EAChCE,EAA0BF,EAAgBG,CAAQ,EAClDgB,EAAY,QAAU,GAAA,EACrB,CAACnB,EAAgBG,CAAQ,CAAC,EAEtByB,MAAC,OAAI,GAAIzB,EAAU,eAAcY,EAAS,aAAYJ,EAAO,YAAWC,CAAM,CAAA,CACvF,CCnGA,MAAMiB,EAA0B,uKAW1BC,EAAgB,kWAoBTC,EAAuB,CAACC,EAAenB,IAClDoB,EAAU,eAAe,CACvB,MAAOH,EACP,UAAW,CAAE,MAAAE,EAAO,MAAAnB,CAAM,CAC5B,CAAC,EAOUqB,EAAqB,IAChCD,EAAU,eAAe,CACvB,MAAOJ,CACT,CAAC,EAAE,KAAMM,GAAA,WAAQ,OAAAC,GAAAZ,GAAAC,EAAAU,GAAA,YAAAA,EAAK,OAAL,YAAAV,EAAW,OAAX,YAAAD,EAAiB,WAAjB,YAAAY,EAA2B,UAAS"}