{"version":3,"file":"validatorRules-5VewWKv-.js","sources":["../../src/utils/validatorRules.ts"],"sourcesContent":["import { LangFormatFunction } from '@b3/lang';\n\nimport { re } from '../constants';\n\nexport interface ValidateOptions extends Record<string, any> {\n  max?: string | number;\n  min?: string | number;\n}\n\nexport const validatorRules =\n  (validateRuleTypes: string[], options?: ValidateOptions) =>\n  (val: string, b3lang: LangFormatFunction) => {\n    let str = '';\n    validateRuleTypes.forEach((item: string) => {\n      if (item === 'email' && val && !re.email.test(val)) {\n        str = b3lang('global.validatorRules.email');\n      } else if (val.length >= 200) {\n        str = b3lang('global.emailValidate.emailLength');\n      }\n\n      if (item === 'phone' && val && !re.phone.test(val)) {\n        str = b3lang('global.validatorRules.phoneNumber');\n      }\n      if (item === 'number' && val && !re.number.test(val)) {\n        str = b3lang('global.validatorRules.number');\n      }\n      if (item === 'max' && options?.max && Number(options.max) < Number(val)) {\n        str = b3lang('global.validatorRules.max', {\n          max: options.max,\n        });\n      }\n\n      if (item === 'password' && val && !re.password.test(val)) {\n        str = b3lang('global.validatorRules.passwords');\n      }\n    });\n    return str || undefined;\n  };\n"],"names":["validatorRules","validateRuleTypes","options","val","b3lang","str","item","re"],"mappings":"+CASO,MAAMA,EACX,CAACC,EAA6BC,IAC9B,CAACC,EAAaC,IAA+B,CAC3C,IAAIC,EAAM,GACQ,OAAAJ,EAAA,QAASK,GAAiB,CACtCA,IAAS,SAAWH,GAAO,CAACI,EAAG,MAAM,KAAKJ,CAAG,EAC/CE,EAAMD,EAAO,6BAA6B,EACjCD,EAAI,QAAU,MACvBE,EAAMD,EAAO,kCAAkC,GAG7CE,IAAS,SAAWH,GAAO,CAACI,EAAG,MAAM,KAAKJ,CAAG,IAC/CE,EAAMD,EAAO,mCAAmC,GAE9CE,IAAS,UAAYH,GAAO,CAACI,EAAG,OAAO,KAAKJ,CAAG,IACjDE,EAAMD,EAAO,8BAA8B,GAEzCE,IAAS,QAASJ,GAAA,MAAAA,EAAS,MAAO,OAAOA,EAAQ,GAAG,EAAI,OAAOC,CAAG,IACpEE,EAAMD,EAAO,4BAA6B,CACxC,IAAKF,EAAQ,GAAA,CACd,GAGCI,IAAS,YAAcH,GAAO,CAACI,EAAG,SAAS,KAAKJ,CAAG,IACrDE,EAAMD,EAAO,iCAAiC,EAChD,CACD,EACMC,GAAO,MAChB"}