{"version":3,"file":"validatorRules-legacy-CEy9rryY.js","sources":["../../src/utils/validatorRules.ts"],"sourcesContent":["import { LangFormatFunction } from '@b3/lang';\n\nimport { re } from '../constants';\n\nexport interface ValidateOptions extends Record<string, any> {\n  max?: string | number;\n  min?: string | number;\n}\n\nexport const validatorRules =\n  (validateRuleTypes: string[], options?: ValidateOptions) =>\n  (val: string, b3lang: LangFormatFunction) => {\n    let str = '';\n    validateRuleTypes.forEach((item: string) => {\n      if (item === 'email' && val && !re.email.test(val)) {\n        str = b3lang('global.validatorRules.email');\n      } else if (val.length >= 200) {\n        str = b3lang('global.emailValidate.emailLength');\n      }\n\n      if (item === 'phone' && val && !re.phone.test(val)) {\n        str = b3lang('global.validatorRules.phoneNumber');\n      }\n      if (item === 'number' && val && !re.number.test(val)) {\n        str = b3lang('global.validatorRules.number');\n      }\n      if (item === 'max' && options?.max && Number(options.max) < Number(val)) {\n        str = b3lang('global.validatorRules.max', {\n          max: options.max,\n        });\n      }\n\n      if (item === 'password' && val && !re.password.test(val)) {\n        str = b3lang('global.validatorRules.passwords');\n      }\n    });\n    return str || undefined;\n  };\n"],"names":["exports","validateRuleTypes","options","val","b3lang","str","forEach","item","re","email","test","length","phone","number","max","Number","password"],"mappings":"uIAUEA,EAAA,KAAA,CAACC,EAA6BC,IAC9B,CAACC,EAAaC,KACZ,IAAIC,EAAM,GAwBV,OAvBkBJ,EAAAK,SAASC,IACZ,UAATA,GAAoBJ,IAAQK,EAAGC,MAAMC,KAAKP,GAC5CE,EAAMD,EAAO,+BACJD,EAAIQ,QAAU,MACvBN,EAAMD,EAAO,qCAGF,UAATG,GAAoBJ,IAAQK,EAAGI,MAAMF,KAAKP,KAC5CE,EAAMD,EAAO,sCAEF,WAATG,GAAqBJ,IAAQK,EAAGK,OAAOH,KAAKP,KAC9CE,EAAMD,EAAO,iCAEF,QAATG,GAAkBL,GAASY,KAAOC,OAAOb,EAAQY,KAAOC,OAAOZ,KACjEE,EAAMD,EAAO,4BAA6B,CACxCU,IAAKZ,EAAQY,OAIJ,aAATP,GAAuBJ,IAAQK,EAAGQ,SAASN,KAAKP,KAClDE,EAAMD,EAAO,mCAAiC,IAG3CC,QAAO,CAAA"}